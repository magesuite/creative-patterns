{"version":3,"file":null,"sources":["../../action-button/src/action-button.ts","../../cc-component-adder/src/cc-component-adder.ts","../../cc-component-actions/src/cc-component-actions.ts","../../cc-component-placeholder/src/cc-component-placeholder.ts","../../cc-layout-builder/src/cc-layout-builder.ts","../../cc-component-picker/src/cc-component-picker.ts","../../cc-headline-configurator/src/cc-headline-configurator.ts","../../../customizations/m2c-headline-configurator/src/m2c-headline-configurator.ts","../src/m2c-content-constructor.ts"],"sourcesContent":["/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: ''\n        },\n        iconId: {\n            type: String\n        },\n        iconClasses: {\n            type: String\n        }\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onClick: function ( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        }\n    }\n};\n\nexport default actionButton;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<section class=\"cc-component-adder | {{ class }}\">\n        <div class=\"cc-component-adder__button-create\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n    </section>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: function ( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            }\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function\n        }\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent: function( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        }\n    }\n};\n\nexport default componentAdder;\n","import actionButton from '../../action-button/src/action-button.ts';\n\n/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__top\">\n            <slot name=\"cc-component-actions__top\"></slot>\n        </div>\n        <div class=\"cc-component-actions__bottom\">\n            <slot name=\"cc-component-actions__bottom\"></slot>\n        </div>\n    </aside>`,\n    components: {\n        'action-button': actionButton\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' )\n        },\n        /**\n         * Property containing callback triggered when user clicks move up button.\n         */\n        moveUp: {\n            type: Function\n        },\n        /**\n         * Property containing callback triggered when user clicks move down button.\n         */\n        moveDown: {\n            type: Function\n        },\n        /**\n         * Property containing callback triggered when user clicks settings button.\n         */\n        openSettings: {\n            type: Function\n        },\n        /**\n         * Property containing callback triggered when user clicks delete button.\n         */\n        deleteComponent: {\n            type: Function\n        }\n    },\n    methods: {\n        /**\n         * Move up button click handler.\n         * This handler triggers \"cc-component-actions__move-up\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onMoveUp: function ( event: Event ): void {\n            this.$dispatch( 'cc-component-actions__move-up', event );\n            if ( typeof this.moveUp === 'function' ) {\n                this.moveUp( event );\n            }\n        },\n        /**\n         * Move down button click handler.\n         * This handler triggers \"cc-component-actions__move-down\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onMoveDown: function ( event: Event ): void {\n            this.$dispatch( 'cc-component-actions__move-down', event );\n            if ( typeof this.moveDown === 'function' ) {\n                this.moveDown( event );\n            }\n        },\n        /**\n         * Settings button click handler.\n         * This handler triggers \"cc-component-actions__open-settings\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onOpenSettings: function ( event: Event ): void {\n            this.$dispatch( 'cc-component-actions__open-settings', event );\n            if ( typeof this.openSettings === 'function' ) {\n                this.openSettings( event );\n            }\n        },\n        /**\n         * Delete button click handler.\n         * This handler triggers \"cc-component-actions__delete-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onDeleteComponent: function ( event: Event ): void {\n            this.$dispatch( 'cc-component-actions__delete-component', event );\n            if ( typeof this.deleteComponent === 'function' ) {\n                this.deleteComponent( event );\n            }\n        }\n    }\n};\n\nexport default componentActions;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`\n};\n\nexport default componentPlaceholder;\n","import actionButton from '../../action-button/src/action-button';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\nimport template from './cc-layout-builder.tpl';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    settings: any;\n}\n\n/**\n * Layout builder component.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst layoutBuilder: vuejs.ComponentOption = {\n    template: template,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: ''\n        },\n        componentsConfiguration: {\n            type: String,\n            default: ''\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should take IComponentInformation and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         */\n        editComponent: {\n            type: Function,\n            default: ( componentInfo: IComponentInformation ): IComponentInformation => componentInfo\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         */\n        addComponent: {\n            type: Function,\n            default: (): IComponentInformation => undefined\n        }\n    },\n    data: function(): any {\n        return {\n            components: []\n        };\n    },\n    ready: function(): void {\n        // Set initial components configuration if provided.\n        this.components = this.componentsConfiguration ? JSON.parse( this.componentsConfiguration ) : [];\n        this.$dispatch( 'cc-layout-builder__update' );\n    },\n    methods: {\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then this compoennt will be inserted before it.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        addComponentInformation: function( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.splice( index, 0, componentInfo );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then it will be overwritten.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        setComponentInformation: function( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.$set( index, componentInfo );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Returns components information currently stored within layout builder.\n         * @return {IComponentInformation[]} Components information array.\n         */\n        getComponentInformation: function(): IComponentInformation[] {\n            return JSON.parse(\n                JSON.stringify( this.components )\n            );\n        },\n        /**\n         * Creates new component and adds it to a specified index.\n         * This function calls callback specified by \"add-component\" property that\n         * should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         * @param {number} index New component's index in components array.\n         */\n        createNewComponent: function ( index: number ): void {\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            const componentInfo: IComponentInformation = this.addComponent(\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.addComponentInformation( index, asyncComponentInfo );\n                }\n            );\n            this.addComponentInformation( index, componentInfo );\n        },\n        /**\n         * Initializes edit mode of component.\n         * This function invokes callback given by \"edit-component\" callback that\n         * should take current IComponentInformation as param and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         * @param {string} index: Component's index in array.\n         */\n        editComponentSettings: function( index: number ): void {\n            // Create a static, non-reactive copy of component data.\n            let componentInfo: IComponentInformation = JSON.parse(\n                JSON.stringify( this.components[ index ] )\n            );\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with current component data and callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            componentInfo = this.editComponent(\n                componentInfo,\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.setComponentInformation( index, asyncComponentInfo );\n                }\n            );\n            this.setComponentInformation( index, componentInfo );\n        },\n        /**\n         * Moves component under given index up by swaping it with previous element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentUp: function( index: number ): void {\n            if ( index > 0 ) {\n                let previousComponent: IComponentInformation = this.components[ index - 1 ];\n                this.components.$set( index - 1, this.components[ index ] );\n                this.components.$set( index, previousComponent );\n            }\n        },\n        /**\n         * Moves component under given index down by swaping it with next element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentDown: function( index: number ): void {\n            if ( index < this.components.length - 1 ) {\n                let previousComponent: IComponentInformation = this.components[ index + 1 ];\n                this.components.$set( index + 1, this.components[ index ] );\n                this.components.$set(  index, previousComponent );\n            }\n        },\n        /**\n         * Removes component and adder that is right after component from the DOM\n         * @param {number} index Component's index in array.\n         */\n        deleteComponent: function( index: number ): void {\n             if ( confirm( `Are you sure you want to remove this component?` ) ) {\n                this.components.splice( index, 1 );\n            }\n        },\n        /**\n         * Tells if component with given index is the first component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is first in array.\n         */\n        isFirstComponent: function( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if component with given index is the last component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is last in array.\n         */\n        isLastComponent: function( index: number ): boolean {\n            return index === this.components.length - 1;\n        }\n    },\n};\n\nexport default layoutBuilder;\nexport { layoutBuilder, IComponentInformation };\n","import template from './cc-component-picker.tpl';\n\n/**\n * Single component information object.\n */\ninterface IComponentInformation {\n    type: string;\n    /**\n     * Cover image url.\n     * @type {string}\n     */\n    cover: string;\n    /**\n     * Cover image alt attribute value.\n     * @type {string}\n     */\n    coverAlt: string;\n    name: string;\n}\n\n/**\n * Components information object that should be returned by AJAX call to API.\n */\ninterface IComponentsInformation {\n    components: IComponentInformation[];\n}\n\n/**\n * Componen picker.\n * Lists all types of components available in m2c in the grid/list mode\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentPicker: vuejs.ComponentOption = {\n    template: template,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-picker', '' )\n        },\n        /**\n         * Property containing callback triggered when user picks component.\n         */\n        pickComponent: {\n            type: Function\n        },\n        /**\n         * JSON stringified array containing available components.\n         */\n        components: {\n            type: String,\n            default: ''\n        },\n        /**\n         * URL for API returning JSON stringified array containing available components.\n         */\n        componentsEndpoint: {\n            type: String,\n            default: ''\n        }\n    },\n    data: function(): any {\n        return {\n            availableComponents: []\n        };\n    },\n    ready: function(): void {\n        // If inline JSON is provided then parse it.\n        if ( this.components ) {\n            this.availableComponents = JSON.parse( this.components );\n        } else if ( this.componentsEndpoint ) {\n            // Otherwise load from endpoint if URL provided.\n            this.$http.get( this.componentsEndpoint ).then( function( response: vuejs.HttpResponse ): void {\n                this.availableComponents = response.json();\n            } );\n        }\n    },\n    methods: {\n        /**\n         * Component pick click handler.\n         * This handler triggers \"cc-component-picker__pick\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onPickComponent: function ( componentType: String ): void {\n            console.log( `Component ${componentType} picked.` );\n            this.$dispatch( 'cc-component-picker__pick', componentType );\n\n            if ( typeof this.pickComponent === 'function' ) {\n                this.pickComponent( componentType );\n            }\n        }\n    },\n};\n\nexport default ccComponentPicker;\n","import csInputs from '../../cs-inputs/src/cs-inputs';\n\n/**\n * Single component information object.\n */\ninterface IComponentInformation {\n    type: string;\n    /**\n     * Component ID\n     * @type {string}\n     */\n    id: string;\n    /**\n     * component data values from inputs\n     * @type {string}\n     */\n    data: Object;\n}\n\n/**\n * Components information object that should be returned by AJAX call to API.\n */\ninterface IComponentsInformation {\n    components: IComponentInformation[];\n}\n\n/**\n * Headline configurator component.\n * This component is responsible for displaying headlines configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccHeadlineConfigurator: vuejs.ComponentOption = {\n    template: `<form class=\"cc-headline-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-headline\" class=\"cs-input__label\">Headline:</label>\n            <input type=\"text\" v-model=\"title\" id=\"cfg-headline\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-subheadline\" class=\"cs-input__label\">Subheadline:</label>\n            <input type=\"text\" v-model=\"subtitle\" id=\"cfg-subheadline\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: ''\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         */\n        save: {\n            type: Function\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         */\n        change: {\n            type: Function\n        }\n    },\n    data: function(): any {\n        return {\n            title: '',\n            subtitle: ''\n        };\n    },\n    methods: {\n        onChange: function( event: Event ): void {\n            const data = JSON.parse( JSON.stringify( this.$data ) );\n\n            this.$dispatch( 'cc-headline-configurator__change', data );\n\n            if ( typeof this.change === 'function' ) {\n                this.change( data );\n            }\n        },\n        onSave: function( event: Event ): void {\n            const data = JSON.parse( JSON.stringify( this.$data ) );\n\n            this.$dispatch( 'cc-headline-configurator__save', data );\n\n            if ( typeof this.save === 'function' ) {\n                this.save( data );\n            }\n        }\n    }\n};\n\nexport default ccHeadlineConfigurator;\n","import ccHeadlineConfigurator from '../../../components/cc-headline-configurator/src/cc-headline-configurator';\n//import m2Iinput from '../../m2-input/src/m2-input';\n\nconst m2cHeadlineConfigurator: vuejs.ComponentOption = {\n    template: `<form class=\"m2c-headline-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-headline\" class=\"m2-input__label\">Headline:</label>\n            <input type=\"text\" v-model=\"title\" id=\"cfg-headline\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-subheadline\" class=\"m2-input__label\">Subheadline:</label>\n            <input type=\"text\" v-model=\"subtitle\" id=\"cfg-subheadline\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n    </form>`,\n    mixins: [ccHeadlineConfigurator]\n};\n\nexport default m2cHeadlineConfigurator;\n","// This is an UMD module to work with Magento 2 requirejs system.\n\nimport Vue from 'Vue';\nimport { layoutBuilder, IComponentInformation } from '../../cc-layout-builder/src/cc-layout-builder';\nimport ccComponentPicker from '../../cc-component-picker/src/cc-component-picker';\nimport m2cHeadlineConfigurator from '../../../customizations/m2c-headline-configurator/src/m2c-headline-configurator';\nimport $ from 'jquery';\nimport modal from 'Magento_Ui/js/modal/modal';\nimport $t from 'mage/translate';\nimport vr from 'VueResource';\nimport uiRegistry from 'uiRegistry';\n\n// Use Vue resource\nVue.use( vr );\n\n// Picker modal options\nlet pickerModalOptions: any = {\n    type: 'slide',\n    responsive: true,\n    innerScroll: true,\n    autoOpen: true,\n    title: $t( 'Please select type of component' ),\n    buttons: [\n        {\n            text: $.mage.__( 'Cancel' ),\n            class: '',\n            click: function (): void {\n                this.closeModal();\n            }\n        }\n    ]\n};\nlet $pickerModal: any;\n\nlet configuratorModalOptions: any = {\n    type: 'slide',\n    responsive: true,\n    innerScroll: true,\n    autoOpen: true,\n    title: $t( 'Configure your component' ),\n    buttons: [\n        {\n            text: $.mage.__( 'Cancel' ),\n            class: '',\n            click: function (): void {\n                this.closeModal();\n            }\n        },\n        {\n            text: $.mage.__( 'Save' ),\n            class: 'action-primary'\n        }\n    ],\n    closed: function(): void {\n        this.innerHTML = '';\n    }\n};\nlet $configuratorModal: any;\n\n/**\n * M2C Content Constructor component.\n * This is the final layer that is responsible for collecting and tying up all\n * of the M2C admin panel logic.\n */\nconst m2cContentConstructor: vuejs.ComponentOption = {\n    template: `<div class=\"m2c-content-constructor\">\n        <cc-layout-builder\n            v-ref:layout-builder\n            :add-component=\"getComponentPicker\"\n            :edit-component=\"editComponent\"\n            :components-configuration=\"configuration\">\n        </cc-layout-builder>\n        <div class=\"m2c-content-constructor__modal m2c-content-constructor__modal--picker\" v-el:picker-modal>\n            <cc-component-picker\n                :pick-component=\"getComponentConfigurator\"\n                components='[{\"type\":\"static-block\",\"cover\":\"http://placehold.it/350x185\",\"coverAlt\":\"cover of static block\",\"name\":\"Static block\"},{\"type\":\"headline\",\"cover\":\"http://placehold.it/350x185\",\"coverAlt\":\"cover of headline\",\"name\":\"Headline\"}]'>\n            </cc-component-picker>\n        </div>\n        <div class=\"m2c-content-constructor__modal m2c-content-constructor__modal--configurator\" v-el:configurator-modal></div>\n    </div>`,\n    components: {\n        'cc-layout-builder': layoutBuilder,\n        'cc-component-picker': ccComponentPicker,\n    },\n    props: {\n        configuration: {\n            type: String,\n            default: ''\n        }\n    },\n    ready: function(): void {\n        this.dumpConfiguration();\n    },\n    events: {\n        /**\n         * We update provided input with new components information each time leyout\n         * builder updates.\n         */\n        'cc-layout-builder__update': function(): void {\n            this.dumpConfiguration();\n        },\n        'cc-headline-configurator__change': function( data: any ): void {\n            console.log( data );\n            this._currentConfiguratorData = data;\n        }\n    },\n    methods: {\n        /**\n         * Callback that will be invoked when user clicks plus button.\n         * This method should open magento modal with component picker.\n         * @param  {IComponentInformation} addComponentInformation Callback that let's us add component asynchronously.\n         */\n        getComponentPicker: function( addComponentInformation: ( componentInfo: IComponentInformation ) => void ): void {\n            console.log( 'Getting component picker.' );\n            // Save adding callback for async use.\n            this._addComponentInformation = addComponentInformation;\n            // Open picker modal.\n            $pickerModal = modal( pickerModalOptions, $( this.$els.pickerModal ) );\n        },\n        getComponentConfigurator: function( componentType: string ): void {\n            console.log( `Getting configurator for ${componentType} component.` );\n            const component: any = this;\n            component._currentConfiguratorData = {};\n            // Open configurator modal.\n            configuratorModalOptions.buttons[1].click = function (): void {\n                component._addComponentInformation(  {\n                    type: 'headline',\n                    id: 'component' + Math.floor( ( 1 + Math.random() ) * 0x10000 ).toString( 16 ).substring( 1 ),\n                    data: component._currentConfiguratorData\n                } );\n\n                this.closeModal();\n                $pickerModal.closeModal();\n            };\n            configuratorModalOptions.opened = function(): void {\n                const modal: HTMLElement = this;\n\n                const headlineConfigurator: any = Vue.extend( m2cHeadlineConfigurator );\n                new headlineConfigurator( {\n                    parent: component\n                } ).$mount().$appendTo( modal );\n            };\n\n            $configuratorModal = modal( configuratorModalOptions, $( this.$els.configuratorModal ) );\n        },\n        /**\n         * Callback that will be invoked when user clicks edit button.\n         * This method should open magento modal with component editor.\n         * @param  {IComponentInformation} setComponentInformation Callback that let's us add component asynchronously.\n         */\n        editComponent: function( currentInfo: IComponentInformation, setComponentInformation: ( componentInfo: IComponentInformation ) => void ): void {\n            // Open magento modal and invoke given callback with component information like below.\n            setComponentInformation( {\n                name: 'Nowa Nazwa komponentu',\n                id: 'Nowe ID komponentu',\n                settings: 'Nowe Jakieś ustawienia'\n            } );\n        },\n        dumpConfiguration: function(): void {\n            uiRegistry.get('cms_page_form.cms_page_form').source.set(\n                'data.components',\n                JSON.stringify(\n                    this.$refs.layoutBuilder.getComponentInformation()\n                )\n            );\n        },\n    }\n};\n\nexport default m2cContentConstructor;\n"],"names":["template"],"mappings":"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"}