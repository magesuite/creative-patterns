{"version":3,"file":null,"sources":["../../cc-component-configurator/src/cc-component-configurator.ts","../../cc-button-configurator/src/cc-button-configurator.ts","../../../customizations/m2c-button-configurator/src/m2c-button-configurator.ts","../../cc-category-links-configurator/src/cc-category-links-configurator.ts","../../cc-category-picker/src/cc-category-picker-templates.ts","../../cc-category-picker/src/cc-category-picker.ts","../../../customizations/m2c-category-links-configurator/src/m2c-category-links-configurator.ts","../../cc-headline-configurator/src/cc-headline-configurator.ts","../../../customizations/m2c-headline-configurator/src/m2c-headline-configurator.ts","../../action-button/src/action-button.ts","../../cc-component-actions/src/cc-component-actions.ts","../../cc-component-adder/src/cc-component-adder.ts","../../cc-component-placeholder/src/cc-component-placeholder.ts","../../cc-hero-carousel-configurator/src/cc-hero-carousel-configurator.ts","../../../customizations/m2c-hero-carousel-configurator/src/m2c-hero-carousel-configurator.ts","../../cc-image-teaser-configurator/src/cc-image-teaser-configurator.ts","../../../customizations/m2c-image-teaser-configurator/src/m2c-image-teaser-configurator.ts","../../cc-paragraph-configurator/src/cc-paragraph-configurator.ts","../../../customizations/m2c-paragraph-configurator/src/m2c-paragraph-configurator.ts","../../cc-product-carousel-configurator/src/cc-product-carousel-configurator.ts","../../../customizations/m2c-product-carousel-configurator/src/m2c-product-carousel-configurator.ts","../../cc-products-grid-configurator/src/cc-products-grid-configurator.ts","../../../customizations/m2c-products-grid-configurator/src/m2c-products-grid-configurator.ts","../../cc-static-block-configurator/src/cc-static-block-configurator.ts","../../../customizations/m2c-static-block-configurator/src/m2c-static-block-configurator.ts","../../cc-magento-product-grid-teasers-configurator/src/cc-magento-product-grid-teasers-configurator.ts","../../../customizations/m2c-magento-product-grid-teasers-configurator/src/m2c-magento-product-grid-teasers-configurator.ts","../../cc-component-picker/src/cc-component-picker.ts","../../cc-component-brand-carousel-preview/src/cc-component-brand-carousel-preview.ts","../../cc-component-button-preview/src/cc-component-button-preview.ts","../../cc-component-category-links-preview/src/cc-component-category-links-preview.ts","../../cc-component-headline-preview/src/cc-component-headline-preview.ts","../../cc-component-image-teaser-preview/src/cc-component-image-teaser-preview.ts","../../cc-component-hero-carousel-preview/src/cc-component-hero-carousel-preview.ts","../../cc-component-paragraph-preview/src/cc-component-paragraph-preview.ts","../../cc-component-product-carousel-preview/src/cc-component-product-carousel-preview.ts","../../cc-component-product-grid-preview/src/cc-component-product-grid-preview.ts","../../cc-component-separator-preview/src/cc-component-separator-preview.ts","../../cc-component-static-cms-block-preview/src/cc-component-static-cms-block-preview.ts","../../cc-component-magento-product-grid-teasers-preview/src/cc-component-magento-product-grid-teasers-preview.ts","../../cc-layout-builder/src/cc-layout-builder.ts","../../../customizations/m2c-layout-builder/src/m2c-layout-builder.ts","../src/m2c-content-constructor.ts"],"sourcesContent":["/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * button configurator component.\n * This component is responsible for displaying buttons configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccButtonConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-button-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-label\" class=\"cs-input__label\">Label:</label>\n            <input type=\"text\" v-model=\"configuration.label\" id=\"cfg-label\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-target\" class=\"cs-input__label\">Target:</label>\n            <input type=\"text\" v-model=\"configuration.target\" id=\"cfg-target\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default: {\n                label: '',\n                target: '',\n            },\n        },\n    },\n};\n\nexport default ccButtonConfigurator;\n","import ccButtonConfigurator from '../../../components/cc-button-configurator/src/cc-button-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\n\nconst m2cButtonConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccButtonConfigurator,\n    ],\n    template: `<form class=\"m2c-button-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-label\" class=\"m2-input__label\">${$t( 'Label' )}:</label>\n            <input type=\"text\" v-model=\"configuration.label\" id=\"cfg-label\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"m2-input m2-input--type-addon m2-input--type-inline | m2c-button-configurator__item-form-element\">\n            <label for=\"cfg-target\" class=\"m2-input__label\">${$t( 'Target' )}:</label>\n            <div class=\"m2-input__addon-wrapper\">\n                <input type=\"text\" class=\"m2-input__input | m2c-button-configurator__target\" v-model=\"configuration.target\" id=\"cfg-target\">\n                <span class=\"m2-input__addon | m2c-button-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal()\">\n                    <svg class=\"m2-input__addon-icon\">\n                        <use xlink:href=\"#icon_link\"></use>\n                    </svg>\n                </span>\n            </div>\n        </div>\n    </form>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    label: '',\n                    target: '',\n                };\n            },\n        },\n        /* Get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            this.onSave();\n        },\n    },\n    methods: {\n        /* Opens modal with M2 built-in widget chooser\n         */\n        openCtaTargetModal(): void {\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/filter_widgets/Link/widget_target_id/cfg-target` );\n\n            this.wWidgetListener();\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of target input is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-button-configurator__cta-target-link' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         */\n        wWidgetListener(): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                const _this: any = this;\n                const button: any = widgetTools.dialogWindow[ 0 ].querySelector( '#insert_button' );\n\n                button.onclick = null;\n                button.addEventListener( 'click', function(): void {\n                    _this.configuration.target = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                setTimeout( this.wWidgetListener, 300 );\n            }\n        },\n    },\n    ready(): void {\n        this.widgetSetListener();\n    },\n};\n\nexport default m2cButtonConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Category links configurator component.\n * This component is responsible for displaying category links configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccCategoryLinksConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-category-links-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-main_category_id\" class=\"cs-input__label\">Main category ID:</label>\n            <input type=\"text\" v-model=\"configuration.main_category_id\" id=\"cfg-main_category_id\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-sub_categories_ids\" class=\"cs-input__label\">Subcategories ID's:</label>\n            <input type=\"text\" v-model=\"configuration.sub_categories_ids\" id=\"cfg-sub_categories_ids\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-shownumbers\" class=\"cs-input__label\">Show products count:</label>\n            <input type=\"checkbox\" v-model=\"configuration.shownumbers\" id=\"cfg-shownumbers\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    main_category_id: '',\n                    sub_categories_ids: '',\n                    shownumbers: false,\n                };\n            },\n        },\n    },\n};\n\nexport default ccCategoryLinksConfigurator;\n","const templates: any = {\n    getComponentTemplate( classes: any, placeholders: any, disabledClass: string ): string {\n        return `<div class=\"m2-input__fake-select | ${ classes.input.base } ${ disabledClass }\">${ placeholders.select }</div>\n        <div class=\"${ classes.input.base }-opener\"></div>\n        <div class=\"${ classes.menu.base }\">\n            <div class=\"${ classes.search.wrapper }\">\n                <input class=\"m2-input__input | ${ classes.search.input }\" data-role=\"advanced-select-text\" type=\"text\" placeholder=\"${ placeholders.search }\">\n                <div class=\"${ classes.search.resultsQty }\"></div>\n            </div>\n            <div class=\"${ classes.menu.content }\"></div>\n            <div class=\"${ classes.search.resultsWrapper }\"></div>\n            <div class=\"${ classes.actions.wrapper }\">\n                <button class=\"action-default | ${ classes.actions.button }\" type=\"button\">${ placeholders.doneButton }</button>\n            </div>\n        </div>`;\n    },\n    getMinimalComponentTemplate( classes: any, placeholders: any, disabledClass: string ): string {\n        return `<div class=\"m2-input__fake-select | ${ classes.input.base } ${ disabledClass }\">${ placeholders.select }</div>\n        <div class=\"${ classes.input.base }-opener\"></div>\n        <div class=\"${ classes.menu.base }\">\n            <div class=\"${ classes.menu.content }\"></div>\n            <div class=\"${ classes.actions.wrapper }\">\n                <button class=\"action-default | ${ classes.actions.button }\" type=\"button\">${ placeholders.doneButton }</button>\n            </div>\n        </div>`;\n    },\n    getCrumbTemplate( baseClass: string, crumbLabel: string, title: string, inputValue: string ): string {\n        return `<span class=\"${ baseClass }__crumb\">\n            <span class=\"${ baseClass }__crumb-text\">${ crumbLabel }</span>\n            <button class=\"${ baseClass }__crumb-remove\" type=\"button\" title=\"${ title }\" tabindex=\"-1\" data-value=\"${ inputValue }\"></button>\n        </span>`;\n    },\n};\n\nexport default templates;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport templates from './cc-category-picker-templates';\n\n/**\n * component options interface.\n * Please refer to swiper documentation and our teaser component for more options and callbacks\n */\ninterface CcCategoryPickerOptions {\n    /**\n     * Tells if multiple categories can be selected\n     * @type {boolean}\n     * @default true\n     */\n    multiple?: boolean;\n\n    /**\n     * Tells if picker should initialize with disabled items that have no children\n     * @type {boolean}\n     * @default false\n     */\n    disableLastLevelItems?: boolean;\n\n    /**\n     * Tells if picker should show children items or only root\n     * @type {boolean}\n     * @default false\n     */\n    showChildren?: boolean;\n\n    /**\n     * Tells if live-search functionality should be enabled\n     * @type {boolean}\n     * @default true\n     */\n    showSearch?: boolean;\n\n    /**\n     * Tells if picker should initialize as disabled\n     * @type {boolean}\n     * @default false\n     */\n    disabled?: boolean;\n\n    placeholders?: {\n        /**\n         * Placeholder for select field.\n         * This string will be translateable via M2 JS translation system\n         * @type {string}\n         * @default Select...\n         */\n        select?: string;\n\n        /**\n         * Placeholder for Done button (on the bottom of UI box).\n         * This string will be translateable via M2 JS translation system\n         * @type {string}\n         * @default Done\n         */\n        doneButton?: string;\n\n        /**\n         * Placeholder for search input\n         * This string will be translateable via M2 JS translation system\n         * @type {string}\n         * @default [empty]\n         */\n        search?: string;\n    };\n\n    classes?: {};\n};\n\nexport default class CcCategoryPicker {\n    protected _$output: any;\n    protected _categoriesData: any;\n    protected _isOpen: boolean;\n    protected _options: any;\n    protected _$wrapper: any;\n    protected _orderedCheckboxes: any;\n    protected _prefix: string;\n    public _categoriesLabels: any;\n\n    /**\n     * Creates new CcCategoryPicker component with optional settings.\n     * @param {$output} Hidden input field that will be filled with IDs after used choses it\n     * @param {data} JSON with categories data\n     * @param {options}  Optional settings object.\n     */\n    public constructor( $output: JQuery, data: any, options?: CcCategoryPickerOptions ) {\n        this._defaults = {\n            multiple: true,\n            showChildren: true,\n            showSearch: true,\n            disabled: false,\n            disableLastLevelItems: false,\n            placeholders: {\n                select: $t( 'Select...' ),\n                doneButton: $t( 'Done' ),\n                search: $t( 'Type category name to search...' ),\n                empty: $t( 'There are no categories matching your selection' ),\n            },\n            classes: {\n                base: 'cc-category-picker',\n                input: {\n                    base: 'cc-category-picker__input',\n                },\n                menu: {\n                    base: 'cc-category-picker__box',\n                    open: 'cc-category-picker__box--open',\n                    content: 'cc-category-picker__box-content',\n                },\n                search: {\n                    wrapper: 'cc-category-picker__search',\n                    input: 'cc-category-picker__search-input',\n                    label: 'cc-category-picker__results-label',\n                    resultsQty: 'cc-category-picker__results-qty',\n                    resultsWrapper: 'cc-category-picker__results',\n                    resultsUL: 'cc-category-picker__results-list',\n                    resultsLI: 'cc-category-picker__results-item',\n                    resultsPath: 'cc-category-picker__results-path',\n                },\n                actions: {\n                    wrapper: 'cc-category-picker__actions',\n                    button: 'cc-category-picker__button',\n                },\n                dropdown: {\n                    ul: 'cc-category-picker__dropdown',\n                    li: 'cc-category-picker__dropdown-item',\n                    toggler: 'cc-category-picker__dropdown-toggler',\n                    label: 'cc-category-picker__label',\n                    checkbox: 'cc-category-picker__checkbox',\n                    radio: 'cc-category-picker__radio',\n                },\n            },\n        };\n\n        this._categoriesData = data;\n        this._categoriesLabels = [];\n        this._options = $.extend( this._defaults, options );\n        this._$output = $output;\n        this._$wrapper = undefined;\n        this._isOpen = false;\n        this._prefix = Math.random().toString( 36 ).substring( 2, 5 );\n        this._orderedCheckboxes = [];\n\n        this._renderPicker();\n        this._afterBuild();\n        this._rebuildValues();\n        this._setEvents();\n    }\n\n    /**\n     * This actually controls output of all events.\n     * Updates picker's crumbs and values\n     * @param {inputs} Optional. Array with inputs (checkboxes, radios) - they contain all data we need to show updated picker\n     */\n    public updatePicker( inputs?: any ): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n\n        const ids: string = $( inputs ).map( function(): string {\n            return this.value;\n        } ).get().join( ',' );\n\n        this._categoriesLabels = $( inputs ).map( function(): string {\n            return $( this ).next( 'label' ).clone().children().remove().end().text();\n        } );\n\n        const crumbs: string = $( inputs ).map( function(): string {\n            const label: string = $( this ).next( 'label' ).clone().children().remove().end().text();\n            return templates.getCrumbTemplate( c.base, label, $t( 'Remove this category' ), this.value );\n        } ).get().join( '' );\n\n        this._$output[ 0 ].value = ids;\n        this._$output[ 0 ].dispatchEvent( new Event( 'change' ) );\n\n        if ( crumbs !== '' ) {\n            this._$wrapper.find( `.${ c.input.base }` ).html( crumbs );\n        } else {\n            this._$wrapper.find( `.${ c.input.base }` ).html( this._options.placeholders.select );\n        }\n\n        this._setCrumbsEvents();\n    }\n\n    /**\n     * Opens given parent - displays its children\n     * @param {$item} Parent element, of which children we want to display\n     */\n    public openSubcategoriesTree( $item: any ): void {\n        const c: any = this._options.classes;\n\n        $item.find( `> .${ c.dropdown.ul }` ).toggleClass( `${ c.dropdown.ul }--hidden` );\n        $item.find( `> .${ c.dropdown.li }-content .${ c.dropdown.toggler }` ).toggleClass( `${ c.dropdown.toggler }--active` );\n    }\n\n    /**\n     * Opens picker's box\n     * @param {$wrapper} wrapper (root element) of the component, since we want to know which picker should be opened\n     */\n    public openPicker( $wrapper: any ): void {\n        // Close all open pickers if class matches\n        this.closePicker( $( `.${ this._options.classes.base }` ) );\n\n        $wrapper.find( '.m2-input__fake-select' ).addClass( 'm2-input__fake-select--active' );\n        $wrapper.find( `.${ this._options.classes.menu.base }` ).addClass( `${ this._options.classes.menu.base }--open` );\n        this.isOpen = true;\n    }\n\n    /**\n     * Closes picker's box\n     * @param {$wrapper} wrapper (root element) of the component, since we want to know which picker should be closed\n     */\n    public closePicker( $wrapper: any ): void {\n        $wrapper.find( '.m2-input__fake-select' ).removeClass( 'm2-input__fake-select--active' );\n        $wrapper.find( `.${ this._options.classes.menu.base }` ).removeClass( `${ this._options.classes.menu.base }--open` );\n        this.isOpen = false;\n    }\n\n    /**\n     * Rebuilds content of picker to show only children elements of given parent (category ID)\n     * @param {id} ID of category\n     */\n    public showChildrenOnly( id: number ): void {\n        const target = this._getChildren( id );\n\n        if ( target.optgroup ) {\n            this._orderedCheckboxes = [];\n            this._$wrapper.find( `.${ this._options.classes.menu.content }` ).html( this._getContents( target.optgroup, '', `${ this._options.classes.dropdown.ul }--normal` ) );\n            this._afterBuild( false );\n            this._rebuildValues();\n            this._setEvents();\n        } else {\n            this._$wrapper.find( `.${ this._options.classes.menu.content }` ).html( this._options.placeholders.empty );\n        }\n    }\n\n    /**\n     * Enables picker\n     */\n    public enable(): void {\n        this._$wrapper.find( `.${ this._options.classes.input.base }` ).removeClass( `${ this._options.classes.input.base }--disabled` );\n        this._options.disabled = false;\n    }\n\n    /**\n     * Disables picker\n     */\n    public disable(): void {\n        this._$wrapper.find( `.${ this._options.classes.input.base }` ).addClass( `${ this._options.classes.input.base }--disabled` );\n        this.closePicker( this._$wrapper );\n        this._options.disabled = true;\n    }\n\n    /**\n     * Clears output, crumbs and inputs array\n     */\n    public resetAll(): void {\n        this._$output[ 0 ].value = '';\n        this._$wrapper.find( `.${ this._options.classes.input.base }` ).html( this._options.placeholders.select );\n        this._orderedCheckboxes = [];\n    }\n\n    /**\n     * Renders picker component markup and initial setup\n     */\n    protected _renderPicker(): void {\n        const c: any = this._options.classes;\n        const t: any = this._options.placeholders;\n\n        const disabledClass = this._options.disabled ? `${ c.input.base }--disabled` : '';\n\n        let tpl: string = '';\n\n        if ( this._options.showChildren && this._options.showSearch ) {\n            tpl = templates.getComponentTemplate( c, t, disabledClass );\n        } else {\n            tpl = templates.getMinimalComponentTemplate( c, t, disabledClass );\n        }\n\n        this._$output.wrap( `<div class=\"${ c.base }\"></div>` );\n        this._$wrapper = this._$output.parent( `.${ c.base }` );\n        this._$wrapper.append( tpl );\n\n        if ( this._categoriesData.optgroup ) {\n            this._$wrapper.find( `.${ c.menu.content }` ).html( this._getContents( this._categoriesData.optgroup, '' ) );\n        } else {\n            this._$wrapper.find( `.${ c.menu.content }` ).html( t.empty );\n        }\n    }\n\n    /**\n     * Renders new options list based on given catehories data\n     * @param {data} Array of categories\n     */\n    protected _renderSearchResults( data: any ): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n        let result: string = '';\n\n        this._$wrapper.find( `.${ c.search.resultsWrapper }` ).html( '' );\n\n        if ( data.length ) {\n            result += `<ul class=\"${ c.search.resultsUL }\">`;\n\n            for ( let i: number = 0; i < data.length; i++ ) {\n                const path: string = $( data[ i ].path ).map( function(): string {\n                    return this;\n                } ).get().join( ' / ' );\n                const checked: string = $( `#cp-${ this._prefix }-${ data[ i ].value }` ).prop( 'checked' ) ? 'checked' : '';\n                const disabled: string = $( `#cp-${ this._prefix }-${ data[ i ].value }` ).prop( 'disabled' ) ? 'disabled' : '';\n\n                result += `<li class=\"${ c.search.resultsLI }\" role=\"option-group\">`;\n\n                if ( this._options.multiple ) {\n                    result += `<div class=\"m2-input m2-input--type-checkbox\">\n                        <input class=\"m2-input__checkbox | ${ c.dropdown.checkbox }\" type=\"checkbox\" value=\"${ data[ i ].value }\" name=\"cp-sr-${ this._prefix }[]\" id=\"cp-sr-${ this._prefix }-${ data[ i ].value }\" tabindex=\"-1\" ${ checked } ${ disabled }>`;\n                } else {\n                    result += `<div class=\"m2-input m2-input--type-radio\">\n                        <input class=\"m2-input__radio | ${ c.dropdown.radio }\" type=\"radio\" value=\"${ data[ i ].value }\" name=\"cp-sr-${ this._prefix }[]\" id=\"cp-sr-${ this._prefix }-${ data[ i ].value }\" tabindex=\"-1\" ${ checked } ${ disabled }>`;\n                }\n\n                result += `<label for=\"cp-sr-${ this._prefix }-${ data[ i ].value }\" class=\"m2-input__label | ${ c.search.label }\">\n                    ${ data[ i ].label } \n                    <span class=\"${ c.search.resultsPath }\">${ path }</span>\n                </label></div>\n                </li>`;\n            }\n\n            result += '</ul>';\n        }\n\n        this._$wrapper.find( `.${ c.search.resultsWrapper }` ).html( result );\n\n        this._$wrapper.find( `.${ c.search.resultsUL } input[type=\"checkbox\"]` ).off( 'change' ).on( 'change', function(): void {\n            _this._$wrapper.find( `.${ c.menu.content } :input[value=\"${ this.value }\"]` ).trigger( 'click' );\n        } );\n\n        const text: string = data.length === 1 ? `${ data.length } ${ $t( 'Result' ) }` : `${ data.length } ${ $t( 'Results' ) }`;\n        this._$wrapper.find( `.${ this._options.classes.search.resultsQty }` ).html( text );\n\n        this._setEvents();\n    }\n\n    /**\n     * Recursive method to filter categories by label based on given query (string or its part)\n     * @param {category} root category to start from\n     * @param {query} string that we look for in category labels\n     * @param {path} Path to the subcategory (used to display crumbs)\n     * @return {categories} Array of filtered categories\n     */\n    protected _getByQuery( category: any, query: string, path: any = [] ): any {\n        const categories: any = [];\n\n        if ( category.is_active === '1' && category.label && category.label.match( new RegExp( query, 'i' ) ) ) {\n            categories.push( {\n                label: category.label,\n                value: category.value,\n                path: path,\n            } );\n        }\n\n        if ( category.optgroup ) {\n            const categoryPath = category.label ? path.concat( [ category.label ] ) : [];\n            category.optgroup.forEach( subcategory => {\n                this._getByQuery( subcategory, query, categoryPath ).map( function( cat: any ): any {\n                    if ( subcategory.is_active === '1' ) {\n                        return categories.push( cat );\n                    }\n                } );\n            } );\n        }\n\n        return categories;\n    }\n\n    /**\n     * Recursive methods to filter categories collection to get only children of given ID\n     * @param {id} ID of category to filter\n     * @param {children} Optional - Array of children of a category\n     * @return {result} Filtered array of children\n     */\n    protected _getChildren( id: number, children?: any ): any {\n        const collection: any = children || this._categoriesData;\n\n        if ( collection.value && collection.value === id ) {\n            return collection;\n        }\n\n        if ( collection.optgroup ) {\n            const c = collection.optgroup;\n\n            for ( let i = 0; i < c.length; i++ ) {\n                const result: any = this._getChildren( id, c[ i ] );\n                if ( result ) {\n                    return result;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Recursive method to render list with categories as a radios / checkboxes using\n     * @param {categories} Array with categories\n     * @param {str} Current HTML markup of the list\n     * @param {dropdownModifier} Modifier class for dropdown for styling purposes\n     * @return {str} HTML markup of options list\n     */\n    protected _getContents( categories: any, str: string, dropdownModifier?: string ): string {\n        const c: any = this._options.classes;\n\n        if ( !dropdownModifier ) {\n            dropdownModifier = '';\n        }\n\n        str += `<ul class=\"${ c.dropdown.ul } ${ c.dropdown.ul }--hidden ${ dropdownModifier }\">`;\n\n        /**\n         * Loop through categories array and find optgroups.\n         * Then make a UL element out of each optgroup and build general markup\n         */\n        for ( let i: number = 0; i < categories.length; i++ ) {\n            if ( categories[ i ].is_active === '1' ) {\n                const checked = $( `#cp-${ this._prefix }-${ categories[ i ].value }` ).prop( 'checked' ) ? 'checked' : '';\n\n                str += `<li class=\"${ c.dropdown.li }\" data-role=\"option-group\">`;\n\n                if ( this._options.multiple ) {\n                    str += `<div class=\"m2-input m2-input--type-checkbox | ${ c.dropdown.li }-content\">\n                        <input class=\"m2-input__checkbox | ${ c.dropdown.checkbox }\" type=\"checkbox\" value=\"${ categories[ i ].value }\" name=\"cp-${ this._prefix }[]\" id=\"cp-${ this._prefix }-${ categories[ i ].value }\" tabindex=\"-1\" ${ checked }>`;\n                } else {\n                    str += `<div class=\"m2-input m2-input--type-radio | ${ c.dropdown.li }-content\">\n                        <input class=\"m2-input__radio | ${ c.dropdown.radio }\" type=\"radio\" value=\"${ categories[ i ].value }\" name=\"cp-${ this._prefix }[]\" id=\"cp-${ this._prefix }-${ categories[ i ].value }\" tabindex=\"-1\" ${ checked }>`;\n                }\n\n                str += `<label for=\"cp-${ this._prefix }-${ categories[ i ].value }\" class=\"m2-input__label | ${ c.dropdown.label }\">${ categories[ i ].label }</label>`;\n\n                if ( categories[ i ].optgroup && categories[ i ].optgroup.length && this._options.showChildren ) {\n                    str += `<div class=\"${ c.dropdown.toggler }\"></div></div>\n                        ${ this._getContents( categories[ i ].optgroup, '' ) }`;\n                } else {\n                    str += '</div>';\n                }\n\n                str += '</li>';\n            }\n        }\n\n        str += '</ul>';\n\n        return str;\n    }\n\n    /**\n     * Adjusts markup after it is build\n     */\n    protected _afterBuild( openSubTree?: boolean = true ): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n\n        this._$wrapper.find( `.${ c.menu.content } > .${ c.dropdown.ul }` ).removeClass( `${ c.dropdown.ul }--hidden` );\n\n        if ( openSubTree ) {\n            this.openSubcategoriesTree( this._$wrapper.find( `.${ c.menu.content } > ul > li:first-child` ) );\n        }\n\n        this._$wrapper.find( `.${ c.dropdown.li }` ).each( function(): void {\n            if ( $( this ).find( `.${ c.dropdown.ul }` ).length ) {\n                $( this ).addClass( `${ c.dropdown.li }--has-children` );\n            } else if ( _this._options.disableLastLevelItems ) {\n                $( this ).addClass( `${ c.dropdown.li }--disabled` ).find( 'input' ).prop( 'disabled', true );\n            }\n        } );\n    }\n\n    /**\n     * Support for exising value. If there is already some input (category IDs) in $output field\n     * then it constrols initialization to setup those categories in picker's output HTML\n     */\n    protected _rebuildValues(): void {\n        if ( this._$output[ 0 ].value !== '' ) {\n            const values = this._$output[ 0 ].value.split( ',' );\n\n            for ( let i: number = 0; i < values.length; i++ ) {\n                const $cb = this._$wrapper.find( `.${ this._options.classes.menu.content } input[value=\"${ values[ i ] }\"]` );\n                \n                if ( $cb.length ) {\n                    $cb.prop( 'checked', true );\n                    this._orderedCheckboxes.push( $cb[ 0 ] );\n                }\n            }\n\n            this.updatePicker( this._orderedCheckboxes );\n        }\n    }\n\n    /**\n     * Sets most of events of picker\n     */\n    protected _setEvents(): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n        const fKeys: any = [ 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 ]; // F1-F12\n        const listen: any = /^[a-z0-9]+$/i;\n\n        this._$wrapper.find( `.${ c.input.base }-opener` ).off( 'click' ).on( 'click', function(): void {\n            if ( _this.isOpen ) {\n                _this.closePicker( $( this ).parents( `.${ c.base }` ) );\n            } else {\n                _this.openPicker( $( this ).parents( `.${ c.base }` ) );\n            }\n        } );\n\n        this._$wrapper.find( `.${ c.actions.button }` ).off( 'click' ).on( 'click', function(): void {\n            _this.closePicker( $( this ).parents( `.${ c.base }` ) );\n        } );\n\n        this._$wrapper.find( `.${ c.dropdown.toggler }` ).off( 'click' ).on( 'click', function(): void {\n            _this.openSubcategoriesTree( $( this ).parents( `.${ c.dropdown.li }` ).first() );\n        } );\n\n        this._$wrapper.find( `.${ c.menu.content } input[type=\"checkbox\"]` ).off( 'change' ).on( 'change', function(): void {\n            const idx = _this._orderedCheckboxes.indexOf( this );\n\n            if ( idx !== -1 ) {\n                _this._orderedCheckboxes.splice( idx, 1 );\n            }\n\n            if ( this.checked ) {\n                _this._orderedCheckboxes.push( this );\n            }\n\n            for ( let i: number; i < _this._orderedCheckboxes.length; i++ ) {\n                val = _this._orderedCheckboxes[ i ].value;\n\n                if ( _this._$wrapper.find( `.${ c.search.resultsUL } input[value=\"${ val }\"]` ).length ) {\n                    _this._$wrapper.find( `.${ c.menu.content } input[value=\"${ val }\"]` ).prop( 'checked', true );\n                }\n            }\n\n            _this.updatePicker( _this._orderedCheckboxes );\n        } );\n\n        this._$wrapper.find( `.${ c.menu.base } input[type=\"radio\"]` ).off( 'change' ).on( 'change', function(): void {\n            if ( _this._$wrapper.find( `.${ c.search.resultsUL } input[value=\"${ this.value }\"]` ).length ) {\n                _this._$wrapper.find( `.${ c.menu.content } input[value=\"${ this.value }\"]` ).prop( 'checked', true );\n            }\n            _this.updatePicker( this );\n        } );\n\n        this._$wrapper.find( `.${ c.search.input }` ).off( 'keydown keyup' ).on( {\n            keydown: function( e: Event ): void {\n                if ( this.value.length > 1 ) {\n                    const key: any = String.fromCharCode( e.keyCode ).toLowerCase();\n\n                    if ( key.match( listen ) && fKeys.indexOf( e.which ) === -1 && !e.ctrlKey && !e.metaKey && !e.altKey ) {\n                        _this._renderSearchResults( _this._getByQuery( _this._categoriesData, this.value ) );\n                    }\n                }\n            },\n            keyup: function(): void {\n                if ( this.value.length > 2 ) {\n                    _this._$wrapper.find( `.${ c.search.resultsWrapper }` ).show();\n                    _this._$wrapper.find( `.${ c.search.resultsQty }` ).show();\n                    _this._$wrapper.find( `.${ c.menu.content }` ).hide();\n                } else {\n                    _this._$wrapper.find( `.${ c.search.resultsWrapper }` ).hide();\n                    _this._$wrapper.find( `.${ c.search.resultsQty }` ).hide();\n                    _this._$wrapper.find( `.${ c.menu.content }` ).show();\n                }\n            },\n        } );\n    }\n\n    /**\n     * Controls crumbs in picker's select field\n     */\n    protected _setCrumbsEvents(): void {\n        const _this: any = this;\n\n        this._$wrapper.find( `.${ _this._options.classes.base }__crumb-remove` ).off( 'click' ).on( 'click', function( e: Event ): void {\n            const $target: any = _this._$wrapper.find( `.${ _this._options.classes.menu.content } input[value=\"${ $( this ).data( 'value' ) }\"]` );\n            const $srTarget: any = _this._$wrapper.find( `.${ _this._options.classes.search.resultsWrapper } input[value=\"${ $( this ).data( 'value' ) }\"]` );\n\n            if ( _this._options.multiple ) {\n                $target.click();\n            } else {\n                if ( $target.prop( 'checked' ) ) {\n                    $target.prop( 'checked', false );\n                    _this.updatePicker();\n                }\n            }\n\n            if ( $srTarget.length ) {\n                $srTarget.prop( 'checked', !$srTarget.prop( 'checked' ) );\n            }\n\n            e.preventDefault();\n        } );\n    }\n}\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport ccCategoryLinksConfigurator from '../../../components/cc-category-links-configurator/src/cc-category-links-configurator';\nimport ccCategoryPicker from '../../../components/cc-category-picker/src/cc-category-picker';\n\nconst m2cCategoryLinksConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccCategoryLinksConfigurator,\n    ],\n    template: `<form class=\"m2c-category-links-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"m2-input m2-input--type-inline\">\n            <label class=\"m2-input__label\">${$t( 'Category' )}</label>\n            <input type=\"hidden\" v-model=\"configuration.main_category_id\" id=\"cp-main\">\n        </div>\n        <div class=\"m2-input m2-input--type-inline\">\n            <label class=\"m2-input__label\">${$t( 'Subcategories' )}</label>\n            <input type=\"hidden\" v-model=\"configuration.sub_categories_ids\" id=\"cp-sub\">\n        </div>\n        \n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-shownumbers\" class=\"m2-input__label\">${$t( 'Show products count' )}</label>\n            <div class=\"admin__actions-switch\" data-role=\"switcher\">\n                <input type=\"checkbox\" class=\"admin__actions-switch-checkbox\" id=\"cfg-shownumbers\" name=\"use_name_in_product_search\" v-model=\"configuration.shownumbers\" @change=\"onChange\">\n                <label class=\"admin__actions-switch-label\" for=\"cfg-shownumbers\">\n                    <span class=\"admin__actions-switch-text\" data-text-on=\"${$t( 'Yes' )}\" data-text-off=\"${$t( 'No' )}\"></span>\n                </label>\n            </div>\n        </div>\n    </form>`,\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            this.configuration.main_category_labels = this.categoryPicker._categoriesLabels;\n            this.configuration.sub_categories_labels = this.subCategoriesPicker._categoriesLabels;\n            this.onSave();\n        },\n    },\n    props: {\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            categoryPicker: undefined,\n            subCategoriesPicker: undefined,\n        };\n    },\n    ready(): void {\n        const _this: any = this;\n\n        // Show loader\n        $( 'body' ).trigger( 'showLoadingPopup' );\n\n        this.$http.get( this.categoriesDataUrl ).then( ( response: any ): void => {\n            _this.initializePickers( JSON.parse( response.body ) );\n            \n            // Hide loader\n            $( 'body' ).trigger( 'hideLoadingPopup' );\n        } );\n    },\n    methods: {\n        initializePickers( categories: any ): void {\n            const _this: any = this;\n\n            this.subCategoriesPicker = new ccCategoryPicker( $( '#cp-sub' ), categories, {\n                showSearch: false,\n                disabled: _this.configuration.main_category_id === '',\n            } );\n\n            this.categoryPicker = new ccCategoryPicker( $( '#cp-main' ), categories, {\n                multiple: false,\n            } );\n\n            if ( this.configuration.main_category_id !== '' ) {\n                this.subCategoriesPicker.showChildrenOnly( this.configuration.main_category_id );\n            }\n\n            $( '#cp-main' ).on( 'change', function() {\n                _this.updateSubcategoriesPicker( _this.configuration.main_category_id );\n            } );\n        },\n\n        updateSubcategoriesPicker( catId: string ): void {\n            this.subCategoriesPicker.resetAll();\n\n            if ( catId !== '' ) {\n                this.subCategoriesPicker.showChildrenOnly( catId );\n                this.subCategoriesPicker.enable();\n            } else {\n                this.subCategoriesPicker.disable();\n            }\n        }\n    },\n};\n\nexport default m2cCategoryLinksConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Headline configurator component.\n * This component is responsible for displaying headlines configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccHeadlineConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-headline-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-headline\" class=\"cs-input__label\">Headline:</label>\n            <input type=\"text\" v-model=\"configuration.title\" id=\"cfg-headline\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-subheadline\" class=\"cs-input__label\">Subheadline:</label>\n            <input type=\"text\" v-model=\"configuration.subtitle\" id=\"cfg-subheadline\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    title: '',\n                    subtitle: '',\n                };\n            },\n        },\n    },\n};\n\nexport default ccHeadlineConfigurator;\n","import ccHeadlineConfigurator from '../../../components/cc-headline-configurator/src/cc-headline-configurator';\n\nconst m2cHeadlineConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccHeadlineConfigurator,\n    ],\n    template: `<form class=\"m2c-headline-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-headline\" class=\"m2-input__label\">Headline:</label>\n            <input type=\"text\" v-model=\"configuration.title\" id=\"cfg-headline\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-subheadline\" class=\"m2-input__label\">Subheadline:</label>\n            <input type=\"text\" v-model=\"configuration.subtitle\" id=\"cfg-subheadline\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n    </form>`,\n};\n\nexport default m2cHeadlineConfigurator;\n","/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        },\n    },\n};\n\nexport default actionButton;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' ),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import template from './cc-hero-carousel-configurator.tpl';\n\nimport ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\n/**\n * Hero carousel configurator component.\n * This component is responsible for displaying image teaser's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccHeroCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: template,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [],\n                };\n            },\n        },\n    },\n};\n\nexport default ccHeroCarouselConfigurator;\n","import ccHeroCarouselConfigurator from '../../../components/cc-hero-carousel-configurator/src/cc-hero-carousel-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\n// Pattern for teaser Item\nconst heroItemDataPattern: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: 'variant-1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'Check offer' ),\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * M2C skin for Hero configurator component.\n * This component is responsible for displaying hero carousel's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cHeroCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccHeroCarouselConfigurator,\n    ],\n    template: `<div class=\"m2c-hero-carousel-configurator | {{ class }}\">\n        <section class=\"m2c-hero-carousel-configurator__section\">\n            <h3 class=\"m2c-hero-carousel-configurator__subtitle\">Mobile Devices Scenario</h3>\n            <div class=\"m2c-hero-carousel-configurator__scenario-options\">\n                <ul class=\"m2c-hero-carousel-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'm2c-hero-carousel-configurator__option--selected': configuration.mobileDisplayVariant.id == optionId,\n                        }\"\n                        class=\"m2c-hero-carousel-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.mobileDisplayVariant\"\n                        @click=\"setOption('mobileDisplayVariant', optionId)\">\n                        <div class=\"m2c-hero-carousel-configurator__option-wrapper\">\n                            <svg class=\"m2c-hero-carousel-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"m2c-hero-carousel-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <h3 class=\"m2c-hero-carousel-configurator__title\">Content</h3>\n\n        <cc-component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.items.length\">\n            <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( 0 )\">\n                <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                    <use xlink:href=\"#icon_plus\"></use>\n                </svg>\n            </button>\n        </cc-component-adder>\n\n        <template v-for=\"item in configuration.items\">\n            <div class=\"m2c-hero-carousel-configurator__item\" id=\"m2c-hero-carousel-item-{{ $index }}\">\n                <cc-component-adder class=\"cc-component-adder cc-component-adder--first\">\n                    <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( $index )\">\n                        <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </cc-component-adder>\n\n                <div class=\"m2c-hero-carousel-configurator__item-content\">\n                    <div v-bind:class=\"[ 'm2c-hero-carousel-configurator__item-col-left', configuration.items[$index].image ? 'm2c-hero-carousel-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                        <div class=\"m2c-hero-carousel-configurator__item-image-wrapper\">\n                            <img :src=\"configuration.items[$index].image\" class=\"m2c-hero-carousel-configurator__item-image\" v-show=\"configuration.items[$index].image\">\n                            <input type=\"hidden\" v-model=\"configuration.items[$index].image\">\n                            <input type=\"hidden\" class=\"m2c-hero-carousel-configurator__image-url\" id=\"hero-img-{{$index}}\">\n                            <svg class=\"m2c-hero-carousel-configurator__item-image-placeholder\" v-show=\"!configuration.items[$index].image\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n\n                            <div class=\"m2c-hero-carousel-configurator__item-actions\">\n                                <cc-component-actions>\n                                    <template slot=\"cc-component-actions__buttons\">\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | m2c-hero-carousel-configurator__item-action-button\" @click=\"moveHeroItemUp( $index )\" :class=\"[ isFirstHeroItem( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstHeroItem( $index )\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-up\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | m2c-hero-carousel-configurator__item-action-button\" @click=\"moveHeroItemDown( $index )\" :class=\"[ isLastHeroItem( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastHeroItem( $index )\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-down\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | m2c-hero-carousel-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_upload-image\"></use>\n                                                </svg>\n                                                {{ configuration.items[$index].image ? imageUploadedText : noImageUploadedText }}\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | m2c-hero-carousel-configurator__item-action-button\" @click=\"deleteHeroItem( $index )\">\n                                            <svg class=\"action-button__icon\">\n                                                <use xlink:href=\"#icon_trash-can\"></use>\n                                            </svg>\n                                        </button>\n                                    </template>\n                                </cc-component-actions>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"m2c-hero-carousel-configurator__item-col-right\">\n                        <div class=\"m2-input m2-input--group\">\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-variant\" class=\"m2-input__label\">${$t( 'Display variant' )}:</label>\n                                <select name=\"cfg-hc-item{{ $index }}-variant\" class=\"m2-input__select | m2c-hero-carousel-configurator__select\" id=\"cfg-hc-item{{ $index }}-variant\" v-model=\"configuration.items[$index].displayVariant\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"variant-1\">${$t( 'Text vertically centered on the left' )}</option>\n                                    <option value=\"variant-2\">${$t( 'Text vertically centered in the middle' )}</option>\n                                    <option value=\"variant-3\">${$t( 'Text on the bottom, left corner' )}</option>\n                                    <option value=\"variant-4\">${$t( 'Text on the bottom - centered' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-color-scheme\" class=\"m2-input__label\">${$t( 'Text color scheme' )}:</label>\n                                <select name=\"cfg-hc-item{{ $index }}-color-scheme\" class=\"m2-input__select | m2c-hero-carousel-configurator__select\" id=\"cfg-hc-item{{ $index }}-color-scheme\" v-model=\"configuration.items[$index].colorScheme\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"light\">${$t( 'Light' )}</option>\n                                    <option value=\"dark\">${$t( 'Dark' )}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__label\">${$t( 'Headline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__input\">\n                        </div>\n                        <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__label\">${$t( 'Subheadline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].subheadline\" id=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__input\">\n                        </div>\n                        <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__label\">${$t( 'Paragraph' )}:</label>\n                            <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__textarea\" placeholder=\"(${$t( 'max 200 characters' )})\" maxlength=\"200\"></textarea>\n                        </div>\n                        <div class=\"m2-input m2-input--group\">\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__label\">${$t( 'CTA label' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input m2-input--type-addon | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"hero-ctatarget-output-{{ $index }}\" class=\"m2-input__label\">${$t( 'CTA target link' )}:</label>\n                                <input type=\"text\" class=\"m2-input__input | m2c-hero-carousel-configurator__cta-target-link\" v-model=\"configuration.items[$index].href\" id=\"hero-ctatarget-output-{{ $index }}\">\n                                <span class=\"m2-input__addon | m2c-hero-carousel-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                    <svg class=\"m2-input__addon-icon\">\n                                        <use xlink:href=\"#icon_link\"></use>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <cc-component-adder class=\"cc-component-adder cc-component-adder--last\">\n                    <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( $index + 1 )\">\n                        <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </cc-component-adder>\n            </div>\n        </template>\n\n        <div class=\"m2c-hero-carousel-configurator__modal\" v-el:error-modal></div>\n    </div>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    mobileDisplayVariant: {},\n                    items: [ JSON.parse( JSON.stringify( heroItemDataPattern ) ) ],\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            imageUploadedText: $t( 'Change' ),\n            noImageUploadedText: $t( 'Upload' ),\n            scenarioOptions: {\n                // Mobile layout scenario elements.\n                mobileDisplayVariant: {\n                    'list': {\n                        name: 'Large teaser',\n                        iconId: 'ml_col',\n                    },\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                    },\n                    'hidden': {\n                        name: 'Hidden',\n                        iconId: 'ml_hidden',\n                    },\n                },\n            },\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            //this.cleanupConfiguration();\n            this.onSave();\n        },\n    },\n    methods: {\n        setOption( optionCategory: string, optionId: string ): void {\n            this.configuration[ optionCategory ] = this.scenarioOptions[ optionCategory ][ optionId ];\n            this.configuration[ optionCategory ].id = optionId;\n        },\n        /* Opens M2's built-in image manager modal\n         * Manages all images: image upload from hdd, select image that was already uploaded to server\n         * @param index {number} - index of image of hero item\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/hero-img-${index}/`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $( document ).on( 'change', '.m2c-hero-carousel-configurator__image-url', ( event: Event ): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded( event.target );\n                    setTimeout( (): void => {\n                        isAlreadyCalled = false;\n                    }, 100 );\n                }\n            } );\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match( '___directive\\/([a-zA-Z0-9]*)' )[ 1 ];\n            const imgEndpoint: string = this.imageEndpoint.replace( '{/encoded_image}', encodedImage );\n\n            this.configuration.items[ itemIndex ].decodedImage = Base64 ? Base64.decode( encodedImage ) : window.atob( encodedImage );\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                const ar: string = _this.getAspectRatio( img.naturalWidth, img.naturalHeight );\n                _this.configuration.items[ itemIndex ].image = img.getAttribute( 'src' );\n                _this.configuration.items[ itemIndex ].sizeInfo = `${img.naturalWidth}x${img.naturalHeight}px (${ar})`;\n                _this.configuration.items[ itemIndex ].aspectRatio = ar;\n                setTimeout( (): void => {\n                    _this.checkImageSizes();\n                    _this.onChange();\n                }, 400 );\n            };\n            img.src = imgEndpoint;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal( index: number ): void {\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/filter_widgets/Link/widget_target_id/hero-ctatarget-output-${index}` );\n            this.wWidgetListener( index );\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.href is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-hero-carousel-configurator__cta-target-link' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener( itemIndex: number ): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                const _this: any = this;\n                const button: any = widgetTools.dialogWindow[ 0 ].querySelector( '#insert_button' );\n\n                button.onclick = null;\n                button.addEventListener( 'click', function(): void {\n                    _this.configuration.items[ itemIndex ].href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                window.setTimeout( (): void => {\n                    this.wWidgetListener( itemIndex );\n                }, 300 );\n            }\n        },\n        /**\n         * Creates new hero item and adds it to a specified index.\n         * @param {number} index New component's index in components array.\n         */\n        createNewHeroItem( index: number ): void {\n            this.configuration.items.splice( index, 0, JSON.parse( JSON.stringify( heroItemDataPattern ) ) );\n            this.onChange();\n        },\n        /**\n         * Moves hero item under given index up by swaping it with previous element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveHeroItemUp( index: number ): void {\n            const _this: any = this;\n\n            if ( index > 0 ) {\n                const $thisItem: any = $( `#m2c-hero-carousel-item-${ index }` );\n                const $prevItem: any = $( `#m2c-hero-carousel-item-${ index - 1 }` );\n\n                $thisItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevItem.outerHeight( true ) ) }px )` );\n                $prevItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ $thisItem.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.items.splice( index - 1, 0, _this.configuration.items.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                    $prevItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves hero item under given index down by swaping it with next element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveHeroItemDown( index: number ): void {\n            const _this: any = this;\n\n            if ( index < this.configuration.items.length - 1 ) {\n                const $thisItem: any = $( `#m2c-hero-carousel-item-${ index }` );\n                const $nextItem: any = $( `#m2c-hero-carousel-item-${ index + 1 }` );\n\n                $thisItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ $nextItem.outerHeight( true ) }px )` );\n                $nextItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisItem.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.items.splice( index + 1, 0, _this.configuration.items.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                    $nextItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Tells if item with given index is the first hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is first in array.\n         */\n        isFirstHeroItem( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if hero item with given index is the last hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is last in array.\n         */\n        isLastHeroItem( index: number ): boolean {\n            return index === this.configuration.items.length - 1;\n        },\n        /* Removes hero item after Delete button is clicked\n         * and triggers hero item's onChange to update it's configuration\n         * @param index {number} - index of hero item to remove\n         */\n        deleteHeroItem( index: number ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        component.configuration.items.splice( index, 1 );\n                        component.onChange();\n                    },\n                },\n            } );\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty hero items has to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            const filteredArray: any = this.configuration.items.filter( ( item: any ): any => item.image !== '' );\n            this.configuration.items = filteredArray;\n            this.onChange();\n        },\n        /* Checks if images are all the same size\n         * If not - displays error by firing up this.displayImageSizeMismatchError()\n         * @param images {array} - array of all uploaded images\n         */\n        checkImageSizes(): boolean {\n            const itemsToCheck = JSON.parse( JSON.stringify( this.configuration.items ) ).filter( ( item: any ): boolean => {\n                return Boolean( item.aspectRatio ); // Filter out items without aspect ratio set yet.\n            } );\n            \n            for ( let i: number = 0; i < itemsToCheck.length; i++ ) {\n                if ( itemsToCheck[ i ].aspectRatio !== itemsToCheck[ 0 ].aspectRatio ) {\n                    alert( {\n                        title: $t( 'Warning' ),\n                        content: $t( 'Images you have uploaded have different aspect ratio. This may cause this component to display wrong. We recommend to keep the same aspect ratio for all uploaded images.' ),\n                    } );\n                    return false;\n                }\n            }\n            return true;\n        },\n        /* Returns greatest common divisor for 2 numbers\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getGreatestCommonDivisor( a: number, b: number ): number {\n            if ( !b ) {\n                return a;\n            }\n\n            return this.getGreatestCommonDivisor( b, a % b );\n        },\n        /* Returns Aspect ratio for 2 numbers based on GDC algoritm (greatest common divisor)\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getAspectRatio( a: number, b: number ): string {\n            let c: number = this.getGreatestCommonDivisor( a, b );\n\n            return `${( a / c )}:${( b / c )}`;\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n\n        if ( !this.configuration.mobileDisplayVariant.id ) {\n            $( '.m2c-hero-carousel-configurator__option:first-child' ).click();\n        }\n    },\n};\n\nexport default m2cHeroCarouselConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\ninterface TeaserItem {\n    image: string;\n    decodedImage: string;\n    headline: string;\n    paragraph: string;\n    ctaLabel: string;\n    ctaTarget: string;\n};\n\n// Pattern for teaser Item\nconst teaserItemPrototype: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: '1',\n    colorScheme: 'light',\n    headline: '',\n    paragraph: '',\n    ctaLabel: 'More',\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * Image teaser configurator component.\n * This component is responsible for displaying image teaser's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccImageTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n    },\n    template: `<form class=\"cc-image-teaser-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <section class=\"cc-image-teaser-configurator__section\">\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-it-width\" class=\"cs-input__label\">Teaser width:</label>\n                <select name=\"cfg-it-width-select\" class=\"cs-input__select\" id=\"cfg-it-width\" v-model=\"configuration.teaserWidth\" @change=\"onChange\">\n                    <option value=\"full-width\" selected>Full browser width</option>\n                    <option value=\"limited-width\">Breaking point width (1280px)</option>\n                </select>\n            </div>\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-it-images-per-slide\" class=\"cs-input__label\">Images per slide:</label>\n                <select name=\"cfg-it-images-per-slide\" class=\"cs-input__select\" id=\"cfg-it-images-per-slide\" v-model=\"configuration.itemsPerSlide\" @change=\"onChange\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </select>\n            </div>\n        </section>\n\n        <section class=\"cc-image-teaser-configurator__section\">\n            <div class=\"cc-image-teaser-configurator__teaser\">\n                <template v-for=\"item in configuration.items\">\n                    <div class=\"cc-image-teaser-configurator__teaser-item\" id=\"cc-image-teaser-item-{{ $index }}\">\n                        <div class=\"cc-image-teaser-configurator__toolbar\">\n                            <span class=\"cc-image-teaser-configurator__teaser-item-title\">Banner {{ $index+1 }}/{{ configuration.items.length }}</span>\n                            <a href=\"#\" class=\"cc-image-teaser-configurator__upload-link\" href=\"#\">Upload image</a>\n                        </div>\n                        <div class=\"cc-image-teaser-configurator__image-holder-outer\">\n                            <div class=\"cc-image-teaser-configurator__image-holder-inner\">\n                                <input type=\"hidden\" value=\"\" class=\"cc-image-teaser-configurator__image-url\" v-model=\"configuration.items[$index].image\" @change=\"onChange\">\n                            </div>\n                        </div>\n                        <div class=\"cs-input cs-input--type-required\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-headline\" class=\"cs-input__label\">Headline:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-it-teaser{{ $index+1 }}-headline\" class=\"cs-input__input\" @change=\"onChange\">\n                        </div>\n                        <div class=\"cs-input cs-input--type-required\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-paragraph\" class=\"cs-input__label\">Paragraph:</label>\n                            <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-it-teaser{{ $index+1 }}-paragraph\" class=\"cs-input__textarea cs-input__textarea--look-thin\" @change=\"onChange\" placeholder=\"(max 200 characters)\" maxlength=\"200\"></textarea>\n                        </div>\n                        <div class=\"cs-input\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-cta-label\" class=\"cs-input__label\">CTA label:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-it-teaser{{ $index+1 }}-cta-label\" class=\"cs-input__input\" @change=\"onChange\">\n                        </div>\n                        <div class=\"cs-input\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-cta-target\" class=\"cs-input__label\">CTA target link:</label>\n                            <input type=\"text\" v-model=\"item.ctaTarget\" id=\"cfg-it-teaser{{ $index+1 }}-cta-target\" class=\"cs-input__input\" @change=\"onChange\">\n                        </div>\n                    </div>\n                </template>\n            </div>\n        </section>\n\n        <section class=\"cc-image-teaser-configurator__section cc-image-teaser-configurator__section--type-actions\">\n            <button type=\"submit\">Save</button>\n        </section>\n    </form>`,\n    data(): any {\n        return {\n            scenarioOptions: {\n                // Teaser width scenario elements.\n                teaserWidth: {\n                    'c': {\n                        name: 'Container width',\n                        iconId: 'tw_content-width',\n                        disabled: false,\n                        teasersLimit: true,\n                    },\n                    'w': {\n                        name: 'Window width',\n                        iconId: 'tw_window-width',\n                        disabled: false,\n                        teasersLimit: true,\n                    },\n                    'c-s': {\n                        name: 'Content width Slider',\n                        iconId: 'tw_content-slider',\n                        disabled: false,\n                        teasersLimit: false,\n                    },\n                    'w-s': {\n                        name: 'Window width Slider',\n                        iconId: 'tw_window-slider',\n                        disabled: false,\n                        teasersLimit: false,\n                    },\n                },\n                // Desktop layout scenario elements.\n                desktopLayout: {\n                    '1': {\n                        name: '1 in row',\n                        iconId: 'dl_1',\n                        disabled: false,\n                        teasersNum: 1,\n                    },\n                    '2': {\n                        name: '2 in row',\n                        iconId: 'dl_2',\n                        disabled: false,\n                        teasersNum: 2,\n                    },\n                    '3': {\n                        name: '3 in row',\n                        iconId: 'dl_3',\n                        disabled: false,\n                        teasersNum: 3,\n                    },\n                    '4': {\n                        name: '4 in row',\n                        iconId: 'dl_4',\n                        disabled: false,\n                        teasersNum: 4,\n                    },\n                    '6': {\n                        name: '6 in row',\n                        iconId: 'dl_6',\n                        disabled: false,\n                        teasersNum: 6,\n                    },\n                },\n                // Text positioning scenario elements.\n                textPositioning: {\n                    'over': {\n                        name: 'Text over image',\n                        iconId: 'tl_over',\n                        disabled: false,\n                        textPosition: true,\n                    },\n                    'under': {\n                        name: 'Text below image',\n                        iconId: 'tl_under',\n                        disabled: false,\n                        textPosition: false,\n                    },\n                },\n\n                // Mobile layout scenario elements.\n                mobileLayout: {\n                    'large': {\n                        name: 'Large teaser',\n                        iconId: 'ml_col',\n                        disabled: false,\n                    },\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                        disabled: false,\n                    },\n                    'row': {\n                        name: 'Teasers in row',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                    'col': {\n                        name: 'Teasers in column',\n                        iconId: 'ml_col',\n                        disabled: false,\n                    },\n                    '1-2': {\n                        name: 'Big, two small',\n                        iconId: 'ml_1-2',\n                        disabled: false,\n                    },\n                    '2-2': {\n                        name: '2 in row, 2 rows',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                    '1-2-1': {\n                        name: 'Big, two small, big',\n                        iconId: 'ml_1-2',\n                        disabled: false,\n                    },\n                    '2-2-2': {\n                        name: '2 in row, 3 rows',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                },\n            },\n            availableScenarios: [\n                ['c', '1', 'over', ['large']],\n\n                ['c', '2', 'over', ['col', 'row', 'slider']],\n                ['c', '2', 'under', ['col']],\n\n                ['c', '3', 'over', ['col', 'slider', '1-2']],\n                ['c', '3', 'under', ['col']],\n\n                ['c', '4', 'over', ['2-2', 'slider', '1-2-1']],\n                ['c', '4', 'under', ['col']],\n\n                ['c', '6', 'over', ['2-2-2', 'slider']],\n                ['c', '6', 'under', ['2-2-2', 'slider']],\n\n                ['w', '1', 'over', ['large']],\n\n                ['w', '2', 'over', ['col', 'row', 'slider']],\n                ['w', '2', 'under', ['col']],\n\n                ['w', '3', 'over', ['col', 'slider', '1-2']],\n                ['w', '3', 'under', ['col']],\n\n                ['w', '4', 'over', ['2-2', 'slider', '1-2-1']],\n                ['w', '4', 'under', ['col']],\n\n                ['w-s', '1', 'over', ['slider']],\n\n                ['w-s', '2', 'over', ['slider']],\n                ['w-s', '2', 'under', ['slider']],\n\n                ['w-s', '3', 'over', ['slider']],\n                ['w-s', '3', 'under', ['slider']],\n\n                ['w-s', '4', 'over', ['slider']],\n                ['w-s', '4', 'under', ['slider']],\n\n                ['c-s', '1', 'over', ['slider']],\n\n                ['c-s', '2', 'over', ['slider']],\n                ['c-s', '2', 'under', ['slider']],\n\n                ['c-s', '3', 'over', ['slider']],\n                ['c-s', '3', 'under', ['slider']],\n\n                ['c-s', '4', 'over', ['slider']],\n                ['c-s', '4', 'under', ['slider']],\n            ],\n        };\n    },\n    props: {\n        /**\n         * Image teaser configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [ JSON.parse( JSON.stringify( teaserItemPrototype ) ) ],\n                    ignoredItems: [],\n                    currentScenario: {\n                        teaserWidth: {},\n                        desktopLayout: {},\n                        textPositioning: {},\n                        mobileLayout: {},\n                    },\n                };\n            },\n        },\n    },\n    created(): void {\n        if ( this.configuration.ignoredItems === undefined ) {\n            this.configuration.ignoredItems = [];\n        }\n    },\n    methods: {\n        _collectPossibleOptions( filteredScenarios: Array<Array<any>> ): any {\n            const teaserWidthIndex: number = 0;\n            const desktopLayoutIndex: number = 1;\n            const textPositionIndex: number = 2;\n            const mobileLayoutsIndex: number = 3;\n            let possibleOptions: any = {\n                teaserWidth: {},\n                desktopLayout: {},\n                textPositioning: {},\n                mobileLayout: {},\n            };\n\n            filteredScenarios.forEach( ( filteredScenario: Array<any> ) => {\n                possibleOptions.teaserWidth[ filteredScenario[ teaserWidthIndex ] ] = true;\n                possibleOptions.desktopLayout[ filteredScenario[ desktopLayoutIndex ] ] = true;\n                possibleOptions.textPositioning[ filteredScenario[ textPositionIndex ] ] = true;\n                filteredScenario[ mobileLayoutsIndex ].forEach( ( mobileLayout: string ) => {\n                    possibleOptions.mobileLayout[ mobileLayout ] = true;\n                } );\n            } );\n\n            Object.keys( possibleOptions ).forEach( ( scenarioElement: string ): void => {\n                possibleOptions[ scenarioElement ] = Object.keys( possibleOptions[ scenarioElement ] );\n            });\n\n            return possibleOptions;\n        },\n\n        _findPossibleOptions( teaserWidth: string, desktopLayout: string, textPosition: string, mobileLayout: string ): void {\n            const teaserWidthIndex: number = 0;\n            const desktopLayoutIndex: number = 1;\n            const textPositionIndex: number = 2;\n            const mobileLayoutsIndex: number = 3;\n            // Make a copy of available scenarios to prevent reference copying.\n            let filteredScenarios: Array<Array<string>> = JSON.parse( JSON.stringify( this.availableScenarios ) );\n\n            if ( teaserWidth ) {\n                filteredScenarios = filteredScenarios.filter( ( availableScenario: any ) => {\n                    return availableScenario[ teaserWidthIndex ] === teaserWidth;\n                } );\n            }\n\n            if ( desktopLayout ) {\n                filteredScenarios = filteredScenarios.filter( ( availableScenario: any ) => {\n                    return availableScenario[ desktopLayoutIndex ] === desktopLayout;\n                } );\n            }\n\n            if ( textPosition ) {\n                filteredScenarios = filteredScenarios.filter( ( availableScenario: any ) => {\n                    return !textPosition || availableScenario[ textPositionIndex ] === textPosition;\n                } );\n            }\n\n            if ( mobileLayout ) {\n                filteredScenarios = filteredScenarios.filter( ( availableScenario: any ) => {\n                    return availableScenario[ mobileLayoutsIndex ].indexOf( mobileLayout ) !== -1;\n                } );\n                filteredScenarios = filteredScenarios.map( ( availableScenario: any ) => {\n                    availableScenario[ mobileLayoutsIndex ] = [ mobileLayout ];\n                    return availableScenario;\n                } );\n            }\n\n            return this._collectPossibleOptions( filteredScenarios );\n        },\n\n        toggleOption( optionCategory: string, optionId: string ): void {\n            if ( this.configuration.currentScenario[ optionCategory ].id ) {\n                this.configuration.currentScenario[ optionCategory ] = {};\n            } else {\n                this.configuration.currentScenario[ optionCategory ] = this.scenarioOptions[ optionCategory ][ optionId ];\n                this.configuration.currentScenario[ optionCategory ].id = optionId;\n            }\n\n            this.togglePossibleOptions();\n            this.adjustVisibleItems();\n        },\n\n        adjustVisibleItems(): void {\n            const items: Array<TeaserItem> = this.configuration.items;\n            const itemsNumber: number = this.configuration.currentScenario.desktopLayout.teasersNum;\n            const itemsLimit: boolean = this.configuration.currentScenario.teaserWidth.teasersLimit;\n\n            if ( itemsLimit && items.length > itemsNumber ) {\n                const removedItems: Array<any> = items.splice( itemsNumber, items.length - itemsNumber );\n                this.configuration.ignoredItems = removedItems.concat( this.configuration.ignoredItems );\n            } else if ( items.length < itemsNumber ) {\n                items.concat( this.configuration.ignoredItems.splice( 0, itemsNumber - items.length ) );\n\n                for ( let addedItems: number = 0; addedItems < itemsNumber - items.length; addedItems++ ) {\n                    items.push( JSON.parse( JSON.stringify( teaserItemPrototype ) ) );\n                }\n            }\n        },\n\n        togglePossibleOptions(): void {\n            const currentScenario: any = this.configuration.currentScenario;\n            const possibleOptions: any = this._findPossibleOptions(\n                currentScenario.teaserWidth.id,\n                currentScenario.desktopLayout.id,\n                currentScenario.textPositioning.id,\n                currentScenario.mobileLayout.id,\n            );\n\n            Object.keys( this.scenarioOptions ).forEach( ( optionCategory: string ) => {\n                Object.keys( this.scenarioOptions[ optionCategory ] ).forEach( ( scenarioOptionId: string ) => {\n                    this.scenarioOptions[ optionCategory ][ scenarioOptionId ].disabled = possibleOptions[ optionCategory ].indexOf( scenarioOptionId ) === -1;\n                } );\n            } );\n        },\n\n        canAddTeaser(): boolean {\n            const items: Array<TeaserItem> = this.configuration.items;\n            const itemsLimit: number = this.configuration.currentScenario.teaserWidth.teasersLimit;\n\n            return ( !itemsLimit || items.length < itemsLimit );\n        },\n    },\n};\n\nexport default ccImageTeaserConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport ccImageTeaserConfigurator from '../../../components/cc-image-teaser-configurator/src/cc-image-teaser-configurator';\n\n// Pattern for teaser Item\nconst teaserItemPrototype: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: '1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'More' ),\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * M2C Image teaser component for admin panel.\n * This component is responsible for managing image teasers including image upload and widget chooser\n */\nconst m2cImageTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccImageTeaserConfigurator,\n    ],\n    template: `<div class=\"m2c-image-teaser-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Teaser Width</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.teaserWidth.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.teaserWidth\"\n                    @click=\"!option.disabled && toggleOption('teaserWidth', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n\n        </section>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Desktop Layout</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.desktopLayout.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.desktopLayout\"\n                    @click=\"!option.disabled && toggleOption('desktopLayout', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Text Positioning</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.textPositioning.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.textPositioning\"\n                    @click=\"!option.disabled && toggleOption('textPositioning', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Mobile Layout</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.mobileLayout.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.mobileLayout\"\n                    @click=\"!option.disabled && toggleOption('mobileLayout', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <cc-component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.items.length\">\n                <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( 0 )\">\n                    <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                        <use v-bind=\"{ 'xlink:href': '#icon_plus' }\"></use>\n                    </svg>\n                </button>\n            </cc-component-adder>\n\n            <template v-for=\"item in configuration.items\">\n                <div class=\"m2c-image-teaser-configurator__item\" id=\"m2c-image-teaser-item-{{ $index }}\">\n                    <cc-component-adder class=\"cc-component-adder cc-component-adder--first\" v-if=\"canAddTeaser()\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | m2c-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( $index )\">\n                            <svg class=\"action-button__icon action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </cc-component-adder>\n\n                    <div class=\"m2c-image-teaser-configurator__item-content\">\n                        <div v-bind:class=\"[ 'm2c-image-teaser-configurator__item-col-left', configuration.items[$index].image ? 'm2c-image-teaser-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                            <div class=\"m2c-image-teaser-configurator__item-image-wrapper\">\n                                <img :src=\"configuration.items[$index].image\" class=\"m2c-image-teaser-configurator__item-image\" v-show=\"configuration.items[$index].image\">\n                                <input type=\"hidden\" v-model=\"configuration.items[$index].image\">\n                                <input type=\"hidden\" class=\"m2c-image-teaser-configurator__image-url\" id=\"image-teaser-img-{{$index}}\">\n                                <svg class=\"m2c-image-teaser-configurator__item-image-placeholder\" v-show=\"!configuration.items[$index].image\">\n                                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                                </svg>\n\n                                <div class=\"m2c-image-teaser-configurator__item-actions\">\n                                    <cc-component-actions>\n                                        <template slot=\"cc-component-actions__buttons\">\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | m2c-image-teaser-configurator__item-action-button\" @click=\"moveImageTeaserUp( $index )\" :class=\"[ isFirstImageTeaser( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstImageTeaser( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_arrow-up\"></use>\n                                                </svg>\n                                            </button>\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | m2c-image-teaser-configurator__item-action-button\" @click=\"moveImageTeaserDown( $index )\" :class=\"[ isLastImageTeaser( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastImageTeaser( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_arrow-down\"></use>\n                                                </svg>\n                                            </button>\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | m2c-image-teaser-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                    <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                        <use xlink:href=\"#icon_upload-image\"></use>\n                                                    </svg>\n                                                    {{ configuration.items[$index].image ? imageUploadedText : noImageUploadedText }}\n                                            </button>\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | m2c-image-teaser-configurator__item-action-button\" @click=\"deleteTeaserItem( $index )\">\n                                                <svg class=\"action-button__icon\">\n                                                    <use xlink:href=\"#icon_trash-can\"></use>\n                                                </svg>\n                                            </button>\n                                        </template>\n                                    </cc-component-actions>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"m2c-image-teaser-configurator__item-col-right\">\n                            <div class=\"m2-input m2-input--group\">\n                                <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                    <label for=\"cfg-it-item{{ $index }}-variant\" class=\"m2-input__label\">${$t( 'Display variant' )}:</label>\n                                    <select name=\"cfg-it-item{{ $index }}-variant\" class=\"m2-input__select\" id=\"cfg-it-item{{ $index }}-variant\" v-model=\"configuration.items[$index].displayVariant\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                        <option value=\"1\">${$t( 'Text vertically centered on the left' )}</option>\n                                        <option value=\"3\">${$t( 'Text vertically centered in the middle' )}</option>\n                                        <option value=\"2\">${$t( 'Text on the bottom, left corner' )}</option>\n                                        <option value=\"4\">${$t( 'Text on the bottom - centered' )}</option>\n                                    </select>\n                                </div>\n                                <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                    <label for=\"cfg-it-item{{ $index }}-color-scheme\" class=\"m2-input__label\">${$t( 'Text color scheme' )}:</label>\n                                    <select name=\"cfg-it-item{{ $index }}-color-scheme\" class=\"m2-input__select\" id=\"cfg-it-item{{ $index }}-color-scheme\" v-model=\"configuration.items[$index].colorScheme\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                        <option value=\"light\">${$t( 'Light' )}</option>\n                                        <option value=\"dark\">${$t( 'Dark' )}</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__label\">${$t( 'Headline' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__label\">${$t( 'Subheadline' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].subheadline\" id=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__label\">${$t( 'Paragraph' )}:</label>\n                                <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__textarea\" placeholder=\"(${$t( 'max 200 characters' )})\" maxlength=\"200\"></textarea>\n                            </div>\n                            <div class=\"m2-input m2-input--group\">\n                                <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                    <label for=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__label\">${$t( 'CTA label' )}:</label>\n                                    <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__input\">\n                                </div>\n                                <div class=\"m2-input m2-input--type-addon | m2c-image-teaser-configurator__item-form-element\">\n                                    <label for=\"image-teaser-ctatarget-output-{{ $index }}\" class=\"m2-input__label\">${$t( 'CTA target link' )}:</label>\n                                    <input type=\"text\" class=\"m2-input__input | m2c-image-teaser-configurator__cta-target-link\" v-model=\"configuration.items[$index].href\" id=\"image-teaser-ctatarget-output-{{ $index }}\">\n                                    <span class=\"m2-input__addon | m2c-image-teaser-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                        <svg class=\"m2-input__addon-icon\">\n                                            <use xlink:href=\"#icon_link\"></use>\n                                        </svg>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <cc-component-adder class=\"cc-component-adder cc-component-adder--last\" v-if=\"configuration.items.length && canAddTeaser()\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | m2c-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( $index + 1 )\">\n                            <svg class=\"action-button__icon action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </cc-component-adder>\n                </div>\n            </template>\n        </section>\n    </div>`,\n    props: {\n        /**\n         * Image teaser configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [ JSON.parse( JSON.stringify( teaserItemPrototype ) ) ],\n                    ignoredItems: [],\n                    currentScenario: {\n                        teaserWidth: {},\n                        desktopLayout: {},\n                        textPositioning: {},\n                        mobileLayout: {},\n                    },\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            imageUploadedText: $t( 'Change' ),\n            noImageUploadedText: $t( 'Upload' ),\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            //this.cleanupConfiguration();\n            this.onSave();\n        },\n    },\n    methods: {\n        /* Opens M2's built-in image manager modal.\n         * Manages all images: image upload from hdd, select image that was already uploaded to server.\n         * @param index {number} - index of image of image teaser.\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/image-teaser-img-${index}/`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $( document ).on( 'change', '.m2c-image-teaser-configurator__image-url', ( event: Event ): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded( event.target );\n                    setTimeout( (): void => {\n                        isAlreadyCalled = false;\n                    }, 100 );\n                }\n            } );\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match( '___directive\\/([a-zA-Z0-9]*)' )[ 1 ];\n            const imgEndpoint: string = this.imageEndpoint.replace( '{/encoded_image}', encodedImage );\n\n            this.configuration.items[ itemIndex ].decodedImage = Base64 ? Base64.decode( encodedImage ) : window.atob( encodedImage );\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                const ar: string = _this.getAspectRatio( img.naturalWidth, img.naturalHeight );\n                _this.configuration.items[ itemIndex ].image = img.getAttribute( 'src' );\n                _this.configuration.items[ itemIndex ].sizeInfo = `${img.naturalWidth}x${img.naturalHeight}px (${ar})`;\n                _this.configuration.items[ itemIndex ].aspectRatio = ar;\n                setTimeout( (): void => {\n                    _this.checkImageSizes();\n                    _this.onChange();\n                }, 400 );\n            };\n            img.src = imgEndpoint;\n        },\n\n        /* Creates another teaser item using teaserItemPrototype */\n        createTeaserItem( index: number ): void {\n            this.configuration.items.splice( index, 0, JSON.parse( JSON.stringify( teaserItemPrototype ) ) );\n            this.onChange();\n        },\n\n        /**\n         * Moves image teaser item under given index up by swaping it with previous element.\n         * @param {number} index Image teaser's index in array.\n         */\n        moveImageTeaserUp( index: number ): void {\n            const _this: any = this;\n\n            if ( index > 0 ) {\n                const $thisItem: any = $( `#m2c-image-teaser-item-${ index }` );\n                const $prevItem: any = $( `#m2c-image-teaser-item-${ index - 1 }` );\n\n                $thisItem.addClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevItem.outerHeight( true ) ) }px )` );\n                $prevItem.addClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', `translateY( ${ $thisItem.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.items.splice( index - 1, 0, _this.configuration.items.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', '' );\n                    $prevItem.removeClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves image teaser item under given index down by swaping it with next element.\n         * @param {number} index Image teaser's index in array.\n         */\n        moveImageTeaserDown( index: number ): void {\n            const _this: any = this;\n\n            if ( index < this.configuration.items.length - 1 ) {\n                const $thisItem: any = $( `#m2c-image-teaser-item-${ index }` );\n                const $nextItem: any = $( `#m2c-image-teaser-item-${ index + 1 }` );\n\n                $thisItem.addClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', `translateY( ${ $nextItem.outerHeight( true ) }px )` );\n                $nextItem.addClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisItem.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.items.splice( index + 1, 0, _this.configuration.items.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', '' );\n                    $nextItem.removeClass( 'm2c-image-teaser-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Tells if item with given index is the first image teaser.\n         * @param  {number}  index Index of the image teaser.\n         * @return {boolean}       If image teaser is first in array.\n         */\n        isFirstImageTeaser( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if image teaser with given index is the last image teaser.\n         * @param  {number}  index Index of the image teaser.\n         * @return {boolean}       If image teaser is last in array.\n         */\n        isLastImageTeaser( index: number ): boolean {\n            return index === this.configuration.items.length - 1;\n        },\n\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal( index: number ): void {\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/filter_widgets/Link/widget_target_id/image-teaser-ctatarget-output-${index}` );\n\n            this.wWidgetListener( index );\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.ctaTarget is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-image-teaser-configurator__cta-target-link' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener( itemIndex: number ): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                const _this: any = this;\n                const button: any = widgetTools.dialogWindow[ 0 ].querySelector( '#insert_button' );\n\n                button.onclick = null;\n                button.addEventListener( 'click', function(): void {\n                    _this.configuration.items[ itemIndex ].href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                window.setTimeout( (): void => {\n                    this.wWidgetListener( itemIndex );\n                }, 300 );\n            }\n        },\n\n        /* Checks if it's possible to display Delete button\n         * This function is used in component's template\n         * Button can be displayed only on items that have item uploaded\n         * @param index {number} - index of teaser item\n         * @returns Boolean\n         */\n        isPossibleToDelete( index: number ): Boolean {\n            if ( ( index !== 0 || this.configuration.items.length > 1 ) && this.configuration.items[ index ].image !== '' ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /* Removes teaser item after Delete button is clicked\n         * and triggers component's onChange to update it's configuration\n         * @param index {number} - index of teaser item to remove\n         */\n        deleteTeaserItem( index: number ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        component.configuration.items.splice( index, 1 );\n                        component.onChange();\n                    }\n                },\n            } );\n        },\n\n        /* Checks if images are all the same size\n         * If not - displays error by firing up this.displayImageSizeMismatchError()\n         * @param images {array} - array of all uploaded images\n         */\n        checkImageSizes(): boolean {\n            const itemsToCheck = JSON.parse( JSON.stringify( this.configuration.items ) ).filter( ( item: any ): boolean => {\n                return Boolean( item.aspectRatio ); // Filter out items without aspect ratio set yet.\n            } );\n            for ( let i: number = 0; i < itemsToCheck.length; i++ ) {\n                if ( itemsToCheck[ i ].aspectRatio !== itemsToCheck[ 0 ].aspectRatio ) {\n                    alert( {\n                        title: $t( 'Warning' ),\n                        content: $t( 'Images you have uploaded have different aspect ratio. This may cause this component to display wrong. We recommend to keep the same aspect ratio for all uploaded images.' ),\n                    } );\n                    return false;\n                }\n            }\n            return true;\n        },\n        /* Returns greatest common divisor for 2 numbers\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getGreatestCommonDivisor( a: number, b: number ): number {\n            if ( !b ) {\n                return a;\n            }\n\n            return this.getGreatestCommonDivisor( b, a % b );\n        },\n        /* Returns Aspect ratio for 2 numbers based on GDC algoritm (greatest common divisor)\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getAspectRatio( a: number, b: number ): string {\n            let c: number = this.getGreatestCommonDivisor( a, b );\n\n            return `${( a / c )}:${( b / c )}`;\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty teaser items has to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            this.configuration.items = this.configuration.items.filter( ( item: any ): any => item.image !== '' );\n            this.configuration.ignoredItems = this.configuration.ignoredItems.filter( ( item: any ): any => item.image !== '' );\n            this.onChange();\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n    },\n};\n\nexport default m2cImageTeaserConfigurator;\n","/* tslint:disable:no-console */\n\nimport ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccParagraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"textarea-cfg-paragraph\" class=\"cs-input__label cs-input__label--look-top-align\">Paragraph:</label>\n            <textarea name=\"name\" v-model=\"configuration.paragraph\" id=\"textarea-cfg-paragraph\" class=\"cs-input__textarea\" placeholder=\"Your HTML here\" @change=\"onChange\"></textarea>\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        configuration: {\n            type: Object,\n            default: {\n                paragraph: '',\n            },\n        },\n    },\n};\n\nexport default ccParagraphConfigurator;\n","import ccParagraphConfigurator from '../../../components/cc-paragraph-configurator/src/cc-paragraph-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\nimport Vue from 'Vue';\n\n/**\n * M2C skin for Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cParagraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccParagraphConfigurator,\n    ],\n    template: `<form class=\"m2c-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        \n        <div class=\"m2c-paragraph-configurator__error\" v-text=\"tempConfiguration.errorMessage\" v-show=\"tempConfiguration.errorMessage\">\n        </div>\n\n        <div class=\"m2-input\">\n            <label for=\"input-cfg-id\" class=\"m2-input__label\">${$t( 'Identifier' )}:</label>\n            <input type=\"text\" name=\"cfg-id\" v-model=\"tempConfiguration.identifier\" id=\"input-cfg-id\" class=\"m2-input__input m2-input__input--limited-width\" @blur=\"stripSpaces( tempConfiguration.identifier )\" maxlength=\"30\">\n        </div>\n        <div class=\"m2-input\">\n            <label for=\"input-cfg-title\" class=\"m2-input__label\">${$t( 'Title' )}:</label>\n            <input type=\"text\" name=\"cfg-title\" v-model=\"tempConfiguration.title\" id=\"input-cfg-title\" class=\"m2-input__input m2-input__input--limited-width\" maxlength=\"100\">\n        </div>\n        <div class=\"m2-input\">\n            <label for=\"textarea-cfg-paragraph\" class=\"m2-input__label m2-input__label--look-top-align\">${$t( 'HTML' )}:</label>\n\n            <div class=\"buttons-set | m2c-paragraph-configurator__wysiwyg-buttons\">\n                <button type=\"button\" class=\"scalable action-show-hide\" id=\"toggle-wysiwyg\">${$t( 'Show / Hide Editor' )}</button>\n                <button type=\"button\" class=\"scalable action-add-widget plugin\" @click=\"openWidgetModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Widget' )}...</button>\n                <button type=\"button\" class=\"scalable action-add-image plugin\" @click=\"openMediaModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Image' )}...</button>\n                <button type=\"button\" class=\"scalable add-variable plugin\" @click=\"openMagentoVariablesModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Variable' )}...</button>\n            </div>\n\n            <textarea name=\"cfg-paragraph\" v-model=\"tempConfiguration.content\" id=\"textarea-cfg-paragraph\" class=\"m2-input__textarea | m2c-paragraph-configurator__textarea\"></textarea>\n        </div>\n    </form>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    blockId: '',\n                    title: '',\n                };\n            },\n        },\n        restToken: {\n            type: String,\n            default: '',\n        },\n        wysiwygConfig: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): void {\n        return {\n            /*\n             * This object if used to operate inside component. We want to bind data to inputs,\n             * but we don't need them to be saved in m2c component's config. Only ID is needed,\n             * since rest of data id fetched from database.\n             */\n            tempConfiguration: {\n                identifier: '',\n                title: '',\n                content: '',\n                errorMessage: '',\n            },\n\n            isEditorVisible: true,\n\n            // wysiwyg editor object\n            editor: undefined,\n        };\n    },\n    ready(): void {\n        // Check if wysiwygConfig was passed - means that editor is enabled in admin panel\n        if ( this.wysiwygConfig !== '' ) {\n            this.wysiwygCfg = JSON.parse( this.wysiwygConfig );\n            this.wysiwygCfg.height = '300px';\n        }\n\n        // Init loader and hide it\n        $( 'body' ).one().loadingPopup( {\n            timeout: false,\n        } ).trigger( 'hideLoadingPopup' );\n\n        // If ID is already provided (means we're in edit mode)\n        if ( this.configuration.blockId ) {\n            const component: any = this;\n\n            // Show loader before request\n            $( 'body' ).trigger( 'showLoadingPopup' );\n\n            // Send request to REST API to get CMS block data if in edit mode\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: 'get',\n                url: `${ window.location.origin }/rest/all/V1/cmsBlock/${this.configuration.blockId}`,\n            } ).then( ( response: any ): void => {\n\n                // Hide loader\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n\n                // Update components tempConfiguration\n                component.tempConfiguration.identifier = response.data.identifier;\n                component.tempConfiguration.title = response.data.title;\n                component.tempConfiguration.content = response.data.content;\n                component.configuration.title = response.data.title;\n\n                // initialize customized WYSIWYG\n                if ( component.wysiwygCfg ) {\n                    component.initWysiwyg();\n                }\n\n            }, ( response: any ): void => {\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n            } );\n        } else {\n            // initialize customized WYSIWYG\n            if ( this.wysiwygCfg ) {\n                this.initWysiwyg();\n            }\n        }\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            const component: any = this;\n\n            // Construct data for REST API\n            const dataConstruct: any = {\n                block: {\n                    identifier: this.tempConfiguration.identifier,\n                    title: this.tempConfiguration.title,\n                    content: this.tempConfiguration.content,\n                    active: true,\n                },\n            };\n\n            // Show loader before request\n            $( 'body' ).trigger( 'showLoadingPopup' );\n\n            // Send request to REST API\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: this.configuration.blockId ? 'put' : 'post',\n                url: this.configuration.blockId ? `${ window.location.origin }/rest/all/V1/cmsBlock/${this.configuration.blockId}` : `${ window.location.origin }/rest/all/V1/cmsBlock`,\n                body: dataConstruct,\n            } ).then( ( response: any ): void => {\n\n                // If status is OK update component's configuration and run Save to save component data\n                if ( response.ok ) {\n                    component.configuration.blockId = response.data.id;\n                    component.configuration.title = response.data.title;\n\n                    // Hide loader\n                    $( 'body' ).trigger( 'hideLoadingPopup' );\n                    component.onSave();\n                }\n            }, ( response: any ): void => {\n                // if failed and response returned any message, put it into error div, else put default text\n                if ( response.message ) {\n                    component.tempConfiguration.errorMessage = response.data.message;\n                } else {\n                    component.tempConfiguration.errorMessage = $t( 'An error occured. Please try again later.' );\n                }\n\n                // Set headers back\n                Vue.http.headers.custom.Accept = 'text/html';\n\n                // Hide loader\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n            } );\n        },\n    },\n    methods: {\n        stripSpaces( str: string ): void {\n            const striped: string = str.split( ' ' ).join( '-' ).toLowerCase();\n            this.tempConfiguration.identifier = striped;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         */\n        openWidgetModal(): void {\n            widgetTools.openDialog( `${this.wysiwygCfg.widget_window_url}widget_target_id/textarea-cfg-paragraph` );\n        },\n        /* Opens modal with M2 built-in media uploader\n         */\n        openMediaModal(): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/textarea-cfg-paragraph`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n        /* Opens modal with M2 built-in variables\n         */\n        openMagentoVariablesModal(): void {\n            MagentovariablePlugin.loadChooser( `${window.location.origin}/admin/admin/system_variable/wysiwygPlugin/`, 'textarea-cfg-paragraph' );\n        },\n        initWysiwyg(): void {\n            const _this: any = this;\n\n            window.tinyMCE_GZ = window.tinyMCE_GZ || {};\n            window.tinyMCE_GZ.loaded = true;\n\n            require( [\n                'mage/translate',\n                'mage/adminhtml/events',\n                'm2cTinyMceWysiwygSetup',\n                'mage/adminhtml/wysiwyg/widget',\n            ], function(): void {\n                // Setup (this global variable is already set in constructor.phtml)\n                csWysiwygEditor = new m2cTinyMceWysiwygSetup( 'textarea-cfg-paragraph', _this.wysiwygCfg );\n\n                // Initialization\n                csWysiwygEditor.setup( 'exact' );\n                _this.isEditorVisible = true;\n\n                // Set listener for enable/disable editor button\n                Event.observe( 'toggle-wysiwyg', 'click', function(): void {\n                    csWysiwygEditor.toggle();\n                    _this.isEditorVisible = !_this.isEditorVisible;\n                }.bind( csWysiwygEditor ) );\n\n                // Set handlers for editor\n                const editorFormValidationHandler = csWysiwygEditor.onFormValidation.bind( csWysiwygEditor );\n                varienGlobalEvents.attachEventHandler( 'formSubmit', editorFormValidationHandler );\n                varienGlobalEvents.clearEventHandlers( 'open_browser_callback' );\n\n                // Add callback for editor's IMAGE button to open file uploader while clicked\n                varienGlobalEvents.attachEventHandler( 'open_browser_callback', csWysiwygEditor.openFileBrowser );\n            } );\n        },\n    },\n};\n\nexport default m2cParagraphConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Product carousel configurator component.\n * This component is responsible for displaying product carousel's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccProductCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-product-carousel-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-pc-category\" class=\"cs-input__label\">Select Category:</label>\n            <select name=\"cfg-pc-category-select\" class=\"cs-input__select\" id=\"cfg-pc-category\" v-model=\"configuration.category_id\" @change=\"onChange\">\n                <option value=\"\">-- Please select category --</option>\n            </select>\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-pc-order-by\" class=\"cs-input__label\">Order by:</label>\n            <select name=\"cfg-pc-order-by\" class=\"cs-input__select\" id=\"cfg-pc-order-by\" v-model=\"configuration.order_by\" @change=\"onChange\">\n                <option value=\"creation_date-DESC\">Creation date: newest</option>\n                <option value=\"creation_date-ASC\">Creation date: oldest</option>\n                <option value=\"price-DESC\">Price: cheapest</option>\n                <option value=\"price-ASC\">Price: most expensive</option>\n            </select>\n            <select name=\"cfg-pc-order-type\" class=\"cs-input__select\" v-model=\"configuration.order_type\" @change=\"onChange\">\n                <option value=\"ASC\">ASC</option>\n                <option value=\"DESC\">DESC</option>\n            </select>\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-pc-order-by\" class=\"cs-input__label\">Show:</label>\n            <select name=\"cfg-pc-limit\" class=\"cs-input__select\" id=\"cfg-pc-limit\" v-model=\"configuration.limit\" @change=\"onChange\">\n                <option value=\"20\">20 products</option>\n                <option value=\"40\">40 products</option>\n                <option value=\"60\">60 products</option>\n                <option value=\"80\">80 products</option>\n                <option value=\"100\">100 products</option>\n            </select>\n        </div>\n\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    category_id: '',\n                    order_by: 'creation_date',\n                    order_type: 'DESC',\n                    limit: 20,\n                };\n            },\n        },\n    },\n};\n\nexport default ccProductCarouselConfigurator;\n","import $ from 'jquery';\n\nimport ccProductCarouselConfigurator from '../../../components/cc-product-carousel-configurator/src/cc-product-carousel-configurator';\nimport ccCategoryPicker from '../../../components/cc-category-picker/src/cc-category-picker';\n\n/**\n * M2C Product carousel component for admin panel.\n * This component is responsible for managing product carousel's configuration\n */\nconst m2cProductCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccProductCarouselConfigurator,\n    ],\n    template: '#m2c-product-carousel-form',\n    props: {\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            categoryPicker: undefined,\n        };\n    },\n    ready(): void {\n        const _this: any = this;\n\n        // Show loader\n        $( 'body' ).trigger( 'showLoadingPopup' );\n\n        // Get categories JSON with AJAX\n        this.$http.get( this.categoriesDataUrl ).then( ( response: any ): void => {\n            _this.categoryPicker = new ccCategoryPicker( $( '#cp-products-carousel' ), JSON.parse( response.body ), {\n                multiple: false,\n            } );\n            \n            // Hide loader\n            $( 'body' ).trigger( 'hideLoadingPopup' );\n        } );\n    },\n};\n\nexport default m2cProductCarouselConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Product grid configurator component.\n * This component is responsible for displaying products grid  configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccProductsGridConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-products-grid-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cc-products-grid-configurator__columns\">\n        <div class=\"cc-products-grid-configurator__column-left\">\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-pg-category\" class=\"cs-input__label\">Select Category:</label>\n                <input type=\"text\" name=\"cfg-pg-category-select\" class=\"cs-input__input\" id=\"cfg-pg-category\" v-model=\"configuration.category_id\" @change=\"onChange\">\n            </div>\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-pg-order-by\" class=\"cs-input__label\">Order by:</label>\n                <select name=\"cfg-pg-order-by\" class=\"cs-input__select\" id=\"cfg-pg-order-by\" v-model=\"configuration.order_by\" @change=\"onChange\">\n                    <option value=\"creation_date\">Creation date:</option>\n                    <option value=\"price\">Price:</option>\n                </select>\n                <select name=\"cfg-pg-order-type\" class=\"cs-input__select\" v-model=\"configuration.order_type\" @change=\"onChange\">\n                    <option value=\"ASC\">ASC</option>\n                    <option value=\"DESC\">DESC</option>\n                </select>\n            </div>\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-pg-rows_desktop\" class=\"cs-input__label\">Rows desktop:</label>\n                <select name=\"cfg-pg-rows_desktop\" class=\"cs-input__select\" id=\"cfg-pg-rows_desktop\" v-model=\"configuration.rows_desktop\" @change=\"onChange\" number>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </div>\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-pg-rows_tablet\" class=\"cs-input__label\">Rows tablet:</label>\n                <select name=\"cfg-pg-rows_tablet\" class=\"cs-input__select\" id=\"cfg-pg-rows_tablet\" v-model=\"configuration.rows_tablet\" @change=\"onChange\" number>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </div>\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-pg-rows_mobile\" class=\"cs-input__label\">Rows mobile:</label>\n                <select name=\"cfg-pg-rows_mobile\" class=\"cs-input__select\" id=\"cfg-pg-rows_mobile\" v-model=\"configuration.rows_mobile\" @change=\"onChange\" number>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"cc-products-grid-configurator__column-right\">\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-pg-hero\" class=\"cs-input__label\">Hero image:</label>\n                <select name=\"cfg-pg-hero\" class=\"cs-input__select\" id=\"cfg-pg-hero\" v-model=\"configuration.hero\" @change=\"onChange\">\n                    <option value=\"\" selected=\"selected\">No hero image</option>\n                    <option value=\"1\">Left</option>\n                    <option value=\"2\">Right</option>\n                </select>\n            </div>\n\n            <div class=\"cs-input\" v-if=\"configuration.hero\">\n\n                <div class=\"cs-input cs-input--type-inline\">\n                    <label for=\"cfg-pg-hero_image\" class=\"cs-input__label\">Upload image:</label>\n                    <a href=\"#\" class=\"\" href=\"#\">Upload image</a>\n                    <input type=\"hidden\" name=\"cfg-pg-hero_image\" class=\"cs-input__input\" id=\"cfg-pg-hero_image\" v-model=\"configuration.hero_image\" @change=\"onChange\">\n                </div>\n                <div class=\"cs-input cs-input--type-inline\">\n                    <label for=\"cfg-pg-hero_headline\" class=\"cs-input__label\">Headline:</label>\n                    <input type=\"text\" name=\"cfg-pg-hero_headline\" class=\"cs-input__input\" id=\"cfg-pg-hero_headline\" v-model=\"configuration.hero_headline\" @change=\"onChange\">\n                </div>\n                <div class=\"cs-input cs-input--type-inline\">\n                    <label for=\"cfg-pg-hero_subheadline\" class=\"cs-input__label\">Subheadline:</label>\n                    <input type=\"text\" name=\"cfg-pg-hero_subheadline\" class=\"cs-input__input\" id=\"cfg-pg-hero_subheadline\" v-model=\"configuration.hero_subheadline\" @change=\"onChange\">\n                </div>\n                <div class=\"cs-input cs-input--type-inline\">\n                    <label for=\"cfg-pg-hero_url\" class=\"cs-input__label\">Url:</label>\n                    <input type=\"text\" name=\"cfg-pg-hero_url\" class=\"cs-input__input\" id=\"cfg-pg-hero_url\" v-model=\"configuration.hero_url\" @change=\"onChange\">\n                </div>\n                <div class=\"cs-input cs-input--type-inline\">\n                    <label for=\"cfg-pg-hero_button_label\" class=\"cs-input__label\">CTA button label:</label>\n                    <input type=\"text\" name=\"cfg-pg-hero_button_label\" class=\"cs-input__input\" id=\"cfg-pg-hero_button_label\" v-model=\"configuration.button_label\" @change=\"onChange\">\n                </div>\n\n            </div>\n        </div>\n        </div>\n\n        <button type=\"submit\">Save</button>\n    </form>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-actions': componentActions,\n    },\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    category_id: '',\n                    order_by: 'creation_date',\n                    order_type: 'ASC',\n                    rows_desktop: 2,\n                    rows_tablet: 2,\n                    rows_mobile: 2,\n                    hero_image: '',\n                    hero_headline: '',\n                    hero_subheadline: '',\n                    hero_url: '',\n                    hero_button_label: '',\n                };\n            },\n        },\n    }\n}\n\nexport default ccProductsGridConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport ccCategoryPicker from '../../../components/cc-category-picker/src/cc-category-picker';\nimport ccProductsGridConfigurator from '../../../components/cc-products-grid-configurator/src/cc-products-grid-configurator';\n\n/**\n * Product grid configurator component.\n * This component is responsible for displaying products grid  configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cProductsGridConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccProductsGridConfigurator,\n    ],\n    template: `<div class=\"m2c-products-grid-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"m2c-products-grid-configurator__section\">\n            <h3 class=\"m2c-products-grid-configurator__subtitle\">${$t( 'Data source' )}:</h3>\n            <div class=\"m2c-products-grid-configurator__scenario-options m2c-products-grid-configurator__scenario-options--inputs\">\n                <div class=\"m2-input m2-input--type-inline | m2c-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-category\" class=\"m2-input__label | m2c-products-grid-configurator__section-option-label\">${$t( 'Category ID' )}:</label>\n                    <select class=\"m2-input__select tmp-select\" style=\"width:25em\">\n                        <option>${$t( 'Select...' )}</option>\n                    </select>\n                    <input type=\"hidden\" name=\"cfg-pg-category-select\" class=\"m2-input__input | m2c-products-grid-configurator__form-input\" id=\"cfg-pg-category\" v-model=\"configuration.category_id\" @change=\"onChange\">\n                </div>\n                <div class=\"m2-input m2-input--type-inline | m2c-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-order-by\" class=\"m2-input__label | m2c-products-grid-configurator__section-option-label\">${$t( 'Order by' )}:</label>\n                    <select name=\"cfg-pg-order-by\" class=\"m2-input__select\" id=\"cfg-pg-order-by\" v-model=\"configuration.order_by\" @change=\"onChange\">\n                        <option value=\"creation_date\">${$t( 'Creation date' )}</option>\n                        <option value=\"price\">${$t( 'Price' )}</option>\n                    </select>\n                    <select name=\"cfg-pg-order-type\" class=\"m2-input__select\" v-model=\"configuration.order_type\" @change=\"onChange\">\n                        <option value=\"ASC\">${$t( 'Ascending' )}</option>\n                        <option value=\"DESC\">${$t( 'Descending' )}</option>\n                    </select>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"m2c-products-grid-configurator__section\">\n            <h3 class=\"m2c-products-grid-configurator__subtitle\">${$t( 'Mobile Layout' )}:</h3>\n            <div class=\"m2c-products-grid-configurator__scenario-options\">\n                <ul class=\"m2c-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'm2c-products-grid-configurator__option--selected': configuration.rows_mobile == optionId,\n                        }\"\n                        class=\"m2c-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.rows_mobile\"\n                        @click=\"setOption('rows_mobile', optionId)\">\n                        <div class=\"m2c-products-grid-configurator__option-wrapper\">\n                            <svg class=\"m2c-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"m2c-products-grid-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"m2c-products-grid-configurator__section\">\n            <h3 class=\"m2c-products-grid-configurator__subtitle\">${$t( 'Tablet Layout' )}:</h3>\n            <div class=\"m2c-products-grid-configurator__scenario-options\">\n                <ul class=\"m2c-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'm2c-products-grid-configurator__option--selected': configuration.rows_tablet == optionId,\n                        }\"\n                        class=\"m2c-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.rows_tablet\"\n                        @click=\"setOption('rows_tablet', optionId)\">\n                        <div class=\"m2c-products-grid-configurator__option-wrapper\">\n                            <svg class=\"m2c-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"m2c-products-grid-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"m2c-products-grid-configurator__section\">\n            <h3 class=\"m2c-products-grid-configurator__subtitle\">${$t( 'Desktop Layout' )}:</h3>\n            <div class=\"m2c-products-grid-configurator__scenario-options\">\n                <ul class=\"m2c-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'm2c-products-grid-configurator__option--selected': configuration.rows_desktop == optionId,\n                        }\"\n                        class=\"m2c-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.rows_desktop\"\n                        @click=\"setOption('rows_desktop', optionId)\">\n                        <div class=\"m2c-products-grid-configurator__option-wrapper\">\n                            <svg class=\"m2c-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"m2c-products-grid-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"m2c-products-grid-configurator__section\">\n            <h3 class=\"m2c-products-grid-configurator__subtitle\">${$t( 'Hero Teaser' )}:</h3>\n            <div class=\"m2c-products-grid-configurator__scenario-options\">\n                <ul class=\"m2c-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'm2c-products-grid-configurator__option--selected': configuration.hero.position == optionId,\n                        }\"\n                        class=\"m2c-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.hero.position\"\n                        @click=\"setOption('hero', optionId, 'position')\">\n                        <div class=\"m2c-products-grid-configurator__option-wrapper\">\n                            <svg class=\"m2c-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"m2c-products-grid-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <div class=\"m2c-products-grid-configurator__item\" v-show=\"configuration.hero.position\">\n            <div class=\"m2c-hero-carousel-configurator__item-content\">\n                <div v-bind:class=\"[ 'm2c-products-grid-configurator__item-col-left', configuration.hero.image.src ? 'm2c-products-grid-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                    <div class=\"m2c-products-grid-configurator__item-image-wrapper\">\n                        <img :src=\"configuration.hero.image.src\" class=\"m2c-image-teaser-configurator__item-image\" v-show=\"configuration.hero.image.src\">\n                        <input type=\"hidden\" v-model=\"configuration.hero.image.src\">\n                        <input type=\"hidden\" class=\"m2c-products-grid-configurator__image-url\" id=\"products-grid-img\">\n                        <svg class=\"m2c-products-grid-configurator__item-image-placeholder\" v-show=\"!configuration.hero.image.src\">\n                            <use xlink:href=\"#icon_image-placeholder\"></use>\n                        </svg>\n\n                        <div class=\"m2c-products-grid-configurator__item-actions\">\n                            <cc-component-actions>\n                                <template slot=\"cc-component-actions__buttons\">\n                                    <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | m2c-products-grid-configurator__item-action-button\" @click=\"getImageUploader()\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_upload-image\"></use>\n                                            </svg>\n                                            {{ configuration.hero.image.src ? imageUploadedText : noImageUploadedText }}\n                                    </button>\n                                </template>\n                            </cc-component-actions>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"m2c-products-grid-configurator__item-col-right\">\n                    <div class=\"m2-input m2-input--group\">\n                        <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_content-position-variant\" class=\"m2-input__label\">${$t( 'Display variant' )}:</label>\n                            <select name=\"cfg-pg-hero_content-position-variant\" class=\"m2-input__select\" id=\"cfg-pg-hero_content-position-variant\" v-model=\"configuration.hero.displayVariant\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                <option value=\"1\">${$t( 'Text vertically centered on the left' )}</option>\n                                <option value=\"3\">${$t( 'Text vertically centered in the middle' )}</option>\n                                <option value=\"2\">${$t( 'Text on the bottom, left corner' )}</option>\n                                <option value=\"4\">${$t( 'Text on the bottom - centered' )}</option>\n                            </select>\n                        </div>\n                        <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_color-scheme\" class=\"m2-input__label\">${$t( 'Text color scheme' )}:</label>\n                            <select name=\"cfg-pg-hero_color-scheme\" class=\"m2-input__select\" id=\"cfg-pg-hero_color-scheme\" v-model=\"configuration.hero.colorScheme\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                <option value=\"light\">${$t( 'Light' )}</option>\n                                <option value=\"dark\">${$t( 'Dark' )}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"m2-input | m2c-products-grid-configurator__item-form-element\">\n                        <label for=\"cfg-pg-hero_headline\" class=\"m2-input__label\">${$t( 'Headline' )}:</label>\n                        <input type=\"text\" name=\"cfg-pg-hero_headline\" class=\"m2-input__input\" id=\"cfg-pg-hero_headline\" v-model=\"configuration.hero.headline\" @change=\"onChange\">\n                    </div>\n                    <div class=\"m2-input | m2c-products-grid-configurator__item-form-element\">\n                        <label for=\"cfg-pg-hero_subheadline\" class=\"m2-input__label\">${$t( 'Subheadline' )}:</label>\n                        <input type=\"text\" name=\"cfg-pg-hero_subheadline\" class=\"m2-input__input\" id=\"cfg-pg-hero_subheadline\" v-model=\"configuration.hero.subheadline\" @change=\"onChange\">\n                    </div>\n                    <div class=\"m2-input | m2c-products-grid-configurator__item-form-element\">\n                        <label for=\"cfg-pg-hero_paragraph\" class=\"m2-input__label | m2c-products-grid-configurator__form-label--textarea\">${$t( 'Paragraph' )}:</label>\n                        <textarea type=\"text\" name=\"cfg-pg-hero_paragraph\" class=\"m2-input__textarea\" id=\"cfg-pg-hero_paragraph\" placeholder=\"${$t( '(max 200 characters)' )}\" maxlength=\"200\" v-model=\"configuration.hero.paragraph\"></textarea>\n                    </div>\n                    <div class=\"m2-input m2-input--group\">\n                        <div class=\"m2-input | m2c-products-grid-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_button_label\" class=\"m2-input__label\">${$t( 'Button label' )}:</label>\n                            <input type=\"text\" name=\"cfg-pg-hero_button_label\" class=\"m2-input__input\" id=\"cfg-pg-hero_button_label\" v-model=\"configuration.hero.button.label\" @change=\"onChange\">\n                        </div>\n                        <div class=\"m2-input m2-input--type-addon | m2c-products-grid-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_url\" class=\"m2-input__label\">${$t( 'Url' )}:</label>\n                            <input type=\"text\" name=\"cfg-pg-hero_url\" class=\"m2-input__input | m2c-products-grid__hero-url\" id=\"cfg-pg-hero_url\" v-model=\"configuration.hero.href\">\n                            <span class=\"m2-input__addon | m2c-products-grid-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal()\">\n                                <svg class=\"m2-input__addon-icon\">\n                                    <use xlink:href=\"#icon_link\"></use>\n                                </svg>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    category_id: '',\n                    order_by: 'creation_date',\n                    order_type: 'ASC',\n                    rows_desktop: 1,\n                    rows_tablet: 1,\n                    rows_mobile: 1,\n                    hero: {\n                        position: '',\n                        image: {\n                            src: '',\n                            alt: '',\n                        },\n                        displayVariant: '1',\n                        colorScheme: 'light',\n                        headline: '',\n                        subheadline: '',\n                        paragraph: '',\n                        href: '',\n                        button: {\n                            label: '',\n                        },\n                        decoded_image: '',\n                    },\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            imageUploadedText: $t( 'Change' ),\n            noImageUploadedText: $t( 'Upload' ),\n            categoryPicker: undefined,\n            scenarioOptions: {\n                rows_mobile: {\n                    1: {\n                        name:  $t( '1 row of products' ),\n                        iconId: 'pr_1',\n                    },\n                    2: {\n                        name:  $t( '2 rows of products' ),\n                        iconId: 'pr_2',\n                    },\n                    3: {\n                        name:  $t( '3 rows of products' ),\n                        iconId: 'pr_3',\n                    },\n                    4: {\n                        name:  $t( '4 rows of products' ),\n                        iconId: 'pr_4',\n                    },\n                },\n                rows_tablet: {\n                    1: {\n                        name:  $t( '1 row of products' ),\n                        iconId: 'pr_1',\n                    },\n                    2: {\n                        name:  $t( '2 rows of products' ),\n                        iconId: 'pr_2',\n                    },\n                    3: {\n                        name:  $t( '3 rows of products' ),\n                        iconId: 'pr_3',\n                    },\n                    4: {\n                        name:  $t( '4 rows of products' ),\n                        iconId: 'pr_4',\n                    },\n                },\n                rows_desktop: {\n                    1: {\n                        name:  $t( '1 row of products' ),\n                        iconId: 'pr_1',\n                    },\n                    2: {\n                        name:  $t( '2 rows of products' ),\n                        iconId: 'pr_2',\n                    },\n                    3: {\n                        name:  $t( '3 rows of products' ),\n                        iconId: 'pr_3',\n                    },\n                    4: {\n                        name:  $t( '4 rows of products' ),\n                        iconId: 'pr_4',\n                    },\n                },\n                hero: {\n                    position: {\n                        '': {\n                            name:  $t( 'No Hero Teaser' ),\n                            iconId: 'no_teaser',\n                        },\n                        'left': {\n                            name:  $t( 'Hero Teaser on the left' ),\n                            iconId: 'teaser_left',\n                        },\n                        'right': {\n                            name:  $t( 'Hero Teaser on the right' ),\n                            iconId: 'teaser_right',\n                        }\n                    }\n                },\n            },\n        };\n    },\n    methods: {\n        setOption( optionCategory: string, optionId: string, key?: string ): void {\n            //this.configuration[ optionCategory ] = this.scenarioOptions[ optionCategory ][ optionId ];\n            if ( key ) {\n                this.configuration[ optionCategory ][ key ] = optionId;\n            } else {\n                this.configuration[ optionCategory ] = optionId;\n            }\n        },\n        /* Opens M2's built-in image manager modal.\n         * Manages all images: image upload from hdd, select image that was already uploaded to server.\n         * @param index {number} - index of image of image teaser.\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/products-grid-img/`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $( document ).on( 'change', '.m2c-products-grid-configurator__image-url', ( event: Event ): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded( event.target );\n                    setTimeout( (): void => {\n                        isAlreadyCalled = false;\n                    }, 100 );\n                }\n            } );\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            // const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match( '___directive\\/([a-zA-Z0-9]*)' )[ 1 ];\n            const imgEndpoint: string = this.imageEndpoint.replace( '{/encoded_image}', encodedImage );\n\n            this.configuration.hero.decoded_image = Base64 ? Base64.decode( encodedImage ) : window.atob( encodedImage );\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                _this.configuration.hero.image.src = img.getAttribute( 'src' );\n                _this.onChange();\n            };\n            img.src = imgEndpoint;\n        },\n\n        /*\n         * Opens modal with M2 built-in widget chooser\n         */\n        openCtaTargetModal(): void {\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/widget_target_id/cfg-pg-hero_url` );\n\n            this.wWidgetListener();\n        },\n\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.ctaTarget is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-products-grid__hero-url' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         */\n        wWidgetListener(): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                const _this: any = this;\n                const button: any = widgetTools.dialogWindow[ 0 ].querySelector( '#insert_button' );\n\n                button.onclick = null;\n                button.addEventListener( 'click', function(): void {\n                    _this.configuration.hero.href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                setTimeout( this.wWidgetListener, 300 );\n            }\n        },\n    },\n    ready(): void {\n        const _this: any = this;\n\n        // Show loader\n        $( 'body' ).trigger( 'showLoadingPopup' );\n\n        // Get categories JSON with AJAX\n        this.$http.get( this.categoriesDataUrl ).then( ( response: any ): void => {\n            _this.categoryPicker = new ccCategoryPicker( $( '#cfg-pg-category' ), JSON.parse( response.body ), {\n                multiple: false,\n            } );\n\n            // Hide loader\n            $( 'body' ).trigger( 'hideLoadingPopup' );\n            $( '.tmp-select' ).remove();\n        } );\n\n        this.imageUploadListener();\n        this.widgetSetListener();\n    },\n};\n\nexport default m2cProductsGridConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\r\n\r\n/**\r\n * Static block configurator component.\r\n * This component is responsible for displaying static block's configuration form\r\n * @type {vuejs.ComponentOption} Vue component object.\r\n */\r\nconst ccStaticBlockConfigurator: vuejs.ComponentOption = {\r\n    mixins: [\r\n        ccComponentConfigurator,\r\n    ],\r\n    template: `<form class=\"cc-static-block-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\r\n        <div class=\"cs-input cs-input--type-inline\">\r\n            <label for=\"cfg-static-block\" class=\"cs-input__label\">Static block:</label>\r\n            <select name=\"select\" class=\"cs-input__select\" id=\"cfg-static-block\" v-model=\"configuration.identifier\" @change=\"onChange\">\r\n                <option value=\"1\" selected>Foo</option>\r\n                <option value=\"2\">Bar</option>\r\n            </select>\r\n        </div>\r\n        <button type=\"submit\">Save</button>\r\n    </form>`,\r\n    props: {\r\n        configuration: {\r\n            type: Object,\r\n            default(): Object {\r\n                return {\r\n                    identifier: '',\r\n                    title: '',\r\n                };\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport default ccStaticBlockConfigurator;\r\n","import ccStaticBlockConfigurator from '../../../components/cc-static-block-configurator/src/cc-static-block-configurator';\n\nconst m2cStaticBlockConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccStaticBlockConfigurator,\n    ],\n    template: '#m2c-static-blocks-form',\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            const selectedOption: any = this.$els.cmsBlocksSelect.options[ this.$els.cmsBlocksSelect.selectedIndex ];\n\n            if ( this.configuration.identifier === selectedOption.value && this.configuration.identifier !== '' ) {\n                this.configuration.title = selectedOption.text;\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport default m2cStaticBlockConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\n/**\n * Magento product-grid teasers configurator component.\n * This component will be responsible for configuration of image teasers inside native products grid on M2 category pages\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccMagentoProductGridTeasersConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<div class=\"cc-magento-product-grid-teasers-configurator | {{ class }}\">\n    <cc-component-adder>\n        <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only\" @click=\"createNewTeaser( 0 )\">\n            <svg class=\"action-button__icon action-button__icon--size_300\">\n                <use xlink:href=\"../images/sprites.svg#icon_plus\"></use>\n            </svg>\n        </button>\n    </cc-component-adder>\n    <template v-for=\"item in configuration.teasers\">\n        <div class=\"cc-magento-product-grid-teasers-configurator__item\">\n            <div class=\"cc-magento-product-grid-teasers-configurator__item-actions\">\n                <cc-component-actions>\n                    <template slot=\"cc-component-actions__top\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up\" @click=\"moveTeaserUp( $index )\" :class=\"[ isFirstComponent( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstComponent( $index )\">\n                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                <use xlink:href=\"../images/sprites.svg#icon_arrow-up\"></use>\n                            </svg>\n                        </button>\n                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down\" @click=\"moveTeaserDown( $index )\" :class=\"[ isLastComponent( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastComponent( $index )\">\n                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                <use xlink:href=\"../images/sprites.svg#icon_arrow-down\"></use>\n                            </svg>\n                        </button>\n                    </template>\n                    <template slot=\"cc-component-actions__bottom\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete\" @click=\"deleteTeaser( $index )\">\n                            <svg class=\"action-button__icon\">\n                                <use xlink:href=\"../images/sprites.svg#icon_trash-can\"></use>\n                            </svg>\n                        </button>\n                    </template>\n                </cc-component-actions>\n            </div>\n            <div class=\"cc-magento-product-grid-teasers-configurator__item-content\">\n                <div class=\"cc-magento-product-grid-teasers__item-image\"></div>\n                <div class=\"cc-magento-product-grid-teasers__item-options\">\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"cs-input__label\">Display variant:</label>\n                        <select name=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"cs-input__select\" id=\"cfg-mpg-teaser{{ $index }}-variant\" v-model=\"configuration.displayVariant\">\n                            <option value=\"variant-1\">Text vertically centered on the left</option>\n                            <option value=\"variant-2\">Text vertically centered in the middle</option>\n                            <option value=\"variant-3\">Text on the bottom, left corner</option>\n                            <option value=\"variant-4\">Text on the bottom - centered</option>\n                        </select>\n                    </div>\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"cs-input__label\">Headline:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"cs-input__input\">\n                    </div>\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"cs-input__label\">Paragraph:</label>\n                        <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"cs-input__textarea\" placeholder=\"(max 200 characters)\" maxlength=\"200\"></textarea>\n                    </div>\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-ctaLabel\" class=\"cs-input__label\">CTA label:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-mpg-teaser{{ $index }}-ctaLabel\" class=\"cs-input__input\">\n                    </div>\n                    <div class=\"cs-input cs-input--type-addon\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"cs-input__label\">CTA label:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"cs-input__input\">\n                    </div>\n                    <div class=\"cs-input cs-input--type-addon\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-cta-target\" class=\"cs-input__label\">CTA target link:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].ctaTarget\" id=\"cfg-mpg-teaser{{ $index }}-cta-target\" class=\"cs-input__input\">\n                        <span class=\"cs-input__addon\">\n                            <svg class=\"cs-input__addon-icon\">\n                                <use xlink:href=\"../images/sprites.svg#icon_link\"></use>\n                            </svg>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <cc-component-adder v-if=\"configuration.items.length\">\n            <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only\" @click=\"createNewTeaser( $index + 1 )\">\n                <svg class=\"action-button__icon action-button__icon--size_300\">\n                    <use xlink:href=\"../images/sprites.svg#icon_plus\"></use>\n                </svg>\n            </button>\n        </cc-component-adder>\n    </template>\n</div>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    teasers: [],\n                };\n            },\n        },\n    },\n};\n\nexport default ccMagentoProductGridTeasersConfigurator;\n","import ccMagentoProductGridTeasersConfigurator from '../../../components/cc-magento-product-grid-teasers-configurator/src/cc-magento-product-grid-teasers-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\n// Pattern for teaser Item\nconst teaserDataPattern: any = {\n    sizeSelect: '2x1',\n    size: {\n        x: 2,\n        y: 1\n    },\n    position: 'left',\n    row: 1,\n    isAvailableForMobile: 1,\n    image: '',\n    decodedImage: '',\n    displayVariant: 'variant-1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'Check offer' ),\n    href: '',\n};\n\n/**\n * M2C skin for magento product grid teasers configurator component.\n * This component will be responsible for configuration of image teasers inside native products grid on M2 category pages\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cMagentoProductGridTeasersConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccMagentoProductGridTeasersConfigurator,\n    ],\n    template: `<div class=\"m2c-magento-product-grid-teasers-configurator | {{ class }}\">\n        <cc-component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.teasers.length\">\n            <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"createNewTeaser( 0 )\">\n                <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                    <use xlink:href=\"#icon_plus\"></use>\n                </svg>\n            </button>\n        </cc-component-adder>\n\n        <template v-for=\"item in configuration.teasers\">\n            <div class=\"m2c-magento-product-grid-teasers-configurator__item\" id=\"m2c-magento-pg-teaser-{{ $index }}\">\n                <cc-component-adder class=\"cc-component-adder cc-component-adder--first\">\n                    <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"createNewTeaser( $index )\">\n                        <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </cc-component-adder>\n\n                <div class=\"m2c-magento-product-grid-teasers-configurator__item-content\">\n                    <div v-bind:class=\"[ 'm2c-magento-product-grid-teasers-configurator__item-col-left', configuration.teasers[$index].image ? 'm2c-magento-product-grid-teasers-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                        <div class=\"m2c-magento-product-grid-teasers-configurator__item-image-wrapper\">\n                            <img :src=\"configuration.teasers[$index].image\" class=\"m2c-magento-product-grid-teasers-configurator__item-image\" v-show=\"configuration.teasers[$index].image\">\n                            <input type=\"hidden\" v-model=\"configuration.teasers[$index].image\">\n                            <input type=\"hidden\" class=\"m2c-magento-product-grid-teasers-configurator__image-url\" id=\"mpg-teaser-img-{{$index}}\">\n                            <svg class=\"m2c-magento-product-grid-teasers-configurator__item-image-placeholder\" v-show=\"!configuration.teasers[$index].image\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n\n                            <div class=\"m2c-magento-product-grid-teasers-configurator__item-actions\">\n                                <cc-component-actions>\n                                    <template slot=\"cc-component-actions__buttons\">\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"moveHeroItemUp( $index )\" :class=\"[ isFirstTeaser( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstTeaser( $index )\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-up\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"moveHeroItemDown( $index )\" :class=\"[ isLastTeaser( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastTeaser( $index )\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-down\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_upload-image\"></use>\n                                                </svg>\n                                                {{ configuration.teasers[$index].image ? imageUploadedText : noImageUploadedText }}\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"deleteTeaser( $index )\">\n                                            <svg class=\"action-button__icon\">\n                                                <use xlink:href=\"#icon_trash-can\"></use>\n                                            </svg>\n                                        </button>\n                                    </template>\n                                </cc-component-actions>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"m2c-magento-product-grid-teasers-configurator__item-col-right\">\n                        <div class=\"m2-input m2-input--group m2-input--group-quarter\">\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-size-select\" class=\"m2-input__label\">${$t( 'Teaser size' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-size-select\" class=\"m2-input__select | m2c-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-size-select\" v-model=\"configuration.teasers[$index].sizeSelect\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\" @change=\"setTeaserSize($index)\">\n                                    <option value=\"1x1\">${$t( '1x1' )}</option>\n                                    <option value=\"1x2\">${$t( '1x2' )}</option>\n                                    <option value=\"2x1\">${$t( '2x1' )}</option>\n                                    <option value=\"2x2\">${$t( '2x2' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-position\" class=\"m2-input__label\">${$t( 'Position' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-position\" class=\"m2-input__select | m2c-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-position\" v-model=\"configuration.teasers[$index].position\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"left\">${$t( 'Left' )}</option>\n                                    <option value=\"center\">${$t( 'Center' )}</option>\n                                    <option value=\"right\">${$t( 'Right' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-row\" class=\"m2-input__label\">${$t( 'Row' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-row\" class=\"m2-input__select | m2c-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-row\" v-model=\"configuration.teasers[$index].row\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option v-for=\"i in rowsCount\" value=\"{{ i + 1 }}\">{{ i + 1 }}</option>\n                                    <option value=\"1000\">${$t( 'as last' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-mobile\" class=\"m2-input__label\">${$t( 'Show in mobiles' )}:</label>\n                                <div class=\"admin__actions-switch\" data-role=\"switcher\">\n                                    <input type=\"checkbox\" class=\"admin__actions-switch-checkbox\" id=\"cfg-mpg-teaser{{ $index }}-mobile\" name=\"cfg-mpg-teaser{{ $index }}-mobile\" v-model=\"configuration.teasers[$index].isAvailableForMobile\">\n                                    <label class=\"admin__actions-switch-label\" for=\"cfg-mpg-teaser{{ $index }}-mobile\"\">\n                                        <span class=\"admin__actions-switch-text\" data-text-on=\"${$t( 'Yes' )}\" data-text-off=\"${$t( 'No' )}\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"m2-input m2-input--group\">\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"m2-input__label\">${$t( 'Display variant' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"m2-input__select | m2c-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-variant\" v-model=\"configuration.teasers[$index].displayVariant\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"variant-1\">${$t( 'Text vertically centered on the left' )}</option>\n                                    <option value=\"variant-2\">${$t( 'Text vertically centered in the middle' )}</option>\n                                    <option value=\"variant-3\">${$t( 'Text on the bottom, left corner' )}</option>\n                                    <option value=\"variant-4\">${$t( 'Text on the bottom - centered' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-color-scheme\" class=\"m2-input__label\">${$t( 'Text color scheme' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-color-scheme\" class=\"m2-input__select | m2c-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-color-scheme\" v-model=\"configuration.teasers[$index].colorScheme\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"light\">${$t( 'Light' )}</option>\n                                    <option value=\"dark\">${$t( 'Dark' )}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                            <label for=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"m2-input__label\">${$t( 'Headline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.teasers[$index].headline\" id=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"m2-input__input\">\n                        </div>\n                        <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                            <label for=\"cfg-mpg-teaser{{ $index }}-subheadline\" class=\"m2-input__label\">${$t( 'Subheadline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.teasers[$index].subheadline\" id=\"cfg-mpg-teaser{{ $index }}-subheadline\" class=\"m2-input__input\">\n                        </div>\n                        <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                            <label for=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"m2-input__label\">${$t( 'Paragraph' )}:</label>\n                            <textarea type=\"text\" v-model=\"configuration.teasers[$index].paragraph\" id=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"m2-input__textarea\" placeholder=\"(${$t( 'max 200 characters' )})\" maxlength=\"200\"></textarea>\n                        </div>\n                        <div class=\"m2-input m2-input--group\">\n                            <div class=\"m2-input | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"m2-input__label\">${$t( 'CTA label' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.teasers[$index].ctaLabel\" id=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input m2-input--type-addon | m2c-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"teaser-ctatarget-output-{{ $index }}\" class=\"m2-input__label\">${$t( 'CTA target link' )}:</label>\n                                <input type=\"text\" class=\"m2-input__input | m2c-magento-product-grid-teasers-configurator__cta-target-link\" v-model=\"configuration.teasers[$index].href\" id=\"teaser-ctatarget-output-{{ $index }}\">\n                                <span class=\"m2-input__addon | m2c-magento-product-grid-teasers-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                    <svg class=\"m2-input__addon-icon\">\n                                        <use xlink:href=\"#icon_link\"></use>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <cc-component-adder class=\"cc-component-adder cc-component-adder--last\">\n                    <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-magento-product-grid-teasers-configurator__item-action-button\" @click=\"createNewTeaser( $index + 1 )\">\n                        <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </cc-component-adder>\n            </div>\n        </template>\n\n        <div class=\"m2c-magento-product-grid-teasers-configurator__modal\" v-el:error-modal></div>\n    </div>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    teasers: [ JSON.parse( JSON.stringify( teaserDataPattern ) ) ],\n                    json: [],\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n        productsPerPage: {\n            type: String,\n            default: '30',\n        },\n    },\n    data(): any {\n        return {\n            imageUploadedText: $t( 'Change' ),\n            noImageUploadedText: $t( 'Upload' ),\n            configuration: this.getInitialConfiguration(),\n            rowsCount: this.getCurrentFErowsCount(),\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            //this.cleanupConfiguration();\n            this.generateTeasersConfig();\n            this.onSave();\n        },\n    },\n    methods: {\n        getInitialConfiguration(): any {\n            if ( !this.configuration ) {\n                this.configuration = {\n                    teasers: [ JSON.parse( JSON.stringify( teaserDataPattern ) ) ],\n                };\n            }\n\n            return this.configuration;\n        },\n        /**\n         * Calculates \"virtual\" length of products in the grid\n         * \"virtual\" means that teasers are included and their sizes are calculated too\n         * f.e if teaser covers 2 tiles it counts as 2 brics, accordingly if it's 2x2 then it takes 4 bricks\n         * @return {number} number of available bricks in grid\n         */\n        getVirtualBricksLength(): number {\n            let virtualLength: number = parseInt( this.productsPerPage, 10 );\n\n            for ( let i: number = 0; i < this.configuration.teasers.length; i++ ) {\n                virtualLength += this.configuration.teasers[ i ].size.x * this.configuration.teasers[ i ].size.y - 1;\n            }\n\n            return virtualLength;\n        },\n        /**\n         * Calculates how many rows there's displayed if the grid on front-end\n         * Currently divider is hardcoded for desktop breakpoint\n         * @return {number} number of rows in FE grid\n         */\n        getCurrentFErowsCount(): number {\n            if ( this.ccConfig.columnsConfig.filterScenario === 'sidebar' ) {\n                return Math.ceil( this.getVirtualBricksLength() / this.ccConfig.columnsConfig.withSidebar.desktop );\n            }\n\n            return Math.ceil( this.getVirtualBricksLength() / this.ccConfig.columnsConfig.full.desktop );\n        },\n\n        /**\n         * When you open component after changes in M2 grid settings (when products per page chnaged)\n         * Or, after you delete some teasers - this method updates available rows count on FE side and checks if \n         * current row setting of the teaser is not higher than this.rowsCount.\n         * If yes, it changes row setting to be equal this.rowsCount\n         */\n        fixOverflowedRowsSetup(): void {\n            this.rowsCount = this.getCurrentFErowsCount();\n\n            for ( let i: number = 0; i < this.configuration.teasers.length; i++ ) {\n                if ( this.configuration.teasers[ i ].row > this.rowsCount ) {\n                    this.configuration.teasers[ i ].row = this.rowsCount;\n                }\n            }\n        },\n        /* Opens M2's built-in image manager modal\n         * Manages all images: image upload from hdd, select image that was already uploaded to server\n         * @param index {number} - index of image of hero item\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/mpg-teaser-img-${index}/`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $( document ).on( 'change', '.m2c-magento-product-grid-teasers-configurator__image-url', ( event: Event ): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded( event.target );\n                    setTimeout( (): void => {\n                        isAlreadyCalled = false;\n                    }, 100 );\n                }\n            } );\n        },\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match( '___directive\\/([a-zA-Z0-9]*)' )[ 1 ];\n            const imgEndpoint: string = this.imageEndpoint.replace( '{/encoded_image}', encodedImage );\n\n            this.configuration.teasers[ itemIndex ].decodedImage = Base64 ? Base64.decode( encodedImage ) : window.atob( encodedImage );\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                _this.configuration.teasers[ itemIndex ].image = img.getAttribute( 'src' );\n                _this.onChange();\n            };\n            img.src = imgEndpoint;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal( index: number ): void {\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/filter_widgets/Link/widget_target_id/teaser-ctatarget-output-${index}` );\n            this.wWidgetListener( index );\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.href is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-magento-product-grid-teasers-configurator__cta-target-link' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener( itemIndex: number ): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                const _this: any = this;\n                const button: any = widgetTools.dialogWindow[ 0 ].querySelector( '#insert_button' );\n\n                button.onclick = null;\n                button.addEventListener( 'click', function(): void {\n                    _this.configuration.teasers[ itemIndex ].href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                window.setTimeout( (): void => {\n                    this.wWidgetListener( itemIndex );\n                }, 300 );\n            }\n        },\n        setTeaserSize( index: number ) {\n            this.fixOverflowedRowsSetup();\n\n            const size: any = this.configuration.teasers[ index ].sizeSelect.split( 'x' );\n            this.configuration.teasers[ index ].size.x = size[ 0 ];\n            this.configuration.teasers[ index ].size.y = size[ 1 ];\n        },\n        /**\n         * Creates new hero item and adds it to a specified index.\n         * @param {number} index New component's index in components array.\n         */\n        createNewTeaser( index: number ): void {\n            this.configuration.teasers.splice( index, 0, JSON.parse( JSON.stringify( teaserDataPattern ) ) );\n            this.rowsCount = this.getCurrentFErowsCount();\n            this.onChange();\n        },\n        /**\n         * Moves hero item under given index up by swaping it with previous element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveTeaserUp( index: number ): void {\n            const _this: any = this;\n\n            if ( index > 0 ) {\n                const $thisItem: any = $( `#m2c-magento-pg-teaser-${ index }` );\n                const $prevItem: any = $( `#m2c-magento-pg-teaser-${ index - 1 }` );\n\n                $thisItem.addClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevItem.outerHeight( true ) ) }px )` );\n                $prevItem.addClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', `translateY( ${ $thisItem.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.teasers.splice( index - 1, 0, _this.configuration.teasers.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', '' );\n                    $prevItem.removeClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves hero item under given index down by swaping it with next element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveTeaserDown( index: number ): void {\n            const _this: any = this;\n\n            if ( index < this.configuration.teasers.length - 1 ) {\n                const $thisItem: any = $( `#m2c-magento-pg-teaser-${ index }` );\n                const $nextItem: any = $( `#m2c-magento-pg-teaser-${ index + 1 }` );\n\n                $thisItem.addClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', `translateY( ${ $nextItem.outerHeight( true ) }px )` );\n                $nextItem.addClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisItem.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.teasers.splice( index + 1, 0, _this.configuration.teasers.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', '' );\n                    $nextItem.removeClass( 'm2c-magento-product-grid-teasers-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Tells if item with given index is the first hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is first in array.\n         */\n        isFirstTeaser( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if hero item with given index is the last hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is last in array.\n         */\n        isLastTeaser( index: number ): boolean {\n            return index === this.configuration.teasers.length - 1;\n        },\n        /* Removes hero item after Delete button is clicked\n         * and triggers hero item's onChange to update it's configuration\n         * @param index {number} - index of hero item to remove\n         */\n        deleteTeaser( index: number ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        component.configuration.teasers.splice( index, 1 );\n                        component.fixOverflowedRowsSetup();\n                        component.onChange();\n                    },\n                },\n            } );\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty teasers have to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            const filteredArray: any = this.configuration.teasers.filter( ( teaser: any ): any => teaser.image !== '' );\n            this.configuration.teasers = filteredArray;\n            this.onChange();\n        },\n        /* Generates 1:1 JSON for grid-layout component so it can be simply passed without any modifications within templates\n         */\n        generateTeasersConfig(): void {\n            this.configuration.json = [];\n\n            for ( let i: number = 0; i < this.configuration.teasers.length; i++ ) {\n                const teaser: any = {\n                    id: i + 1,\n                    mobile: Number( this.configuration.teasers[ i ].isAvailableForMobile ),\n                    size: {\n                        x: Number( this.configuration.teasers[ i ].size.x ),\n                        y: Number( this.configuration.teasers[ i ].size.y ),\n                    },\n                    gridPosition: {\n                        x: this.configuration.teasers[ i ].position,\n                        y: Number( this.configuration.teasers[ i ].row ),\n                    },\n                };\n\n                this.configuration.json.push( teaser );\n            }\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n        this.fixOverflowedRowsSetup();\n    },\n};\n\nexport default m2cMagentoProductGridTeasersConfigurator;\n","/**\n * Single component information object.\n */\ninterface IComponentInformation {\n    type: string;\n    /**\n     * Name of the component (will be displayed in front).\n     * @type {string}\n     */\n    name: string;\n    description: string;\n}\n\n/**\n * Components information object that should be returned by AJAX call to API.\n */\ninterface IComponentsInformation {\n    components: IComponentInformation[];\n}\n\n/**\n * Componen picker.\n * Lists all types of components available in m2c in the grid/list mode\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentPicker: vuejs.ComponentOption = {\n    template: `<section class=\"cc-component-picker | {{ class }}\">\n        <ul class=\"cc-component-picker__list\" v-if=\"availableComponents.length\">\n            <li class=\"cc-component-picker__list-item cc-component-picker__list-item--{{component.type}}\" v-for=\"component in availableComponents\">\n                <a class=\"cc-component-picker__component-link\" href=\"#\" @click.prevent=\"onPickComponent( component.type )\">\n                    <span class=\"cc-component-picker__component-figure\">\n                        <svg class=\"cc-component-picker__component-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#icon_component-' + component.type }\"></use>\n                        </svg>\n                    </span>\n                    <span class=\"cc-component-picker__component-name\">{{ component.name }}</span>\n                    <span class=\"cc-component-picker__component-description\">{{ component.description }}</span>\n                </a>\n            </li>\n        </ul>\n        <p class=\"cc-component-picker__no-components\" v-if=\"!availableComponents.length\">\n            No components available.\n        </p>\n    </section>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-picker', '' ),\n        },\n        /**\n         * Property containing callback triggered when user picks component.\n         */\n        pickComponent: {\n            type: Function,\n        },\n        /**\n         * JSON stringified array containing available components.\n         */\n        components: {\n            type: String,\n            default: '',\n        },\n        /**\n         * URL for API returning JSON stringified array containing available components.\n         */\n        componentsEndpoint: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Assets src for icon\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            availableComponents: [],\n        };\n    },\n    ready(): void {\n        // If inline JSON is provided then parse it.\n        if ( this.components ) {\n            this.availableComponents = JSON.parse( this.components );\n        } else if ( this.componentsEndpoint ) {\n            // Otherwise load from endpoint if URL provided.\n            this.$http.get( this.componentsEndpoint ).then( function( response: vuejs.HttpResponse ): void {\n                this.availableComponents = response.json();\n            } );\n        }\n    },\n    methods: {\n        /**\n         * Component pick click handler.\n         * This handler triggers \"cc-component-picker__pick\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onPickComponent( componentType: String ): void {\n            this.$dispatch( 'cc-component-picker__pick', componentType );\n\n            if ( typeof this.pickComponent === 'function' ) {\n                this.pickComponent( componentType );\n            }\n        },\n    },\n};\n\nexport default ccComponentPicker;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentBrandCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-brand-carousel-preview\">\n        <svg class=\"cc-component-brand-carousel-preview__arrow cc-component-brand-carousel-preview__arrow--left\">\n            <use xlink:href=\"#icon_dashboard-arrow-left\"></use>\n        </svg>\n\n        <ul class=\"cc-component-brand-carousel-preview__list\">\n            <template v-for=\"item in 6\">\n                <li class=\"cc-component-brand-carousel-preview__list-item\">\n                    <div class=\"cc-component-brand-carousel-preview__brand-wrapper\">\n                        <svg class=\"cc-component-brand-carousel-preview__brand\">\n                            <use xlink:href=\"#icon_component-cc-brand-logo\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-component-brand-carousel-preview__arrow cc-component-brand-carousel-preview__arrow--right\">\n            <use xlink:href=\"#icon_dashboard-arrow-right\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentBrandCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    label: string;\n    target: string;\n}\n\n/**\n * Button preview component.\n * This component is responsible for displaying preview of button component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentButtonPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-button-preview\">\n        <button class=\"cc-component-button-preview__button\" type=\"button\">{{ configuration.label }}</button>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentButtonPreview;\n","import $ from 'jquery';\n\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    main_category_id: string;\n    main_category_labels: string;\n    sub_categories_ids: string;\n    sub_categories_labels: string;\n    shownumbers: boolean;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentCategoryLinksPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-category-links-preview\">\n        <div class=\"cc-component-category-links-preview__wrapper\">\n            <h1 class=\"cc-component-category-links-preview__headline\">{{ configuration.main_category_labels[0] }}</h1>\n            <div class=\"cc-component-category-links-preview__content\">\n                <ul class=\"cc-component-category-links-preview__subcats\">\n                    <template v-for=\"(index, label) in configuration.sub_categories_labels\">\n                        <li class=\"cc-component-category-links-preview__subcat\" v-if=\"index < configuration.sub_categories_labels.length\">\n                            <span class=\"cc-component-category-links-preview__subcat-label\">{{ label }}</span>\n                        </li>\n                    </template>\n                </ul>\n\n                <div class=\"cc-component-category-links-preview__all-button\">\n                    <span class=\"cc-component-category-links-preview__all-button-text\">${ $t( 'All products' ) }</span>\n                </div>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentCategoryLinksPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    title: string;\n    subtitle: string;\n}\n\n/**\n * Headline preview component.\n * This component is responsible for displaying preview of headline component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeadlinePreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-headline-preview\">\n        <h1 class=\"cc-component-headline-preview__headline\">{{ configuration.title }}</h1>\n        <h2 class=\"cc-component-headline-preview__subheadline\">{{ configuration.subtitle }}</h2>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentHeadlinePreview;\n","import $ from 'jquery';\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teaserWidth: string;\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            href: string,\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentImageTeaserPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-image-teaser-preview\" v-show=\"!isLoading\">\n        <div class=\"cc-component-image-teaser-preview__wrapper\">\n            <ul class=\"cc-component-image-teaser-preview__scene cc-component-image-teaser-preview__scene--{{ configuration.currentScenario.desktopLayout.id }}-in-row\" v-el:scene>\n                <template v-for=\"item in configuration.items\">\n                    <li class=\"cc-component-image-teaser-preview__item\">\n                        <img v-if=\"configuration.items[$index].image\" :src=\"configuration.items[$index].image\" class=\"cc-component-image-teaser-preview__item-image\">\n                        <div class=\"cc-component-image-teaser-preview__image-placeholder-wrapper\" v-show=\"!configuration.items[$index].image\">\n                            <svg class=\"cc-component-image-teaser-preview__image-placeholder\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n                        </div>\n                        <div class=\"cc-component-image-teaser-preview__item-content\">\n                            <h2 class=\"cc-component-image-teaser-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-image-teaser-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-image-teaser-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-image-teaser-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </li>\n                </template>\n            </ul>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            if ( imagesCount ) {\n                $images.load( function(): void {\n                    imagesCount--;\n                    if ( !imagesCount ) {\n                        _this.isLoading = false;\n                        $images.each( function(): void {\n                            $( this ).addClass( 'cc-component-image-teaser-preview__item-image--border' );\n                        } );\n                    }\n                } ).filter( function(): boolean { return this.complete; } ).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        hideEmptySlideContents(): any {\n            $( this.$els.scene ).find( '.cc-component-image-teaser-preview__item-content' ).each( function(): void {\n                if ( !$( this ).children().length ) {\n                    $( this ).hide();\n                }\n            } );\n        },\n    }\n};\n\nexport default ccComponentImageTeaserPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            ctaTarget: string,\n            displayVariant: string\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeroCarouselPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-hero-carousel-preview\" v-show=\"!isLoading\">\n        <div v-bind:class=\"sceneClass\" v-el:scene>\n            <div class=\"cc-component-hero-carousel-preview__slide\" v-if=\"configuration.items.length > 1\">\n                <img v-if=\"configuration.items[configuration.items.length - 1].image\" :src=\"configuration.items[configuration.items.length - 1].image\" class=\"cc-component-hero-carousel-preview__image\">\n                <div class=\"cc-component-hero-carousel-preview__slide-placeholder-wrapper\" v-show=\"!configuration.items[configuration.items.length - 1].image\">\n                    <svg class=\"cc-component-hero-carousel-preview__slide-placeholder\">\n                        <use xlink:href=\"#icon_image-placeholder\"></use>\n                    </svg>\n                </div>\n            </div>\n\n            <template v-for=\"(index, item) in configuration.items\">\n                <div class=\"cc-component-hero-carousel-preview__slide\" v-if=\"index < 2\">\n                    <img v-if=\"configuration.items[$index].image\" :src=\"configuration.items[$index].image\" class=\"cc-component-hero-carousel-preview__image\">\n                    <div class=\"cc-component-hero-carousel-preview__slide-placeholder-wrapper\" v-show=\"!configuration.items[$index].image\">\n                        <svg class=\"cc-component-hero-carousel-preview__slide-placeholder\">\n                            <use xlink:href=\"#icon_image-placeholder\"></use>\n                        </svg>\n                    </div>\n                    <div class=\"cc-component-hero-carousel-preview__slide-content\" v-if=\"index == 0 || configuration.items.length == 1\">\n                        <div class=\"cc-component-hero-carousel-preview__thumbs\">\n                            <template v-for=\"(idx, slide) in configuration.items\">\n                                <img v-if=\"configuration.items[idx].image\" :src=\"configuration.items[idx].image\" class=\"cc-component-hero-carousel-preview__thumb\">\n                                <div class=\"cc-component-hero-carousel-preview__thumb-placeholder-wrapper\" v-show=\"!configuration.items[idx].image\">\n                                    <svg class=\"cc-component-hero-carousel-preview__thumb-placeholder\">\n                                        <use xlink:href=\"#icon_image-placeholder\"></use>\n                                    </svg>\n                                </div>\n                            </template>\n                        </div>\n                        <div class=\"cc-component-hero-carousel-preview__slide-content-info\">\n                            <h2 class=\"cc-component-hero-carousel-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-hero-carousel-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-hero-carousel-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-hero-carousel-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </template>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    computed: {\n        sceneClass(): string {\n            if ( this.configuration.items.length > 1 ) {\n                return 'cc-component-hero-carousel-preview__scene';\n            }\n\n            return 'cc-component-hero-carousel-preview__scene cc-component-hero-carousel-preview__scene--single';\n        },\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            if ( imagesCount ) {\n                $images.load( function(): void {\n                    imagesCount--;\n                    if ( !imagesCount ) {\n                        _this.isLoading = false;\n                        $images.each( function(): void {\n                            $( this ).addClass( 'cc-component-hero-carousel-preview__image--border' );\n                        } );\n                        window.setTimeout( (): void => {\n                            $( _this.$els.scene ).find( '.cc-component-hero-carousel-preview__slide, .cc-component-hero-carousel-preview__slide-placeholder-wrapper' ).css( 'min-height', $( _this.$els.scene ).outerHeight() );\n                        }, 150 );\n                        \n                    }\n                } ).filter( function(): boolean { return this.complete; } ).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        hideEmptySlideContents(): any {\n            $( this.$els.scene ).find( '.cc-component-hero-carousel-preview__slide-content-info' ).each( function(): void {\n                if ( !$( this ).children().length ) {\n                    $( this ).hide();\n                }\n            } );\n        },\n    },\n};\n\nexport default ccComponentHeroCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    blockId: string;\n    title: string;\n}\n\n/**\n * Paragraph preview component.\n * This component is responsible for displaying preview of Paragraph component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentParagraphPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-paragraph-preview\">\n        <div class=\"cc-component-paragraph-preview__content\">\n            <svg class=\"cc-component-paragraph-preview__bg\">\n                <use xlink:href=\"#icon_component-paragraph-preview\"></use>\n            </svg>\n            <h2 class=\"cc-component-paragraph-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    }\n};\n\nexport default ccComponentParagraphPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    sort_by: string;\n    limit: number;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentProductCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-product-carousel-preview\">\n        <svg class=\"cc-component-product-carousel-preview__arrow cc-component-product-carousel-preview__arrow--left\">\n            <use xlink:href=\"#icon_dashboard-arrow-left\"></use>\n        </svg>\n\n        <ul class=\"cc-component-product-carousel-preview__list\">\n            <template v-for=\"item in 4\">\n                <li class=\"cc-component-product-carousel-preview__list-item\">\n                    <div class=\"cc-component-product-carousel-preview__product-wrapper\">\n                        <svg class=\"cc-component-product-carousel-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-component-product-carousel-preview__arrow cc-component-product-carousel-preview__arrow--right\">\n            <use xlink:href=\"#icon_dashboard-arrow-right\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentProductCarouselPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    order_by: string;\n    rows_desktop: number;\n    rows_tablet: number;\n    rows_mobile: number;\n    hero: any;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentProductGridPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-product-grid-preview\" v-show=\"!isLoading\" v-el:scene>\n        <div class=\"cc-component-product-grid-preview__hero\" v-if=\"configuration.hero.position == 'left'\">\n            <img v-if=\"configuration.hero.image.src\" :src=\"configuration.hero.image.src\" class=\"cc-component-product-grid-preview__hero-image\">\n            <div class=\"cc-component-product-grid-preview__hero-placeholder-wrapper\" v-show=\"!configuration.hero.image.src\">\n                <svg class=\"cc-component-product-grid-preview__hero-placeholder\">\n                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                </svg>\n            </div>\n            <div class=\"cc-component-product-grid-preview__hero-content\">\n                <h2 class=\"cc-component-product-grid-preview__headline\" v-if=\"configuration.hero.headline\">{{ configuration.hero.headline }}</h2>\n                <h3 class=\"cc-component-product-grid-preview__subheadline\" v-if=\"configuration.hero.subheadline\">{{ configuration.hero.subheadline }}</h3>\n                <p class=\"cc-component-product-grid-preview__paragraph\" v-if=\"configuration.hero.paragraph\">{{ configuration.hero.paragraph }}</p>\n                <template v-if=\"configuration.hero.href\">\n                    <button type=\"button\" class=\"cc-component-product-grid-preview__button\" v-if=\"configuration.hero.button.label\">{{ configuration.hero.button.label }}</button>\n                </template>\n            </div>\n        </div>\n\n        <ul v-bind:class=\"itemsGridClass\">\n            <template v-for=\"item in getItemsCount()\">\n                <li class=\"cc-component-product-grid-preview__list-item\">\n                    <div class=\"cc-component-product-grid-preview__product-wrapper\">\n                        <svg class=\"cc-component-product-grid-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <div class=\"cc-component-product-grid-preview__hero\" v-if=\"configuration.hero.position == 'right'\">\n            <img v-if=\"configuration.hero.image.src\" :src=\"configuration.hero.image.src\" class=\"cc-component-product-grid-preview__hero-image\">\n            <div class=\"cc-component-product-grid-preview__hero-placeholder-wrapper\" v-show=\"!configuration.hero.image.src\">\n                <svg class=\"cc-component-product-grid-preview__hero-placeholder\">\n                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                </svg>\n            </div>\n            <div class=\"cc-component-product-grid-preview__hero-content\">\n                <h2 class=\"cc-component-product-grid-preview__headline\" v-if=\"configuration.hero.headline\">{{ configuration.hero.headline }}</h2>\n                <h3 class=\"cc-component-product-grid-preview__subheadline\" v-if=\"configuration.hero.subheadline\">{{ configuration.hero.subheadline }}</h3>\n                <p class=\"cc-component-product-grid-preview__paragraph\" v-if=\"configuration.hero.paragraph\">{{ configuration.hero.paragraph }}</p>\n                <template v-if=\"configuration.hero.href\">\n                    <button type=\"button\" class=\"cc-component-product-grid-preview__button\" v-if=\"configuration.hero.button.label\">{{ configuration.hero.button.label }}</button>\n                </template>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    computed: {\n        itemsGridClass(): string {\n            if ( this.configuration.hero.position ) {\n                return `cc-component-product-grid-preview__list cc-component-product-grid-preview__list--${ this.configuration.hero.position }`;\n            }\n\n            return 'cc-component-product-grid-preview__list';\n        },\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            if ( imagesCount ) {\n                $images.load( function(): void {\n                    imagesCount--;\n                    if ( !imagesCount ) {\n                        _this.isLoading = false;\n                    }\n                } ).filter( function(): boolean { return this.complete; } ).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        getItemsCount(): number {\n            return this.configuration.hero.position ? 6 : 10;\n        },\n        hideEmptySlideContents(): any {\n            $( this.$els.scene ).find( '.cc-component-product-grid-preview__hero-content' ).each( function(): void {\n                if ( !$( this ).children().length ) {\n                    $( this ).hide();\n                }\n            } );\n        },\n    },\n};\n\nexport default ccComponentProductGridPreview;\n","import $ from 'jquery';\n\n/**\n * Separator preview component.\n * This component is responsible for displaying preview of separator component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentSeparatorPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-separator-preview\">\n        <hr class=\"cc-component-separator-preview__separator\">\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentSeparatorPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    identifier: string;\n    title: string;\n}\n\n/**\n * CMS block preview component.\n * This component is responsible for displaying preview of CMS block component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentStaticCmsBlockPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-static-cms-block-preview\">\n        <div class=\"cc-component-static-cms-block-preview__content\">\n            <svg class=\"cc-component-static-cms-block-preview__bg\">\n                <use xlink:href=\"#icon_component-cms-block-preview\"></use>\n            </svg>\n            <h2 class=\"cc-component-static-cms-block-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentStaticCmsBlockPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teasers: any;\n};\n\n/**\n * Magento products-grid teasers preview component.\n * This component displays preview of magento-product-grid-teasers component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentMagentoProductGridTeasersPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-magento-product-grid-teasers-preview\">\n        <ul class=\"cc-component-magento-product-grid-teasers-preview__list\">\n            <li class=\"cc-component-magento-product-grid-teasers-preview__list-item cc-component-magento-product-grid-teasers-preview__list-item--teaser\">\n                <svg class=\"cc-component-magento-product-grid-teasers-preview__image-placeholder\">\n                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                </svg>\n            </li>\n\n            <template v-for=\"i in 7\">\n                <li class=\"cc-component-magento-product-grid-teasers-preview__list-item\">\n                    <div class=\"cc-component-magento-product-grid-teasers-preview__product-wrapper\">\n                        <svg class=\"cc-component-magento-product-grid-teasers-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n\n            <li class=\"cc-component-magento-product-grid-teasers-preview__list-item cc-component-magento-product-grid-teasers-preview__list-item--text\">\n                <div>\n                    <div class=\"cc-component-magento-product-grid-teasers-preview__teasers-count\">\n                        {{ teasersLength }}\n                    </div>\n                    ${$t( 'teasers' )}\n                </div>\n            </li>\n        </ul>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    computed: {\n        teasersLength(): number {\n            return this.configuration && this.configuration.teasers ? this.configuration.teasers.length : 0;\n        },\n    },\n};\n\nexport default ccComponentMagentoProductGridTeasersPreview;\n","import $ from 'jquery';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport ccComponentBrandCarouselPreview from '../../cc-component-brand-carousel-preview/src/cc-component-brand-carousel-preview';\nimport ccComponentButtonPreview from '../../cc-component-button-preview/src/cc-component-button-preview';\nimport ccComponentCategoryLinksPreview from '../../cc-component-category-links-preview/src/cc-component-category-links-preview';\nimport ccComponentHeadlinePreview from '../../cc-component-headline-preview/src/cc-component-headline-preview';\nimport ccComponentImageTeaserPreview from '../../cc-component-image-teaser-preview/src/cc-component-image-teaser-preview';\nimport ccComponentHeroCarouselPreview from '../../cc-component-hero-carousel-preview/src/cc-component-hero-carousel-preview';\nimport ccComponentParagraphPreview from '../../cc-component-paragraph-preview/src/cc-component-paragraph-preview';\nimport ccComponentProductCarouselPreview from '../../cc-component-product-carousel-preview/src/cc-component-product-carousel-preview';\nimport ccComponentProductGridPreview from '../../cc-component-product-grid-preview/src/cc-component-product-grid-preview';\nimport ccComponentSeparatorPreview from '../../cc-component-separator-preview/src/cc-component-separator-preview';\nimport ccComponentStaticCmsBlockPreview from '../../cc-component-static-cms-block-preview/src/cc-component-static-cms-block-preview';\nimport ccComponentMagentoProductGridTeasersPreview from '../../cc-component-magento-product-grid-teasers-preview/src/cc-component-magento-product-grid-teasers-preview';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\nimport template from './cc-layout-builder.tpl';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    type: string;\n    section: string;\n    data?: any;\n}\n\n/**\n * Layout builder component.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst layoutBuilder: vuejs.ComponentOption = {\n    template: template,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n        'cc-component-brand-carousel-preview': ccComponentBrandCarouselPreview,\n        'cc-component-button-preview': ccComponentButtonPreview,\n        'cc-component-headline-preview': ccComponentHeadlinePreview,\n        'cc-component-image-teaser-preview': ccComponentImageTeaserPreview,\n        'cc-component-hero-carousel-preview': ccComponentHeroCarouselPreview,\n        'cc-component-category-links-preview': ccComponentCategoryLinksPreview,\n        'cc-component-static-cms-block-preview': ccComponentStaticCmsBlockPreview,\n        'cc-component-paragraph-preview': ccComponentParagraphPreview,\n        'cc-component-product-carousel-preview': ccComponentProductCarouselPreview,\n        'cc-component-product-grid-preview': ccComponentProductGridPreview,\n        'cc-component-separator-preview': ccComponentSeparatorPreview,\n        'cc-component-magento-product-grid-teasers-preview': ccComponentMagentoProductGridTeasersPreview,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        ccConfiguration: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Initial component configuration encoded as JSON string.\n         */\n        componentsConfiguration: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should take IComponentInformation and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         */\n        editComponent: {\n            type: Function,\n            default: ( componentInfo: IComponentInformation ): IComponentInformation => componentInfo,\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         */\n        addComponent: {\n            type: Function,\n            default: (): IComponentInformation => undefined,\n        },\n        pageType: {\n            type: String,\n            default: 'cms_page_form.cms_page_form',\n        },\n    },\n    data(): any {\n        return {\n            components: [],\n        };\n    },\n    ready(): void {\n        this.ccConfig = this.ccConfiguration ? JSON.parse( this.ccConfiguration ) : {};\n        this.components = this.componentsConfiguration ? JSON.parse( this.componentsConfiguration ) : [];\n        this.sortComponentsBySections();\n        this.$dispatch( 'cc-layout-builder__update' );\n    },\n    methods: {\n        /**\n         * Returns components information currently stored within layout builder.\n         * @return {IComponentInformation[]} Components information array.\n         */\n        getComponentInformation(): IComponentInformation[] {\n            return JSON.parse(\n                JSON.stringify( this.components ),\n            );\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then this compoennt will be inserted before it.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        addComponentInformation( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.splice( index, 0, componentInfo );\n                this.setComponentsPlacementInfo();\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then it will be overwritten.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        setComponentInformation( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.$set( index, componentInfo );\n                this.setComponentsPlacementInfo();\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Creates new component and adds it to a specified index.\n         * This function calls callback specified by \"add-component\" property that\n         * should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         * @param {number} index New component's index in components array.\n         */\n        createNewComponent( index: number ): void {\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            const componentInfo: IComponentInformation = this.addComponent(\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.addComponentInformation( index, asyncComponentInfo );\n                },\n            );\n            this.addComponentInformation( index, componentInfo );\n        },\n        /**\n         * Initializes edit mode of component.\n         * This function invokes callback given by \"edit-component\" callback that\n         * should take current IComponentInformation as param and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         * @param {string} index: Component's index in array.\n         */\n        editComponentSettings( index: number ): void {\n            // Create a static, non-reactive copy of component data.\n            let componentInfo: IComponentInformation = JSON.parse(\n                JSON.stringify( this.components[ index ] ),\n            );\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with current component data and callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            componentInfo = this.editComponent(\n                componentInfo,\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.setComponentInformation( index, asyncComponentInfo );\n                },\n            );\n            this.setComponentInformation( index, componentInfo );\n        },\n        /**\n         * Moves component under given index up by swaping it with previous element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentUp( index: number ): void {\n            if ( index > 0 ) {\n                let previousComponent: IComponentInformation = this.components[ index - 1 ];\n                const $thisComponent: any = $( `#${ this.components[ index ].id }` );\n                const $prevComponent: any = $( `#${ this.components[ index - 1 ].id }` );\n\n                $thisComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevComponent.outerHeight( true ) ) }px )` );\n                $prevComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ $thisComponent.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    this.components.$set( index - 1, this.components[ index ] );\n                    this.components.$set( index, previousComponent );\n                    this.setComponentsPlacementInfo();\n                    this.$dispatch( 'cc-layout-builder__update' );\n                    $thisComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                    $prevComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves component under given index down by swaping it with next element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentDown( index: number ): void {\n            if ( index < this.components.length - 1 ) {\n                let previousComponent: IComponentInformation = this.components[ index + 1 ];\n                const $thisComponent: any = $( `#${ this.components[ index ].id }` );\n                const $nextComponent: any = $( `#${ this.components[ index + 1 ].id }` );\n\n                $thisComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ $nextComponent.outerHeight( true ) }px )` );\n                $nextComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisComponent.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    this.components.$set( index + 1, this.components[ index ] );\n                    this.components.$set(  index, previousComponent );\n                    this.setComponentsPlacementInfo();\n                    this.$dispatch( 'cc-layout-builder__update' );\n                    $thisComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                    $nextComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Removes component and adder that is right after component from the DOM\n         * @param {number} index Component's index in array.\n         */\n        deleteComponent( index: number ): void {\n            if ( window.confirm( 'Are you sure you want to delete this item?' ) ) {\n                this.components.splice( index, 1 );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Goes through all components and assigns section.\n         * F.e. CC on category has 3 sections (top, grid [magento, not editable], and bottom)\n         * In this example this methods sets TOP for all components that are above special component dedicated for category page, GRID for special component and BOTTOM for all components under.\n         */\n        setComponentsPlacementInfo(): any {\n            const sections: any = this.ccConfig.sections[ this.pageType ];\n\n            if ( sections.length > 1 ) {\n                let sectionIndex: number = 0;\n\n                for ( let i: number = 0; i < this.components.length; i++ ) {\n                    if ( this.ccConfig.specialComponents.indexOf( this.components[ i ].type ) !== -1 ) {\n                        sectionIndex++;\n                        this.components[ i ].section = sections[ sectionIndex ];\n                        sectionIndex++;\n                    } else {\n                        this.components[ i ].section = sections[ sectionIndex ];\n                    }\n                }\n            }\n        },\n        /**\n         * Sorts components by their sections. \n         * Order is defined by ccConfig.sections[ this.pageType ]\n         */\n        sortComponentsBySections(): void {\n            if ( this.components.length && this.ccConfig.sections[ this.pageType ].length > 1 ) {\n                this.components.sort( ( a: any, b: any ): any => {\n                    return this.ccConfig.sections[ this.pageType ].indexOf( a.section ) - this.ccConfig.sections[ this.pageType ].indexOf( b.section );\n                } );\n            }\n        },\n        /**\n         * Tells if component with given index is the first component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is first in array.\n         */\n        isFirstComponent( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if component with given index is the last component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is last in array.\n         */\n        isLastComponent( index: number ): boolean {\n            return index === this.components.length - 1;\n        },\n\n        transformComponentTypeToText( componentType: string ): string {\n            return componentType.replace( '-', ' ' );\n        },\n\n        isPossibleToEdit( componentType: string ): boolean {\n            return componentType === 'brand-carousel' || componentType === 'separator';\n        },\n\n        isPossibleToDelete( componentType: string ): boolean {\n            return this.ccConfig.specialComponents.indexOf( componentType ) !== -1;\n        },\n    },\n};\n\nexport default layoutBuilder;\nexport { layoutBuilder, IComponentInformation };\n","import ccLayoutBuilder from '../../../components/cc-layout-builder/src/cc-layout-builder';\n\nimport m2cParagraphConfigurator from '../../m2c-paragraph-configurator/src/m2c-paragraph-configurator';\n\nimport $t from 'mage/translate';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport template from './m2c-layout-builder.tpl';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    section: string;\n    type: string;\n    data?: any;\n}\n\n/**\n * Layout builder component - M2 implementation.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cLayoutBuilder: vuejs.ComponentOption = {\n    template,\n    mixins: [\n        ccLayoutBuilder,\n    ],\n    /**\n     * Get dependencies\n     */\n    components: {\n        'm2c-paragraph-configurator': m2cParagraphConfigurator,\n    },\n    methods: {\n        getComponentClass( componentType: any ) {\n            return this.ccConfig.specialComponents.indexOf( componentType ) !== -1 ? 'm2c-layout-builder__component m2c-layout-builder__component--special' : 'm2c-layout-builder__component';\n        },\n        /* Removes component from M2C\n         * If it's paragraph that is about to be removed, asks if corresponding CMS Block shall be removed as well\n         * @param index {number} - index of the component in layoutBuilder\n         */\n        deleteComponent( index: number ): void {\n            const builder: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        const component: any = builder.components[ index ];\n\n                        builder.components.splice( index, 1 );\n\n                        if ( component.type === 'paragraph' ) {\n                            builder.deleteStaticBlock( component.data.blockId );\n                        }\n\n                        builder.$dispatch( 'cc-layout-builder__update' );\n                    },\n                },\n            } );\n        },\n\n        deleteStaticBlock( cmsBlockId: string ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Would you like to delete CMS Block related to this component (CMS Block ID: %s) ?' ).replace( '%s', cmsBlockId ),\n                actions: {\n                    confirm(): void {\n                        component.$dispatch( 'cc-layout-builder__cmsblock-delete-request', cmsBlockId );\n                    },\n                },\n            } );\n        },\n    },\n};\n\nexport default m2cLayoutBuilder;\nexport { m2cLayoutBuilder, IComponentInformation };\n","/* tslint:disable:no-console */\n\nimport $ from 'jquery';\nimport Vue from 'Vue';\nimport vr from 'VueResource';\n\nimport $t from 'mage/translate';\nimport modal from 'Magento_Ui/js/modal/modal';\nimport uiRegistry from 'uiRegistry';\nimport 'loadingPopup';\n\nimport m2cButtonConfigurator from '../../../customizations/m2c-button-configurator/src/m2c-button-configurator';\nimport m2cCategoryLinksConfigurator from '../../../customizations/m2c-category-links-configurator/src/m2c-category-links-configurator';\nimport m2cHeadlineConfigurator from '../../../customizations/m2c-headline-configurator/src/m2c-headline-configurator';\nimport m2cHeroCarouselConfigurator from '../../../customizations/m2c-hero-carousel-configurator/src/m2c-hero-carousel-configurator';\nimport m2cImageTeaserConfigurator from '../../../customizations/m2c-image-teaser-configurator/src/m2c-image-teaser-configurator';\nimport m2cParagraphConfigurator from '../../../customizations/m2c-paragraph-configurator/src/m2c-paragraph-configurator';\nimport m2cProductCarouselConfigurator from '../../../customizations/m2c-product-carousel-configurator/src/m2c-product-carousel-configurator';\nimport m2cProductsGridConfigurator from '../../../customizations/m2c-products-grid-configurator/src/m2c-products-grid-configurator';\nimport m2cStaticBlockConfigurator from '../../../customizations/m2c-static-block-configurator/src/m2c-static-block-configurator';\nimport m2cMagentoProductGridTeasersConfigurator from '../../../customizations/m2c-magento-product-grid-teasers-configurator/src/m2c-magento-product-grid-teasers-configurator';\nimport ccComponentPicker from '../../cc-component-picker/src/cc-component-picker';\n\nimport { IComponentInformation, m2cLayoutBuilder } from '../../../customizations/m2c-layout-builder/src/m2c-layout-builder';\n\n// Use Vue resource\nVue.use( vr );\n\n// Set Vue's $http headers Accept to text/html\nVue.http.headers.custom.Accept = 'text/html';\n\n// Picker modal options\nlet pickerModalOptions: any = {\n    type: 'slide',\n    responsive: true,\n    innerScroll: true,\n    autoOpen: true,\n    title: $t( 'Please select type of component' ),\n    buttons: [\n        {\n            text: $.mage.__( 'Cancel' ),\n            class: '',\n            click(): void {\n                this.closeModal();\n            },\n        },\n    ],\n};\nlet $pickerModal: any;\n\nlet configuratorModalOptions: any = {\n    type: 'slide',\n    responsive: true,\n    innerScroll: true,\n    autoOpen: true,\n    title: $t( 'Configure your component' ),\n    buttons: [\n        {\n            text: $.mage.__( 'Cancel' ),\n            class: '',\n            click(): void {\n                this.closeModal();\n            },\n        },\n        {\n            text: $.mage.__( 'Save' ),\n            class: 'action-primary',\n        },\n    ],\n};\nlet $configuratorModal: any;\n\n/**\n * M2C Content Constructor component.\n * This is the final layer that is responsible for collecting and tying up all\n * of the M2C admin panel logic.\n */\nconst m2cContentConstructor: vuejs.ComponentOption = {\n    template: `<div class=\"m2c-content-constructor\">\n        <m2c-layout-builder\n            v-ref:m2c-layout-builder\n            :assets-src=\"assetsSrc\"\n            :cc-configuration=\"ccConfiguration\"\n            :page-type=\"pageType\"\n            :add-component=\"getComponentPicker\"\n            :edit-component=\"editComponent\"\n            :components-configuration=\"configuration\">\n        </m2c-layout-builder>\n        <div class=\"m2c-content-constructor__modal m2c-content-constructor__modal--picker\" v-el:picker-modal></div>\n        <div class=\"m2c-content-constructor__modal m2c-content-constructor__modal--configurator\" v-el:configurator-modal></div>\n    </div>`,\n    components: {\n        'm2c-layout-builder': m2cLayoutBuilder,\n        'cc-component-picker': ccComponentPicker,\n        'm2c-headline-configurator': m2cHeadlineConfigurator,\n        'm2c-static-block-configurator': m2cStaticBlockConfigurator,\n        'm2c-image-teaser-configurator': m2cImageTeaserConfigurator,\n        'm2c-paragraph-configurator': m2cParagraphConfigurator,\n        'm2c-hero-carousel-configurator': m2cHeroCarouselConfigurator,\n        'm2c-product-carousel-configurator': m2cProductCarouselConfigurator,\n        'm2c-category-links-configurator': m2cCategoryLinksConfigurator,\n        'm2c-button-configurator': m2cButtonConfigurator,\n        'm2c-products-grid-configurator': m2cProductsGridConfigurator,\n        'm2c-magento-product-grid-teasers-configurator': m2cMagentoProductGridTeasersConfigurator,\n    },\n    props: {\n        configuration: {\n            type: String,\n            default: '',\n        },\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        configuratorEndpoint: {\n            type: String,\n            default: '',\n        },\n        uploaderUrl: {\n            type: String,\n            default: '',\n        },\n        restTokenEndpoint: {\n            type: String,\n            default: '',\n        },\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        categoryDataProviderEndpoint: {\n            type: String,\n            default: '',\n        },\n        pageType: {\n            type: String,\n            default: 'cms_page_form.cms_page_form',\n        },\n        productsPerPage: {\n            type: String,\n            default: '30',\n        },\n        ccConfiguration: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            initialComponentConfiguration: undefined,\n            restToken: undefined,\n        };\n    },\n    ready(): void {\n        this.ccConfig = this.ccConfiguration ? JSON.parse( this.ccConfiguration ) : {};\n        this.dumpConfiguration();\n        this._isPickerLoaded = false;\n        this._cleanupConfiguratorModal = '';\n        this._configuratorSaveCallback = (): undefined => undefined;\n        this.setRestToken();\n\n        // Initialize M2 loader for m2c modals\n        $( 'body' ).loadingPopup( {\n            timeout: false,\n        } ).trigger( 'hideLoadingPopup' );\n    },\n    events: {\n        /**\n         * We update provided input with new components information each time leyout\n         * builder updates.\n         */\n        'cc-layout-builder__update'(): void {\n            this.dumpConfiguration();\n        },\n        'cc-component-configurator__saved'( data: any ): void {\n            this._configuratorSavedCallback( data );\n\n            if ( $configuratorModal && $configuratorModal.closeModal ) {\n                $configuratorModal.closeModal();\n            }\n            if ( $pickerModal && $pickerModal.closeModal ) {\n                $pickerModal.closeModal();\n            }\n        },\n        'cc-layout-builder__cmsblock-delete-request'( cmsBlockId: string ): void {\n            this.deleteStaticBlock( cmsBlockId );\n        },\n    },\n    methods: {\n        /**\n         * Callback that will be invoked when user clicks plus button.\n         * This method should open magento modal with component picker.\n         * @param  {IComponentInformation} addComponentInformation Callback that let's us add component asynchronously.\n         */\n        getComponentPicker( addComponentInformation: ( componentInfo: IComponentInformation ) => void ): void {\n            const component: any = this;\n\n            // Save adding callback for async use.\n            this._addComponentInformation = addComponentInformation;\n\n            pickerModalOptions.opened = function(): void {\n                if ( !component._isPickerLoaded ) {\n                    // Show ajax loader\n                    $( 'body' ).trigger( 'showLoadingPopup' );\n\n                    // Get picker via AJAX\n                    component.$http.get( `${component.configuratorEndpoint}picker` ).then( ( response: any ): void => {\n                        component.$els.pickerModal.innerHTML = response.body;\n                        component.$compile( component.$els.pickerModal );\n                        component._isPickerLoaded = true;\n                        // Hide loader\n                        $( 'body' ).trigger( 'hideLoadingPopup' );\n                    } );\n                }\n            };\n            // Create or Show picker modal depending if exists\n            if ( $pickerModal ) {\n                $pickerModal.openModal();\n            } else {\n                $pickerModal = modal( pickerModalOptions, $( this.$els.pickerModal ) );\n            }\n        },\n\n        /**\n         * Callback that will be invoked when user choses component in picker.\n         * This method should open magento modal with component configurator.\n         * @param {componentType} String - type of component chosen\n         */\n        getComponentConfigurator( componentType: string ): void {\n            const newComponentId: string = 'component' + Math.floor( ( 1 + Math.random() ) * 0x10000 ).toString( 16 ).substring( 1 );\n            this._configuratorSavedCallback = ( componentData: any ): void => {\n                this._addComponentInformation( {\n                    type: componentType,\n                    id: newComponentId,\n                    section: \"content\",\n                    data: componentData,\n                } );\n            };\n\n            if ( componentType === 'brand-carousel' || componentType === 'separator' ) {\n                this.$emit( 'cc-component-configurator__saved', [] );\n            } else {\n                this.initConfiguratorModal( {\n                    type: componentType,\n                    id: newComponentId,\n                    section: \"content\",\n                    data: undefined,\n                } );\n            }\n        },\n        /**\n         * Callback that will be invoked when user clicks edit button.\n         * This method should open magento modal with component editor.\n         * @param  {IComponentInformation} setComponentInformation Callback that let's us add component asynchronously.\n         */\n        editComponent(\n            prevComponentData: IComponentInformation,\n            setComponentInformation: ( componentInfo: IComponentInformation ) => void,\n        ): void {\n            this._configuratorSavedCallback = ( componentData: any ): void => {\n                setComponentInformation( {\n                    type: prevComponentData.type,\n                    id: prevComponentData.id,\n                    section: prevComponentData.section,\n                    data: componentData,\n                } );\n            };\n\n            this.initConfiguratorModal( prevComponentData );\n        },\n\n        initConfiguratorModal( componentInformation: IComponentInformation ): void {\n            const component: any = this;\n            let cleanupConfiguratorModal: Function = (): undefined => undefined;\n\n            configuratorModalOptions.buttons[ 1 ].click = function (): void {\n                component.$broadcast( 'cc-component-configurator__save' );\n            };\n            configuratorModalOptions.title = `${ $t( 'Configure your component' ) }<span class=\"m2c-content-constructor__modal-subheadline\">${ this.transformComponentTypeToText( componentInformation.type ) }</span>`;\n\n            // Configurator modal opened callback\n            configuratorModalOptions.opened = function(): void {\n                // Show ajax loader\n                $( 'body' ).trigger( 'showLoadingPopup' );\n\n                // Get twig component\n                component.$http.get( component.configuratorEndpoint + componentInformation.type ).then( ( response: any ): void => {\n                    component.$els.configuratorModal.innerHTML = response.body;\n\n                    // Set current component configuration data\n                    component.initialComponentConfiguration = componentInformation.data;\n\n                    // compile fetched component\n                    cleanupConfiguratorModal = component.$compile( component.$els.configuratorModal );\n\n                    // Hide loader\n                    $( 'body' ).trigger( 'hideLoadingPopup' );\n                } );\n            };\n\n            configuratorModalOptions.closed = function(): void {\n                // Cleanup configurator component and then remove modal\n                cleanupConfiguratorModal();\n                component.$els.configuratorModal.innerHTML = '';\n                $configuratorModal.modal[ 0 ].parentNode.removeChild( $configuratorModal.modal[ 0 ] );\n                component.initialComponentConfiguration = undefined;\n            };\n            // Create & Show $configuratorModal\n            $configuratorModal = modal( configuratorModalOptions, $( this.$els.configuratorModal ) );\n        },\n\n        dumpConfiguration(): void {\n            uiRegistry.get( this.pageType ).source.set(\n                'data.components',\n                JSON.stringify(\n                    this.$refs.m2cLayoutBuilder.getComponentInformation(),\n                ),\n            );\n        },\n\n        setRestToken(): void {\n            const component: any = this;\n\n            // send request for token\n            this.$http.get( this.restTokenEndpoint ).then( ( response: any ): void => {\n                component.restToken = `Bearer ${response.body}`;\n            } );\n        },\n\n        deleteStaticBlock( cmsBlockId: string ): void {\n            const component: any = this;\n\n            // Send request to REST API\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: 'delete',\n                url: `${ window.location.origin }/rest/V1/cmsBlock/${cmsBlockId}`,\n            } ).then( ( response: any ): void => {\n                if ( response.body !== 'true' ) {\n                    console.warn( `Something went wrong, CMS block wasn\\'t removed, please check if block with ID: ${cmsBlockId} exists in database` );\n                }\n            } );\n        },\n\n        transformComponentTypeToText( componentType: string ): string {\n            const txt: string = componentType.replace( '-', ' ' );\n            return txt.charAt( 0 ).toUpperCase() + txt.slice( 1 );\n        },\n    },\n};\n\nexport default m2cContentConstructor;\n"],"names":["ccCategoryPicker","teaserItemPrototype","template","ccLayoutBuilder"],"mappings":"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"}