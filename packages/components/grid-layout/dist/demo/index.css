/**
 * Default project breakpoints, can be overwritten by setting a variable with the same name
 * before importing this file.
 */
/**
 * These atom is responsible for setting aprropriate :before and :after content to body
 * so that its JS counterpart can read and return current breakpoint to other
 * scripts.
 */
body {
  /* stylelint-disable string-no-newline */
  /* stylelint-enable */ }
  body:before {
    content: '{ "phone": 370, "phone-lg": 480, "tablet": 768, "laptop": 1024, "laptop-lg": 1280, "desktop": 1440, "tv": 1920 }';
    display: none; }
  body:after {
    content: '370';
    display: none; }
    @media (min-width: 30em) {
      body:after {
        content: '480'; } }
    @media (min-width: 48em) {
      body:after {
        content: '768'; } }
    @media (min-width: 64em) {
      body:after {
        content: '1024'; } }
    @media (min-width: 80em) {
      body:after {
        content: '1280'; } }
    @media (min-width: 90em) {
      body:after {
        content: '1440'; } }
    @media (min-width: 120em) {
      body:after {
        content: '1920'; } }

/**
 * Default project breakpoints, can be overwritten by setting a variable with the same name
 * before importing this file.
 */
/**
 * These atom is responsible for setting aprropriate :before and :after content to body
 * so that its JS counterpart can read and return current breakpoint to other
 * scripts.
 */
body {
  /* stylelint-disable string-no-newline */
  /* stylelint-enable */ }
  body:before {
    content: '{ "phone": 370, "phone-lg": 480, "tablet": 768, "laptop": 1024, "laptop-lg": 1280, "desktop": 1440, "tv": 1920 }';
    display: none; }
  body:after {
    content: '370';
    display: none; }
    @media (min-width: 30em) {
      body:after {
        content: '480'; } }
    @media (min-width: 48em) {
      body:after {
        content: '768'; } }
    @media (min-width: 64em) {
      body:after {
        content: '1024'; } }
    @media (min-width: 80em) {
      body:after {
        content: '1280'; } }
    @media (min-width: 90em) {
      body:after {
        content: '1440'; } }
    @media (min-width: 120em) {
      body:after {
        content: '1920'; } }

/**
 * @param $bricksPerRow {map} - this map variable informs component how many columns there is in single row.
 *                              Must have all specified breakpoints in project, and their keys must much
 *                              keys of $breakpoint variable. Example:
 *              $bricksPerRow: (
 *                  phone: 1,
 *                  phone-lg: 2,
 *                  tablet: 3,
 *                  laptop: 4,
 *                  laptop-lg: 4,
 *                  desktop: 5,
 *                  tv: 6
 *              );
 *
 * @param $bricksHeight {map} - this map variable informs about height of single grid item. 
 *                              Unfortunately this has to be specified for browser that do not support CSS Grid Layout.
 *                              The thing is that as a fallback we use floats (flexbox won't work) and for tiles (teasers, hero product) that is displayed in 2 rows this mixin has to know the height of single tile (1x1 size).
 *                              Just like previously keys have to match breakpoint object key-names and each breakpoint has to be defined:
 *              $bricksHeight: (
 *                  phone: 379px,
 *                  phone-lg: 379px,
 *                  tablet: 443px,
 *                  laptop: 443px,
 *                  laptop-lg: 443px,
 *                  desktop: 443px,
 *                  tv: 443px
 *              );
 *
 * @param $padding {in px} - defines gap between columns and rows (default value is 10px)
 */
html {
  font-family: Open Sans, Arial, sans-serif;
  background: #f0f0f0; }

html, body {
  margin: 0;
  padding: 0; }

.container {
  margin: 0 0 3rem;
  padding: 0 10px; }

.toggle-guidelines {
  margin: 3rem 0;
  padding: .6rem 2rem;
  border: 1px solid #aaa;
  background: transparent;
  font-size: 1rem;
  cursor: pointer;
  border-radius: 4px;
  font-family: Open Sans, Arial, sans-serif;
  -webkit-transition: background-color .15s linear;
  transition: background-color .15s linear; }
  .toggle-guidelines:hover, .toggle-guidelines:focus, .toggle-guidelines:active {
    background-color: #fff; }

.legend {
  list-style: none;
  margin: 0 0 3rem;
  padding: 0;
  display: none; }
  .guides .legend {
    display: block; }
  .legend li {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin: 0 0 .5rem;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .legend span {
    display: inline-block;
    width: 1.5rem;
    height: 1.5rem;
    border: 1px solid #ddd;
    border-radius: 2px;
    margin-right: .5rem; }
  .legend .grid-tile span {
    background: #e8e8e8; }
  .legend .product span {
    background: #fff; }

.cs-grid-layout {
  margin-left: -5px;
  margin-right: -5px; }
  .cs-grid-layout__grid {
    margin: 0;
    padding: 0;
    list-style: none; }
  .cs-grid-layout__teaser {
    max-height: 100%;
    max-width: 100%;
    overflow: hidden; }
    .cs-grid-layout__teaser-image {
      height: 100%; }
  .cs-grid-layout__brick {
    width: calc( 100% / 1);
    margin: 0;
    position: relative;
    padding: 5px;
    box-sizing: border-box;
    float: left;
    height: 389px; }
    .cs-grid-layout__brick--right {
      float: right; }
    .cs-grid-layout__brick--hidden {
      display: none !important; }
    @media (min-width: 30em) {
      .cs-grid-layout__brick {
        width: calc( 100% / 2);
        height: 389px; }
        .cs-grid-layout__brick--x2 {
          width: calc( 100% / 2 * 2); }
        .cs-grid-layout__brick--y2 {
          height: 778px; } }
    @media (min-width: 48em) {
      .cs-grid-layout__brick {
        width: calc( 100% / 3);
        height: 453px; }
        .cs-grid-layout__brick--x2 {
          width: calc( 100% / 3 * 2); }
        .cs-grid-layout__brick--y2 {
          height: 906px; }
          .cs-grid-layout__brick--y2.cs-grid-layout__brick--left, .cs-grid-layout__brick--y2.cs-grid-layout__brick--hero {
            float: left; } }
    @media (min-width: 64em) {
      .cs-grid-layout__brick {
        width: calc( 100% / 4);
        height: 453px; }
        .cs-grid-layout__brick--x2 {
          width: calc( 100% / 4 * 2); }
        .cs-grid-layout__brick--y2 {
          height: 906px; } }
    @media (min-width: 80em) {
      .cs-grid-layout__brick {
        width: calc( 100% / 4);
        height: 453px; }
        .cs-grid-layout__brick--x2 {
          width: calc( 100% / 4 * 2); }
        .cs-grid-layout__brick--y2 {
          height: 906px; } }
    @media (min-width: 90em) {
      .cs-grid-layout__brick {
        width: calc( 100% / 5);
        height: 453px; }
        .cs-grid-layout__brick--x2 {
          width: calc( 100% / 5 * 2); }
        .cs-grid-layout__brick--y2 {
          height: 906px; } }
    @media (min-width: 120em) {
      .cs-grid-layout__brick {
        width: calc( 100% / 6);
        height: 453px; }
        .cs-grid-layout__brick--x2 {
          width: calc( 100% / 6 * 2); }
        .cs-grid-layout__brick--y2 {
          height: 906px; } }
    @media (max-width: 47.99em) {
      .cs-grid-layout__brick--hero {
        width: calc( 100% / 2);
        height: 389px; } }
    @media (max-width: 29.99em) {
      .cs-grid-layout__brick--hero {
        width: calc( 100% / 1);
        height: 389px; } }
  @supports ((display: -ms-grid) or (display: grid)) and (not (display: -ms-grid)) {
    .cs-grid-layout__grid {
      display: -ms-grid;
      display: grid;
      -ms-grid-columns: (1fr)[1];
          grid-template-columns: repeat(1, 1fr);
      -ms-grid-rows: auto;
          grid-template-rows: auto; }
      @media (min-width: 30em) {
        .cs-grid-layout__grid {
          -ms-grid-columns: (1fr)[2];
              grid-template-columns: repeat(2, 1fr); } }
      @media (min-width: 48em) {
        .cs-grid-layout__grid {
          -ms-grid-columns: (1fr)[3];
              grid-template-columns: repeat(3, 1fr); } }
      @media (min-width: 64em) {
        .cs-grid-layout__grid {
          -ms-grid-columns: (1fr)[4];
              grid-template-columns: repeat(4, 1fr); } }
      @media (min-width: 80em) {
        .cs-grid-layout__grid {
          -ms-grid-columns: (1fr)[4];
              grid-template-columns: repeat(4, 1fr); } }
      @media (min-width: 90em) {
        .cs-grid-layout__grid {
          -ms-grid-columns: (1fr)[5];
              grid-template-columns: repeat(5, 1fr); } }
      @media (min-width: 120em) {
        .cs-grid-layout__grid {
          -ms-grid-columns: (1fr)[6];
              grid-template-columns: repeat(6, 1fr); } }
    @media (min-width: 30em) {
      .cs-grid-layout__brick {
        width: auto;
        display: -ms-grid;
        display: grid;
        -webkit-box-align: stretch;
            -ms-flex-align: stretch;
                align-items: stretch; }
        .cs-grid-layout__brick--right {
          float: none; }
        .cs-grid-layout__brick--x2 {
          width: auto;
          -ms-grid-column-span: 2;
              grid-column-end: span 2; }
        .cs-grid-layout__brick--y2 {
          -ms-grid-row-span: 2;
              grid-row-end: span 2; }
        .cs-grid-layout__brick--teaser {
          display: none; }
          .cs-grid-layout__brick--teaser-ready {
            display: -ms-grid;
            display: grid; } } }
  .guides .cs-grid-layout__brick {
    background: #e8e8e8;
    border: 1px solid #ddd; }

.cs-grid-product {
  padding: 0;
  position: relative;
  z-index: 2;
  background-color: transparent;
  box-sizing: border-box;
  /* disabled because autoprefixer can't build this */
  /* stylelint-disable value-no-vendor-prefix */
  /* stylelint-disable property-no-vendor-prefix */
  /* stylelint-enable value-no-vendor-prefix */
  /* stylelint-enable property-no-vendor-prefix */ }
  @media (min-width: 64em) {
    .cs-grid-product:before {
      display: block;
      position: absolute;
      left: 0;
      width: 100%;
      z-index: -1;
      background-color: #fff;
      content: '';
      height: 100%;
      top: 0;
      -webkit-transition: box-shadow .15s ease-in-out;
      transition: box-shadow .15s ease-in-out; }
      .cs-grid-product.no-transition .cs-grid-product:before {
        -webkit-transition: none;
        transition: none; }
    .cs-grid-product--show-details {
      z-index: 3; }
      .cs-grid-product--show-details:before {
        box-shadow: 1px 3px 3rem 0 rgba(30, 48, 67, 0.34); } }
  .cs-grid-product__main {
    z-index: 2;
    box-shadow: none;
    background-color: #fff;
    padding: 1rem;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    -webkit-transition: box-shadow .15s ease-in-out;
    transition: box-shadow .15s ease-in-out; }
    .cs-grid-product.no-transition .cs-grid-product__main {
      -webkit-transition: none;
      transition: none; }
    @media (min-width: 64em) {
      .cs-grid-product__main:after {
        display: block;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 0;
        z-index: -1;
        background-color: #fff;
        content: ''; }
        .cs-grid-product--show-details .cs-grid-product__main:after {
          height: 3rem; } }
  .cs-grid-product__addons {
    width: 100%;
    background-color: #fff;
    text-align: center;
    padding: 0 1rem .5rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    box-sizing: border-box;
    position: absolute;
    left: 0;
    overflow: hidden;
    z-index: -2;
    opacity: 0;
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    -webkit-transition: box-shadow .15s ease-in-out, opacity .15s ease-in-out, -webkit-transform .15s ease-in-out;
    transition: box-shadow .15s ease-in-out, opacity .15s ease-in-out, -webkit-transform .15s ease-in-out;
    transition: box-shadow .15s ease-in-out, transform .15s ease-in-out, opacity .15s ease-in-out;
    transition: box-shadow .15s ease-in-out, transform .15s ease-in-out, opacity .15s ease-in-out, -webkit-transform .15s ease-in-out; }
    .cs-grid-product.no-transition .cs-grid-product__addons {
      -webkit-transition: none;
      transition: none; }
    .cs-grid-product--show-details .cs-grid-product__addons {
      opacity: 1;
      box-shadow: 1px 3px 3rem 0 rgba(30, 48, 67, 0.34);
      -webkit-transform: translateY(0);
              transform: translateY(0);
      z-index: -1; }
      .cs-grid-product--show-details .cs-grid-product__addons:after {
        height: 3rem; }
    .cs-grid-product__addons__left, .cs-grid-product__addons__right {
      width: 50%;
      box-sizing: border-box;
      min-height: 1px; }
    .cs-grid-product__addons__left {
      padding-left: 0;
      padding-right: .5rem;
      text-align: left; }
    .cs-grid-product__addons__right {
      padding-right: 0;
      padding-left: .5rem;
      text-align: right; }
  .cs-grid-product__addon {
    padding: .5rem 0;
    width: 100%;
    box-sizing: border-box; }
    .cs-grid-product__addon--in-stock {
      color: #008000; }
    .cs-grid-product__addon--out-of-stock {
      color: #f00; }
  .cs-grid-product__figure-wrapper, .cs-grid-product__name-link {
    display: block;
    text-align: center; }
    .cs-grid-product__figure-wrapper:hover, .cs-grid-product__name-link:hover {
      color: inherit;
      text-decoration: none; }
    .cs-grid-product__figure-wrapper:visited, .cs-grid-product__name-link:visited {
      color: inherit; }
  .cs-grid-product__figure-wrapper {
    margin: -1rem -1rem 0;
    padding: 1rem; }
  .cs-grid-product__figure {
    position: relative;
    margin: 0;
    height: 14rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    @media (min-width: 48em) {
      .cs-grid-product__figure {
        height: 18rem; } }
  .cs-grid-product__image {
    max-height: 100%;
    max-width: 100%;
    width: auto;
    -ms-flex-negative: 0;
        flex-shrink: 0; }
  .cs-grid-product__badges {
    position: absolute;
    top: 1rem;
    left: 1rem;
    list-style: none;
    margin: 0;
    padding: 0; }
  .cs-grid-product__badge {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .cs-grid-product__swatches {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    height: 1.375rem;
    margin-bottom: .75rem; }
    .cs-grid-product__swatches + .cs-grid-product__name {
      margin-top: 0; }
  .cs-grid-product__name {
    margin-top: calc( 1.375rem + .75rem);
    margin-bottom: 0.6325rem;
    height: 2.53rem;
    line-height: 1.265rem;
    font-weight: 600;
    overflow: hidden; }
  .cs-grid-product__name-link {
    text-overflow: -o-ellipsis-lastline; }
    @supports (-webkit-line-clamp: 1) {
      .cs-grid-product__name-link {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        max-width: 100%; } }
  .cs-grid-product__price {
    text-align: center; }
  .cs-grid-product__comment {
    margin-bottom: 1rem; }
    .cs-grid-product__comment-input {
      max-height: 4rem; }
  .cs-grid-product__stock {
    margin: 0; }
  .cs-grid-product__links {
    list-style: none;
    margin: 0;
    padding: 0; }
  .cs-grid-product__link-item {
    display: inline-block; }
  .cs-grid-product__remove {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 2; }
  .cs-grid-product--static {
    padding: 1rem;
    background-color: #fff; }
    .cs-grid-product--static .cs-grid-product__main {
      padding: 0; }
    .cs-grid-product--static .cs-grid-product__addons {
      position: relative;
      -webkit-transform: none;
              transform: none;
      opacity: 1;
      height: auto;
      -webkit-transition: none;
      transition: none;
      box-shadow: none !important;
      padding: .5rem 0 0;
      margin-bottom: -.5rem; }
      .cs-grid-product--static .cs-grid-product__addons:after {
        display: none !important; }
  .cs-grid-product--in-carousel .cs-grid-product__main {
    width: 100%;
    box-sizing: border-box; }
  .cs-grid-product--in-carousel .cs-grid-product__addons {
    top: 100%; }
  .cs-grid-product--hidden .cs-grid-product__main,
  .cs-grid-product--hidden .cs-grid-product__addons,
  .cs-grid-product--hidden .cs-grid-product:before {
    visibility: hidden !important; }

/*# sourceMappingURL=index.css.map */
