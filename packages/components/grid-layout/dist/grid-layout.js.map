{"version":3,"file":null,"sources":["../../../utilities/breakpoint/src/breakpoint.ts","../src/grid-layout.ts"],"sourcesContent":["/**\n * Breakpoint utility for sharing breakpoints between CSS and JS.\n */\n\n/**\n * Converts dash-case to camelCase.\n * @type {Function}\n */\nconst camelCase: Function = ( input: string ): string => {\n    return input.toLowerCase().replace( /-(.)/g, function( match: string, group: string ): string {\n        return group.toUpperCase();\n    } );\n};\n\n/**\n * Returns object containign available breakpoints.\n * @return {Object} Object containing avaliable breakpoints in shape { breakpointName: pixelsNumber }\n */\nconst getAvaliableBreakpoints: Function = (): Object => JSON.parse( window.getComputedStyle( body, ':before' )\n    .getPropertyValue( 'content' ).slice( 1, -1 ).replace( /\\\\\"/g, '\"' ) );\n\n/**\n * Returs current breakpoint set by CSS.\n * @return {number} Current breakpoint in number of pixels.\n */\nconst getCurrentBreakpoint: Function = (): number => +window.getComputedStyle( body, ':after' )\n    .getPropertyValue( 'content' ).replace( /['\"]/g, '' );\n\nconst body: HTMLElement = document.querySelector( 'body' );\n/**\n * Module cache to export.\n * @type {Object}\n */\nconst breakpoint: any = {\n    current: getCurrentBreakpoint(),\n};\n\n/**\n * Available breakpoints cache.\n */\nconst breakpoints: Object = getAvaliableBreakpoints();\n// Extend breakpoint module with available breakpoint keys converted to camelCase.\nObject.keys( breakpoints ).forEach( ( breakpointName: string ): void => {\n    breakpoint[ camelCase( breakpointName ) ] = breakpoints[ breakpointName ];\n});\n\n// Let's check if we can register passive resize event for better performance.\nlet passiveOption: any = undefined;\ntry {\n    const opts: any = Object.defineProperty( {}, 'passive', {\n        get: function(): void {\n            passiveOption = { passive: true };\n        },\n    } );\n    window.addEventListener( 'test', null, opts );\n} catch (e) {}\n\n// Update current breakpoint on every resize.\nwindow.addEventListener( 'resize', () => {\n    breakpoint.current = getCurrentBreakpoint();\n}, passiveOption );\n\nexport default breakpoint;\n","/* tslint:disable:no-unused-new object-literal-key-quotes max-classes-per-file */\nimport $ from 'jquery';\n\nimport breakpoint from '../../../utilities/breakpoint/src/breakpoint';\n\ninterface IGridLayoutSettings {\n    /**\n     * Defines class of grid element (not wrapper)\n     * @default {cs-grid-layout__grid}\n     * @type {String}\n     */\n\n    gridClass?: string;\n    /**\n     * Defines class of single brick\n     * @default {cs-grid-layout__brick}\n     * @type {String}\n     */\n    brickClass?: string;\n}\n\n/**\n * ItemCloner clones given item on mouseover and places is on top of hovered element in the same place\n * Clone resides on the bottom of the DOM tree and is positioned absolutely with height z-index ( defined in options )\n */\nexport default class GridLayout {\n    private $wrapper: JQuery;\n    private $grid: JQuery;\n    private $bricks: JQuery;\n    private settings?: IGridLayoutSettings;\n    private columnsCfg: any;\n    private teasersCfg: any;\n    public isCssGrid: boolean;\n    public virtualBricksLength: number;\n    public teasers: any;\n    public currentColsInRow: number;\n    public currentRowsCount: number;\n\n    /**\n     * Creates and initiates new GridLayout component with given settings.\n     * @param  {$wrapper} JQuery components' wrapper.\n     * @param  {IGridLayoutSettings} settings Optional component settings.\n     */\n    public constructor( $wrapper: JQuery, settings?: IGridLayoutSettings ) {\n        this.$wrapper = $wrapper;\n\n        this.settings = $.extend( true, {},\n            {\n                gridClass: 'cs-grid-layout__grid',\n                brickClass: 'cs-grid-layout__brick',\n            },\n            settings,\n        );\n\n        this.$grid = this.$wrapper.find( `.${ this.settings.gridClass }` );\n        this.$bricks = this.$grid.children();\n        this.teasers = [];\n        this.isCssGrid = this._getIsCssGridSupported();\n\n        this.$grid = this.$wrapper.find( `.${ this.settings.gridClass }` );\n        this.$bricks = this.$grid.children();\n        this.teasers = [];\n        this.isCssGrid = this._getIsCssGridSupported();\n\n        this.columnsCfg = this.$wrapper.data( 'columns-configuration' ) ? JSON.parse( JSON.stringify( this.$wrapper.data( 'columns-configuration' ) ) ) : '';\n        this.teasersCfg = this.$wrapper.data( 'teasers-configuration' ) ? JSON.parse( JSON.stringify( this.$wrapper.data( 'teasers-configuration' ) ) ) : '';\n\n        if ( this.columnsCfg && this.teasersCfg ) {\n            this.currentColsInRow = this.columnsCfg[ this._getCurrentBreakpointName() ];\n            this.virtualBricksLength = this._getVirtualBricksLength();\n            this.currentRowsCount = this.isCssGrid ? Math.ceil( this.virtualBricksLength / this.currentColsInRow ) : Math.ceil( this.virtualBricksLength / this.currentColsInRow );\n\n            this._initialize();\n        }\n    }\n\n    /**\n     * Resets outdated information and recalculates positions of all teasers again\n     * Runs after breakpoint change and is available from outside to recalculate manually if needed\n     */\n    public _recalculate(): void {\n        this.currentColsInRow = this.columnsCfg[ this._getCurrentBreakpointName() ];\n        this.virtualBricksLength = this._getVirtualBricksLength();\n        this.currentRowsCount = this.isCssGrid ? Math.ceil( this.virtualBricksLength / this.currentColsInRow ) : Math.ceil( this.virtualBricksLength / this.currentColsInRow );\n\n        if ( this.isCssGrid ) {\n            this._setTeasersCSS();\n        } else {\n            this.$grid.append( this.teasers );\n            this.teasers = [];\n            this._setTeasersPositions();\n        }\n    }\n\n    /**\n     * Checks if display: grid is supported in browser (excluding old spec of IE) and if grid has display set to \"grid\"\n     * @return {boolean}\n     */\n    protected _getIsCssGridSupported(): boolean {\n        if ( window.CSS && window.CSS.supports && typeof window.CSS.supports === 'function' ) {\n            const currentCssDisplaySet: string = window.getComputedStyle( document.querySelector( `.${ this.settings.gridClass }` ) ).getPropertyValue( 'display' );\n\n            return CSS.supports( 'display', 'grid' ) && CSS.supports( 'grid-auto-flow', 'row' ) && currentCssDisplaySet === 'grid';\n        }\n        \n        return false;\n    }\n\n    /**\n     * Gets current breakpoint name (key)\n     * @return {string} key with breakpoint's name\n     */\n    protected _getCurrentBreakpointName(): string { \n        return $.map( breakpoint, ( val: number, key: string ): any => {\n            if ( breakpoint.current === val && key !== 'current' ) {\n                return key;\n            }\n        } );\n    }\n\n    /**\n     * Calculates \"virtual\" length of grid items\n     * \"virtual\" means that teasers are included and their sizes are calculated too\n     * f.e if teaser covers 2 tiles it counts as 2 brics, accordingly if it's 2x2 then it takes 4 bricks\n     * @return {number} number of available bricks in grid\n     */\n    protected _getVirtualBricksLength(): number {\n        let virtualLength: number = this.$grid.children().length;\n        const teasers: any = this._getTeaserItems();\n\n        if ( this.currentColsInRow > 1 ) {\n            virtualLength += teasers.x2.length + ( teasers.x4.length * 3 );\n        }\n\n        if ( $( window ).width() >= breakpoint.tablet ) {\n            virtualLength += ( teasers.heros.length * 3 );\n        }\n\n        return virtualLength;\n    }\n\n    /**\n     * Returns all teasers and heros that are placed in the grid\n     * @param {number} untilIndex - optional parameter to limit bricks if further filtering is not needed\n     * @return {object} object with items sorted by type or size\n     */\n    protected _getTeaserItems( untilIndex?: number ): any {\n        let $bricks = this.$grid.children();\n        let $x4items: any;\n        let $x2items: any;\n\n        if ( untilIndex > 0 ) {\n            $bricks = $bricks.filter( ( idx: number ): any => {\n                return idx < untilIndex;\n            } );\n        }\n\n        $x4items = $bricks.filter( `.${ this.settings.brickClass }--x2.${ this.settings.brickClass }--y2:not(.${ this.settings.brickClass }--hero)` ); \n        $x2items = $bricks.filter( `.${ this.settings.brickClass }--x2:not(.${ this.settings.brickClass }--y2)` ).add( $bricks.filter( `.${ this.settings.brickClass }--y2:not(.${ this.settings.brickClass }--x2)` ) );\n\n        return {\n            x2: $x2items,\n            x4: $x4items,\n            heros: $( `.${ this.settings.brickClass }--hero` ),\n        };\n    }\n\n    /**\n     * Calculates position of given teaser item and gives us position where item should be placed\n     * This method runs only if CSS Grid Layout is NOT(!) supported in user's browser\n     * @param {object} teaserData - object containing required information about teaser: size and position where it should be added\n     * @return {number} index of brick after which teaser should be placed (without adjustments)\n     */\n    protected _getTeaserIndex( teaserData: any ): number {\n        const windowWidth: number = $( window ).width();\n        let itemIndex: number = this.currentColsInRow * ( teaserData.gridPosition.y - 1 );\n        let sizeX: number = teaserData.size.x;\n        let sizeY: number = teaserData.size.y;\n\n        if ( this.currentColsInRow === 1 && sizeX > 1 ) {\n            sizeX = 1;\n        }\n\n        if ( this.currentColsInRow === 1 && sizeY > 1 ) {\n            sizeY = 1;\n        }\n\n        if ( teaserData.gridPosition.x === 'right' ) {\n            itemIndex = itemIndex + ( this.currentColsInRow - sizeX );\n        } else if ( teaserData.gridPosition.x === 'center' && sizeY < 2 ) {\n            itemIndex = Math.floor( itemIndex + ( ( this.currentColsInRow / 2 ) - ( sizeX / 2 ) ) );\n        }\n\n        const teasers: any = this._getTeaserItems( itemIndex );\n\n        if ( sizeX > 1 || sizeY ) {\n            itemIndex = itemIndex - teasers.x2.length;\n        }\n\n        if ( windowWidth >= breakpoint.tablet ) {\n            itemIndex = itemIndex - ( teasers.x4.length * 3 ) - ( teasers.heros.length * 3 );\n        }\n        \n        return itemIndex;\n    }\n\n    /**\n     * Loops through JSON of teasers and adjusts position returned by _getTeaserIndex method\n     * This method runs only if CSS Grid Layout is NOT(!) supported in user's browser\n     */\n    protected _setTeasersPositions(): void {\n        const windowWidth: number = $( window ).width();\n\n        for ( let i: number = 0; i < this.teasersCfg.length; i++ ) {\n            const $teaser: any = this.$grid.find( `.${ this.settings.brickClass }[data-teaser-id=\"${ this.teasersCfg[ i ].id }\"]` );\n            let idx: any = this._getTeaserIndex( this.teasersCfg[ i ] );\n\n            if ( $teaser.length ) {\n                if ( windowWidth < breakpoint.tablet && !this.teasersCfg[ i ].mobile ) {\n                    $teaser.addClass( `${ this.settings.brickClass }--hidden` );\n                    idx = idx - ( this.teasersCfg[ i ].size.x * this.teasersCfg[ i ].size.y );\n                } else {\n                    if ( this.teasersCfg[ i ].gridPosition.x === 'right' ) {\n                        $teaser.addClass( `${ this.settings.brickClass }--right` );\n                    }\n                    this.teasers.push( $teaser[ 0 ] );\n                    this._insertTeaser( $teaser, idx - 1 );\n                }\n            } else {\n                idx = idx - ( this.teasersCfg[ i ].size.x * this.teasersCfg[ i ].size.y );\n                console.warn( `cs-grid-layout: Teaser was declared but not found in DOM (data-teaser-id: ${ this.teasersCfg[ i ].id })` );\n            }\n        }\n    }\n\n    /**\n     * Physically appends given teaser to given position\n     * This method runs only if CSS Grid Layout is NOT(!) supported in user's browser\n     * @param {object} $teaser - JQuery object to append\n     * @param {number} gridIndex - indicates index of brick after which $teaser should be appended\n     */\n    protected _insertTeaser( $teaser: any, gridIndex: number ) {\n        if ( gridIndex < 1 ) {\n            this.$grid.prepend( $teaser );\n        } else {\n            $teaser.insertAfter( this.$grid.children().eq( gridIndex ) );\n        }\n        \n        $teaser.removeClass( `${ this.settings.brickClass }--hidden` ).addClass( `${ this.settings.brickClass }--teaser-ready` );\n    }\n\n    /**\n     * Calculates X and Y axis of given teaser and adjusts if it overflows current grid possibilities (rows, columns)\n     * This method runs only if CSS Grid Layout IS supported in user's browser\n     * @param {object} teaserData - object containing required information about teaser: size and position where it should be added\n     * @return {object} X and Y axis in the grid\n     */\n    protected _getTeaserPositionInGrid( teaserData: any ): any {\n        let xPos: any = 1;\n        let yPos: any = teaserData.gridPosition.y;\n\n        if ( yPos >= this.currentRowsCount && teaserData.size.y > 1 ) {\n            yPos = this.currentRowsCount - 1;\n        }\n\n        if ( teaserData.gridPosition.x === 'right' ) {\n            xPos = this.currentColsInRow - teaserData.size.x + 1;\n        } else if ( teaserData.gridPosition.x === 'center' ) {\n            xPos = Math.floor( this.currentColsInRow / 2 );\n        }\n\n        return {\n            x: xPos,\n            y: yPos,\n        };\n    }\n\n    /**\n     * Loops through all teasers, adjusts calculated position and applies CSS grid styles to all teasers declared in JSON\n     * This method runs only if CSS Grid Layout IS supported in user's browser\n     */\n    protected _setTeasersCSS(): void {\n        this.teasers = [];\n        const windowWidth = $( window ).width();\n\n        for ( let i: number = 0; i < this.teasersCfg.length; i++ ) {\n            const $teaser: any = this.$grid.find( `.${ this.settings.brickClass }[data-teaser-id=\"${ this.teasersCfg[ i ].id }\"]` );\n            const teaser: any = $teaser[ 0 ];\n\n            if ( $teaser.length ) {\n                if ( windowWidth < breakpoint.tablet && !this.teasersCfg[ i ].mobile ) {\n                    $teaser.addClass( `${ this.settings.brickClass }--hidden` );\n                } else {\n                    const pos: any = this._getTeaserPositionInGrid( this.teasersCfg[ i ], );\n\n                    if ( pos.x >= 1 && pos.y <= this.currentRowsCount ) {\n                        teaser.style.gridRowStart = pos.y;\n                    }\n\n                    if ( pos.y <= this.currentRowsCount ) {\n                        if ( pos.x >= 1 && pos.x <= this.currentColsInRow ) {\n                            teaser.style.gridColumnStart = pos.x;\n                        } else if ( pos.x > this.currentColsInRow ) {\n                            pos.x = this.currentRowsCount - this.teasersCfg[ i ].size.x + 1;\n                        }\n                    }\n\n                    $teaser.removeClass( `${ this.settings.brickClass }--hidden` ).addClass( `${ this.settings.brickClass }--teaser-ready` );\n                }\n\n                this.teasers.push( teaser );\n            } else {\n                console.warn( `cs-grid-layout: Teaser was declared but not found in DOM (data-teaser-id: ${ this.teasersCfg[ i ].id })` );\n            }\n        }\n    }\n\n    /**\n     * Checks support of CSS Grid Layout in browsers and Initializes the correct methods\n     */\n    protected _initialize(): void {\n        if ( this.isCssGrid ) {\n            this._setTeasersCSS();\n        } else {\n            this._setTeasersPositions();\n        }\n\n        this._resizeHandler();\n    }\n\n    /**\n     * Resize handler\n     * Recalculation is triggered only if number of columns was changed\n     */\n    protected _resizeHandler(): void {\n        let _this: any = this;\n\n        $( window ).on( 'resize', function(): void {\n            if ( _this.teasers.length && _this.currentColsInRow !== _this.columnsCfg[ _this._getCurrentBreakpointName() ] ) {\n                _this._recalculate();\n            }\n        } );\n    }\n}\n"],"names":[],"mappings":"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"}