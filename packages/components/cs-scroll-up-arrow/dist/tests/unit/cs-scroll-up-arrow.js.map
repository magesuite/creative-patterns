{"version":3,"file":null,"sources":["../../../src/tests/unit/cs-scroll-up-arrow.ts"],"sourcesContent":["// import $ from '../../../node_modules/jquery/dist/jquery.js';\n//\n// import {IScrollUpArrow, IScrollUpArrowSettings, ScrollUpArrow} from '../../class.cs-scroll-up-arrow';\n//\n// describe('Scrollup arrow component: ', function (): void {\n//\n//     let scrollupArrow: IScrollUpArrow = null;\n//     let scrollupArrowHtml: string = `<div class=\"cs-scroll-up-arrow\"></div>`;\n//     let $scrollupArrowNode: JQuery = null;\n//\n//     let scrollToParameter: number = 0;\n//     let scrollingSpeedParameter: number = 100;\n//     let visibleClass: string = 'cs-scroll-up-arrow--is-visible';\n//\n//     let scrollupArrowSettings: IScrollUpArrowSettings = {\n//         scrollTo: scrollToParameter,\n//         scrollingSpeed: scrollingSpeedParameter,\n//         classes: {\n//             visible: visibleClass,\n//         },\n//     };\n//\n//     beforeEach(function (): void {\n//         $scrollupArrowNode = $(scrollupArrowHtml);\n//\n//         scrollupArrow = new ScrollUpArrow($scrollupArrowNode, scrollupArrowSettings);\n//\n//     });\n//\n//     it('has show() method', function (): void {\n//         expect(typeof scrollupArrow.show).toBe('function');\n//     });\n//\n//     it('has hide() method', function (): void {\n//         expect(typeof scrollupArrow.hide).toBe('function');\n//     });\n//\n//     it('has isVisible() method', function (): void {\n//         expect(typeof scrollupArrow.isVisible).toBe('function');\n//     });\n//\n//     it('has init() method', function (): void {\n//         expect(typeof scrollupArrow.init).toBe('function');\n//     });\n//\n//     it('is visible after show() method', function (): void {\n//         scrollupArrow.hide();\n//         scrollupArrow.show();\n//\n//         expect($scrollupArrowNode.is(':visible'));\n//\n//     });\n//\n//     it('is hidden after hide() method', function (): void {\n//         scrollupArrow.show();\n//         scrollupArrow.hide();\n//\n//         expect($scrollupArrowNode.is(':hidden'));\n//\n//     });\n//\n//     it('is is returning false after isVisible is called and component is not visible', function (): void {\n//         // not visible by default\n//\n//         expect(!scrollupArrow.isVisible());\n//\n//     });\n//\n//     it('is is returning true after isVisible is called and component is visible', function (): void {\n//\n//         scrollupArrow.show();\n//\n//         expect(scrollupArrow.isVisible());\n//\n//     });\n//\n//     it('is scrolling after scroll() method', function (done: Function): void {\n//         let $win: JQuery = $(window);\n//         $win.scrollTop(500);\n//\n//         scrollupArrow.scroll();\n//\n//         setTimeout(() => {\n//             expect($win.scrollTop()).toEqual(scrollToParameter);\n//             done();\n//         }, scrollingSpeedParameter + 100);\n//\n//     });\n//\n//     it('is scrolling to X point after scroll(X) method', function (done: Function): void {\n//         let $win: JQuery = $(window);\n//         let x: number = 300;\n//         $win.scrollTop(100);\n//\n//         scrollupArrow.scroll(x);\n//\n//         setTimeout(() => {\n//             expect($win.scrollTop()).toEqual(x);\n//             done();\n//\n//         }, scrollingSpeedParameter + 100);\n//\n//     });\n//\n// });\n"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwGM;;"}