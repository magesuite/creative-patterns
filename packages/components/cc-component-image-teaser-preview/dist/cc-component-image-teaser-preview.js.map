{"version":3,"file":null,"sources":["../src/cc-component-image-teaser-preview.ts"],"sourcesContent":["import $ from 'jquery';\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teaserWidth: string;\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            href: string,\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentImageTeaserPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-image-teaser-preview\" v-show=\"!isLoading\">\n        <div class=\"cc-component-image-teaser-preview__wrapper\">\n            <ul class=\"cc-component-image-teaser-preview__scene cc-component-image-teaser-preview__scene--{{ configuration.currentScenario.desktopLayout.id }}-in-row\" v-el:scene>\n                <template v-for=\"item in configuration.items\">\n                    <li class=\"cc-component-image-teaser-preview__item\">\n                        <img v-if=\"configuration.items[$index].image\" :src=\"configuration.items[$index].image\" class=\"cc-component-image-teaser-preview__item-image\">\n                        <div class=\"cc-component-image-teaser-preview__image-placeholder-wrapper\" v-show=\"!configuration.items[$index].image\">\n                            <svg class=\"cc-component-image-teaser-preview__image-placeholder\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n                        </div>\n                        <div class=\"cc-component-image-teaser-preview__item-content\">\n                            <h2 class=\"cc-component-image-teaser-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-image-teaser-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-image-teaser-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-image-teaser-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </li>\n                </template>\n            </ul>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            if ( imagesCount ) {\n                $images.load( function(): void {\n                    imagesCount--;\n                    if ( !imagesCount ) {\n                        _this.isLoading = false;\n                        $images.each( function(): void {\n                            $( this ).addClass( 'cc-component-image-teaser-preview__item-image--border' );\n                        } );\n                    }\n                } ).filter( function(): boolean { return this.complete; } ).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        hideEmptySlideContents(): any {\n            $( this.$els.scene ).find( '.cc-component-image-teaser-preview__item-content' ).each( function(): void {\n                if ( !$( this ).children().length ) {\n                    $( this ).hide();\n                }\n            } );\n        },\n    }\n};\n\nexport default ccComponentImageTeaserPreview;\n"],"names":[],"mappings":";;;;;;;;AAkBA;;;;;AAKA,IAAM,6BAA6B,GAA0B;IACzD,QAAQ,EAAE,o3EA4BH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,SAAS,EAAE;YACP,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,KAAK;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IACD,OAAO,EAAE;;;;;QAKL,qBAAqB;YACjB,IAAM,KAAK,GAAQ,IAAI,CAAC;YACxB,IAAM,OAAO,GAAG,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YACnD,IAAI,WAAW,GAAW,OAAO,CAAC,MAAM,CAAC;YAEzC,IAAK,WAAY,EAAE;gBACf,OAAO,CAAC,IAAI,CAAE;oBACV,WAAW,EAAE,CAAC;oBACd,IAAK,CAAC,WAAY,EAAE;wBAChB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;wBACxB,OAAO,CAAC,IAAI,CAAE;4BACV,CAAC,CAAE,IAAI,CAAE,CAAC,QAAQ,CAAE,uDAAuD,CAAE,CAAC;yBACjF,CAAE,CAAC;qBACP;iBACJ,CAAE,CAAC,MAAM,CAAE,cAAsB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,CAAC,IAAI,EAAE,CAAC;aACtE;iBAAM;gBACH,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;aAC3B;SACJ;QACD,sBAAsB;YAClB,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC,IAAI,CAAE;gBAClF,IAAK,CAAC,CAAC,CAAE,IAAI,CAAE,CAAC,QAAQ,EAAE,CAAC,MAAO,EAAE;oBAChC,CAAC,CAAE,IAAI,CAAE,CAAC,IAAI,EAAE,CAAC;iBACpB;aACJ,CAAE,CAAC;SACP;KACJ;CACJ,CAAC,AAEF;;;;"}