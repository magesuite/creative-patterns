{"version":3,"file":null,"sources":["../src/cc-layout-builder.ts"],"sourcesContent":["/*import componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentController from '../../cc-component-controller/src/cc-component-controller';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';*/\n\n/**\n * Layout builder component.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst layoutBuilder: vuejs.ComponentOption = {\n    template: `<section class=\"cc-layout-builder | {{ class }}\">\n        <div class=\"cc-layout-builder__adder\" @click=\"createNewComponent\">\n            <slot name=\"cc-layout-builder__adder\"></slot>\n        </div>\n        <div class=\"cc-layout-builder__component\">\n            <div class=\"cc-layout-builder__component-actions\">\n                <slot name=\"cc-layout-builder__component-actions\"></slot>\n            </div>\n            <div class=\"cc-layout-builder__component-wrapper\">\n                <slot name=\"cc-layout-builder__component-wrapper\"></slot>\n            </div>\n        </div>\n    </section>`,\n    props: {\n        /**\n         * Get dependencies\n         */\n        /*components: {\n            'cc-component-adder': componentAdder,\n            'cc-component-controller': componentController,\n            'cc-component-placeholder': componentPlaceholder\n        },*/\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-layout-builder', '' )\n        },\n        /**\n         * Property containing callback triggered when user clicks create-component button (the one with plus sign).\n         */\n        createNewComponent: {\n            type: Function\n        }\n    },\n    methods: {\n        /**\n         * Create-component button click handler.\n         * This handler triggers \"cc-layout-builder__create-new-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateNewComponent: function ( event: Event ): void {\n            this.$dispatch( 'cc-layout-builder__create-new-component', event );\n            if ( typeof this.createNewComponent === 'function' ) {\n                this.createNewComponent( event );\n            }\n        }\n    }\n};\n\nexport default layoutBuilder;\n"],"names":[],"mappings":";;;IAAA;;;AAIA,IAAA;;;;;;AAMA,IAAA,IAAM,aAAa,GAA0B;QACzC,QAAQ,EAAE,8mBAYC;QACX,KAAK,EAAE;;;;;;;;;;;;YAYH,KAAK,EAAE;gBACH,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,UAAE,KAAa,IAAc,OAAA,KAAK,CAAC,OAAO,CAAE,mBAAmB,EAAE,EAAE,CAAE,GAAA;aAChF;;;;YAID,kBAAkB,EAAE;gBAChB,IAAI,EAAE,QAAQ;aACjB;SACJ;QACD,OAAO,EAAE;;;;;;YAML,oBAAoB,EAAE,UAAW,KAAY;gBACzC,IAAI,CAAC,SAAS,CAAE,yCAAyC,EAAE,KAAK,CAAE,CAAC;gBACnE,IAAK,OAAO,IAAI,CAAC,kBAAkB,KAAK,UAAW,EAAE;oBACjD,IAAI,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;iBACpC;aACJ;SACJ;KACJ,CAAC,AAEF;;;;"}