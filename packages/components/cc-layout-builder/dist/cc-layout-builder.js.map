{"version":3,"file":null,"sources":["../../action-button/src/action-button.ts","../../cc-component-brand-carousel-preview/src/cc-component-brand-carousel-preview.ts","../../cc-component-button-preview/src/cc-component-button-preview.ts","../../cc-component-headline-preview/src/cc-component-headline-preview.ts","../../cc-component-image-teaser-preview/src/cc-component-image-teaser-preview.ts","../../cc-component-hero-carousel-preview/src/cc-component-hero-carousel-preview.ts","../../cc-component-product-carousel-preview/src/cc-component-product-carousel-preview.ts","../../cc-component-static-cms-block-preview/src/cc-component-static-cms-block-preview.ts","../../cc-component-actions/src/cc-component-actions.ts","../../cc-component-adder/src/cc-component-adder.ts","../../cc-component-placeholder/src/cc-component-placeholder.ts","../src/cc-layout-builder.ts"],"sourcesContent":["/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        },\n    },\n};\n\nexport default actionButton;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentBrandCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-brand-carousel-preview\">\n        <svg class=\"cc-component-brand-carousel-preview__arrow cc-component-brand-carousel-preview__arrow--left\">\n            <use v-bind=\"{ 'xlink:href': assetsSrc + 'images/sprites.svg#icon_dashboard-arrow-left' }\"></use>\n        </svg>\n\n        <ul class=\"cc-component-brand-carousel-preview__list\">\n            <template v-for=\"item in 6\">\n                <li class=\"cc-component-brand-carousel-preview__list-item\">\n                    <div class=\"cc-component-brand-carousel-preview__brand-wrapper\">\n                        <svg class=\"cc-component-brand-carousel-preview__brand\">\n                            <use v-bind=\"{ 'xlink:href': assetsSrc + 'images/sprites.svg#icon_component-cc-brand-logo' }\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-component-brand-carousel-preview__arrow cc-component-brand-carousel-preview__arrow--right\">\n            <use v-bind=\"{ 'xlink:href': assetsSrc + 'images/sprites.svg#icon_dashboard-arrow-right' }\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentBrandCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    label: string;\n    target: string;\n}\n\n/**\n * Button preview component.\n * This component is responsible for displaying preview of button component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentButtonPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-button-preview\">\n        <button type=\"button\">{{ configuration.label }}</button>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentButtonPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    title: string;\n    subtitle: string;\n}\n\n/**\n * Headline preview component.\n * This component is responsible for displaying preview of headline component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeadlinePreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-headline-preview\">\n        <h1 class=\"cc-component-headline-preview__headline\">{{ configuration.title }}</h1>\n        <h2 class=\"cc-component-headline-preview__subheadline\">{{ configuration.subtitle }}</h2>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentHeadlinePreview;\n","import $ from 'jquery';\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teaserWidth: string;\n    items: [\n        {\n            image: string,\n            headline: string,\n            paragraph: string,\n            ctaLabel: string,\n            href: string,\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentImageTeaserPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-image-teaser-preview\" v-show=\"!isLoading\">\n        <div class=\"cc-component-image-teaser-preview__wrapper\">\n            <ul class=\"cc-component-image-teaser-preview__scene cc-component-image-teaser-preview__scene--{{ configuration.currentScenario.desktopLayout.id }}-in-row\" v-el:scene>\n                <template v-for=\"item in configuration.items\">\n                    <li class=\"cc-component-image-teaser-preview__item\" v-show=\"configuration.items[$index].image\">\n                        <img :src=\"configuration.items[$index].image\" class=\"cc-component-image-teaser-preview__item-image\">\n                        <div class=\"cc-component-image-teaser-preview__item-content\">\n                            <h2 class=\"cc-component-image-teaser-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-image-teaser-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-image-teaser-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-image-teaser-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </li>\n                </template>\n            </ul>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            $images.load( function(): void {\n                imagesCount--;\n                if ( !imagesCount ) {\n                    _this.isLoading = false;\n                    $images.each( function(): void {\n                        $( this ).addClass( 'cc-component-image-teaser-preview__item-image--border' );\n                    } );\n                }\n            } ).filter( function(): boolean { return this.complete; } ).load();\n        },\n    }\n};\n\nexport default ccComponentImageTeaserPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            ctaTarget: string,\n            displayVariant: string\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeroCarouselPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-hero-carousel-preview\">\n        <div class=\"cc-component-hero-carousel-preview__wrapper\">\n            <div class=\"cc-component-hero-carousel-preview__scene\" v-el:scene>\n                <template v-for=\"item in configuration.items\">\n                    <div class=\"cc-component-hero-carousel-preview__slide\">\n                        <img :src=\"configuration.items[$index].image\" class=\"cc-component-hero-carousel-preview__image\">\n                        <div class=\"cc-component-hero-carousel-preview__slide-content\">\n                            <h2 class=\"cc-component-hero-carousel-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-hero-carousel-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-hero-carousel-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-hero-carousel-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </div>\n                </template>\n            </div>\n            <div class=\"cc-component-hero-carousel-preview__thumbs\">\n                <template v-for=\"item in configuration.items\">\n                    <img :src=\"configuration.items[$index].image\" class=\"cc-component-hero-carousel-preview__thumb\" width=\"100px\">\n                </template>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        const _this: any = this;\n        let resizeTimer: any = undefined;\n\n        $( window ).on( 'resize', function(): void {\n            clearTimeout( resizeTimer );\n            resizeTimer = setTimeout( function(): void {\n                _this.setSceneTranslate();\n            }, 250 );\n        } );\n\n        this.setSceneTranslate();\n        this.setImagesLoadListener();\n    },\n    methods: {\n        /**\n         * Sets negative transform: translateX() for scene to display images in center\n         */\n        setSceneTranslate(): void {\n            $( this.$els.scene ).css( 'transform', `translateX( ${ -Math.abs( this._getCalculatedHalfSceneWidth() ) }px )` );\n        },\n        /**\n         * Calculates half of whole scene width\n         * 74% (slide width) of container's width * number of images devides by 2\n         * then this value has to be reduced by half of container width\n         */\n        _getCalculatedHalfSceneWidth(): number {\n            const containerWidth: number = $( this.$els.scene ).outerWidth( true );\n            return Math.round ( ( ( ( ( 74 / 100 ) * containerWidth ) * this.configuration.items.length ) / 2 ) - ( containerWidth / 2 ) );\n        },\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            $images.load( function(): void {\n                imagesCount--;\n                if ( !imagesCount ) {\n                    _this.isLoading = false;\n                    $images.each( function(): void {\n                        $( this ).addClass( 'cc-component-hero-carousel-preview__image--border' );\n                    } );\n                }\n            } ).filter( function(): boolean { return this.complete; } ).load();\n        },\n    },\n};\n\nexport default ccComponentHeroCarouselPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    sort_by: string;\n    limit: number;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentProductCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-product-carousel-preview\">\n        <svg class=\"cc-component-product-carousel-preview__arrow cc-component-product-carousel-preview__arrow--left\">\n            <use v-bind=\"{ 'xlink:href': assetsSrc + 'images/sprites.svg#icon_dashboard-arrow-left' }\"></use>\n        </svg>\n\n        <ul class=\"cc-component-product-carousel-preview__list\">\n            <template v-for=\"item in 4\">\n                <li class=\"cc-component-product-carousel-preview__list-item\">\n                    <div class=\"cc-component-product-carousel-preview__product-wrapper\">\n                        <svg class=\"cc-component-product-carousel-preview__product\">\n                            <use v-bind=\"{ 'xlink:href': assetsSrc + 'images/sprites.svg#icon_component-cc-product-teaser-item' }\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-component-product-carousel-preview__arrow cc-component-product-carousel-preview__arrow--right\">\n            <use v-bind=\"{ 'xlink:href': assetsSrc + 'images/sprites.svg#icon_dashboard-arrow-right' }\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentProductCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    identifier: string;\n}\n\n/**\n * CMS block preview component.\n * This component is responsible for displaying preview of CMS block component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentStaticCmsBlockPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-static-cms-block-preview\">\n        <h2 class=\"cc-component-static-cms-block-preview__block-id\">CMS Block ID: {{ configuration.identifier }}</h2>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentStaticCmsBlockPreview;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' ),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import $ from 'jquery';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport ccComponentBrandCarouselPreview from '../../cc-component-brand-carousel-preview/src/cc-component-brand-carousel-preview';\nimport ccComponentButtonPreview from '../../cc-component-button-preview/src/cc-component-button-preview';\nimport ccComponentHeadlinePreview from '../../cc-component-headline-preview/src/cc-component-headline-preview';\nimport ccComponentImageTeaserPreview from '../../cc-component-image-teaser-preview/src/cc-component-image-teaser-preview';\nimport ccComponentHeroCarouselPreview from '../../cc-component-hero-carousel-preview/src/cc-component-hero-carousel-preview';\nimport ccComponentProductCarouselPreview from '../../cc-component-product-carousel-preview/src/cc-component-product-carousel-preview';\nimport ccComponentStaticCmsBlockPreview from '../../cc-component-static-cms-block-preview/src/cc-component-static-cms-block-preview';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\nimport template from './cc-layout-builder.tpl';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    type: string;\n    data?: any;\n}\n\n/**\n * Layout builder component.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst layoutBuilder: vuejs.ComponentOption = {\n    template: template,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n        'cc-component-brand-carousel-preview': ccComponentBrandCarouselPreview,\n        'cc-component-button-preview': ccComponentButtonPreview,\n        'cc-component-headline-preview': ccComponentHeadlinePreview,\n        'cc-component-image-teaser-preview': ccComponentImageTeaserPreview,\n        'cc-component-hero-carousel-preview': ccComponentHeroCarouselPreview,\n        'cc-component-product-carousel-preview': ccComponentProductCarouselPreview,\n        'cc-component-static-cms-block-preview': ccComponentStaticCmsBlockPreview,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Initial component configuration encoded as JSON string.\n         */\n        componentsConfiguration: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should take IComponentInformation and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         */\n        editComponent: {\n            type: Function,\n            default: ( componentInfo: IComponentInformation ): IComponentInformation => componentInfo,\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         */\n        addComponent: {\n            type: Function,\n            default: (): IComponentInformation => undefined,\n        },\n    },\n    data(): any {\n        return {\n            components: [],\n        };\n    },\n    ready(): void {\n        // Set initial components configuration if provided.\n        this.components = this.componentsConfiguration ? JSON.parse( this.componentsConfiguration ) : [];\n        this.$dispatch( 'cc-layout-builder__update' );\n    },\n    methods: {\n        /**\n         * Returns components information currently stored within layout builder.\n         * @return {IComponentInformation[]} Components information array.\n         */\n        getComponentInformation(): IComponentInformation[] {\n            return JSON.parse(\n                JSON.stringify( this.components ),\n            );\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then this compoennt will be inserted before it.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        addComponentInformation( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.splice( index, 0, componentInfo );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then it will be overwritten.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        setComponentInformation( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.$set( index, componentInfo );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Creates new component and adds it to a specified index.\n         * This function calls callback specified by \"add-component\" property that\n         * should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         * @param {number} index New component's index in components array.\n         */\n        createNewComponent( index: number ): void {\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            const componentInfo: IComponentInformation = this.addComponent(\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.addComponentInformation( index, asyncComponentInfo );\n                },\n            );\n            this.addComponentInformation( index, componentInfo );\n        },\n        /**\n         * Initializes edit mode of component.\n         * This function invokes callback given by \"edit-component\" callback that\n         * should take current IComponentInformation as param and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         * @param {string} index: Component's index in array.\n         */\n        editComponentSettings( index: number ): void {\n            // Create a static, non-reactive copy of component data.\n            let componentInfo: IComponentInformation = JSON.parse(\n                JSON.stringify( this.components[ index ] ),\n            );\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with current component data and callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            componentInfo = this.editComponent(\n                componentInfo,\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.setComponentInformation( index, asyncComponentInfo );\n                },\n            );\n            this.setComponentInformation( index, componentInfo );\n        },\n        /**\n         * Moves component under given index up by swaping it with previous element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentUp( index: number ): void {\n            if ( index > 0 ) {\n                let previousComponent: IComponentInformation = this.components[ index - 1 ];\n                const $thisComponent: any = $( `#${ this.components[ index ].id }` );\n                const $prevComponent: any = $( `#${ this.components[ index - 1 ].id }` );\n\n                $thisComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevComponent.outerHeight( true ) ) }px )` );\n                $prevComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ $thisComponent.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    this.components.$set( index - 1, this.components[ index ] );\n                    this.components.$set( index, previousComponent );\n                    this.$dispatch( 'cc-layout-builder__update' );\n                    $thisComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                    $prevComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves component under given index down by swaping it with next element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentDown( index: number ): void {\n            if ( index < this.components.length - 1 ) {\n                let previousComponent: IComponentInformation = this.components[ index + 1 ];\n                const $thisComponent: any = $( `#${ this.components[ index ].id }` );\n                const $nextComponent: any = $( `#${ this.components[ index + 1 ].id }` );\n\n                $thisComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ $nextComponent.outerHeight( true ) }px )` );\n                $nextComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisComponent.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    this.components.$set( index + 1, this.components[ index ] );\n                    this.components.$set(  index, previousComponent );\n                    this.$dispatch( 'cc-layout-builder__update' );\n                    $thisComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                    $nextComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Removes component and adder that is right after component from the DOM\n         * @param {number} index Component's index in array.\n         */\n        deleteComponent( index: number ): void {\n            if ( window.confirm( 'Are you sure you want to delete this item?' ) ) {\n                this.components.splice( index, 1 );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Tells if component with given index is the first component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is first in array.\n         */\n        isFirstComponent( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if component with given index is the last component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is last in array.\n         */\n        isLastComponent( index: number ): boolean {\n            return index === this.components.length - 1;\n        },\n\n        transformComponentTypeToText( componentType: string ): string {\n            return componentType.replace( '-', ' ' );\n        },\n\n        isPossibleToEdit( componentType: string ): boolean {\n            return componentType === 'brand-carousel';\n        },\n    },\n};\n\nexport default layoutBuilder;\nexport { layoutBuilder, IComponentInformation };\n"],"names":[],"mappings":"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"}