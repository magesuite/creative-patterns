{"version":3,"file":null,"sources":["../src/cc-component-picker.ts"],"sourcesContent":["/**\n * Single component information object.\n */\ninterface IComponentInformation {\n    type: string;\n    /**\n     * Name of the component (will be displayed in front).\n     * @type {string}\n     */\n    name: string;\n    description: string;\n}\n\n/**\n * Components information object that should be returned by AJAX call to API.\n */\ninterface IComponentsInformation {\n    components: IComponentInformation[];\n}\n\n/**\n * Componen picker.\n * Lists all types of components available in m2c in the grid/list mode\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentPicker: vuejs.ComponentOption = {\n    template: `<section class=\"cc-component-picker | {{ class }}\">\n        <ul class=\"cc-component-picker__list\" v-if=\"availableComponents.length\">\n            <li class=\"cc-component-picker__list-item cc-component-picker__list-item--{{component.type}}\" v-for=\"component in availableComponents\">\n                <a class=\"cc-component-picker__component-link\" href=\"#\" @click.prevent=\"onPickComponent( component.type )\">\n                    <span class=\"cc-component-picker__component-figure\">\n                        <svg class=\"cc-component-picker__component-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#icon_component-' + component.type }\"></use>\n                        </svg>\n                    </span>\n                    <span class=\"cc-component-picker__component-name\">{{ component.name }}</span>\n                    <span class=\"cc-component-picker__component-description\">{{ component.description }}</span>\n                </a>\n            </li>\n        </ul>\n        <p class=\"cc-component-picker__no-components\" v-if=\"!availableComponents.length\">\n            No components available.\n        </p>\n    </section>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-picker', '' ),\n        },\n        /**\n         * Property containing callback triggered when user picks component.\n         */\n        pickComponent: {\n            type: Function,\n        },\n        /**\n         * JSON stringified array containing available components.\n         */\n        components: {\n            type: String,\n            default: '',\n        },\n        /**\n         * URL for API returning JSON stringified array containing available components.\n         */\n        componentsEndpoint: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Assets src for icon\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            availableComponents: [],\n        };\n    },\n    ready(): void {\n        // If inline JSON is provided then parse it.\n        if ( this.components ) {\n            this.availableComponents = JSON.parse( this.components );\n        } else if ( this.componentsEndpoint ) {\n            // Otherwise load from endpoint if URL provided.\n            this.$http.get( this.componentsEndpoint ).then( function( response: vuejs.HttpResponse ): void {\n                this.availableComponents = response.json();\n            } );\n        }\n    },\n    methods: {\n        /**\n         * Component pick click handler.\n         * This handler triggers \"cc-component-picker__pick\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onPickComponent( componentType: String ): void {\n            this.$dispatch( 'cc-component-picker__pick', componentType );\n\n            if ( typeof this.pickComponent === 'function' ) {\n                this.pickComponent( componentType );\n            }\n        },\n    },\n};\n\nexport default ccComponentPicker;\n"],"names":[],"mappings":";;;;;;AAoBA;;;;;AAKA,IAAM,iBAAiB,GAA0B;IAC7C,QAAQ,EAAE,4pCAiBC;IACX,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,UAAE,KAAa,IAAc,OAAA,KAAK,CAAC,OAAO,CAAE,qBAAqB,EAAE,EAAE,CAAE,GAAA;SAClF;;;;QAID,aAAa,EAAE;YACX,IAAI,EAAE,QAAQ;SACjB;;;;QAID,UAAU,EAAE;YACR,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;;;;QAID,kBAAkB,EAAE;YAChB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;;;;QAID,SAAS,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;KACJ;IACD,IAAI;QACA,OAAO;YACH,mBAAmB,EAAE,EAAE;SAC1B,CAAC;KACL;IACD,KAAK;;QAED,IAAK,IAAI,CAAC,UAAW,EAAE;YACnB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;SAC5D;aAAM,IAAK,IAAI,CAAC,kBAAmB,EAAE;;YAElC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,kBAAkB,CAAE,CAAC,IAAI,CAAE,UAAU,QAA4B;gBAClF,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;aAC9C,CAAE,CAAC;SACP;KACJ;IACD,OAAO,EAAE;;;;;;QAML,eAAe,YAAE,aAAqB;YAClC,IAAI,CAAC,SAAS,CAAE,2BAA2B,EAAE,aAAa,CAAE,CAAC;YAE7D,IAAK,OAAO,IAAI,CAAC,aAAa,KAAK,UAAW,EAAE;gBAC5C,IAAI,CAAC,aAAa,CAAE,aAAa,CAAE,CAAC;aACvC;SACJ;KACJ;CACJ,CAAC,AAEF;;;;"}