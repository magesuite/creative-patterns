{"version":3,"file":null,"sources":["../../cc-component-configurator/src/cc-component-configurator.ts","../../action-button/src/action-button.ts","../../cc-component-actions/src/cc-component-actions.ts","../../cc-component-adder/src/cc-component-adder.ts","../../cc-component-placeholder/src/cc-component-placeholder.ts","../src/cc-magento-product-grid-teasers-configurator.ts"],"sourcesContent":["/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        },\n    },\n};\n\nexport default actionButton;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' ),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\n/**\n * Magento product-grid teasers configurator component.\n * This component will be responsible for configuration of image teasers inside native products grid on M2 category pages\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccMagentoProductGridTeasersConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<div class=\"cc-magento-product-grid-teasers-configurator | {{ class }}\">\n    <cc-component-adder>\n        <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only\" @click=\"createNewTeaser( 0 )\">\n            <svg class=\"action-button__icon action-button__icon--size_300\">\n                <use xlink:href=\"../images/sprites.svg#icon_plus\"></use>\n            </svg>\n        </button>\n    </cc-component-adder>\n    <template v-for=\"item in configuration.teasers\">\n        <div class=\"cc-magento-product-grid-teasers-configurator__item\">\n            <div class=\"cc-magento-product-grid-teasers-configurator__item-actions\">\n                <cc-component-actions>\n                    <template slot=\"cc-component-actions__top\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up\" @click=\"moveTeaserUp( $index )\" :class=\"[ isFirstComponent( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstComponent( $index )\">\n                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                <use xlink:href=\"../images/sprites.svg#icon_arrow-up\"></use>\n                            </svg>\n                        </button>\n                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down\" @click=\"moveTeaserDown( $index )\" :class=\"[ isLastComponent( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastComponent( $index )\">\n                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                <use xlink:href=\"../images/sprites.svg#icon_arrow-down\"></use>\n                            </svg>\n                        </button>\n                    </template>\n                    <template slot=\"cc-component-actions__bottom\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete\" @click=\"deleteTeaser( $index )\">\n                            <svg class=\"action-button__icon\">\n                                <use xlink:href=\"../images/sprites.svg#icon_trash-can\"></use>\n                            </svg>\n                        </button>\n                    </template>\n                </cc-component-actions>\n            </div>\n            <div class=\"cc-magento-product-grid-teasers-configurator__item-content\">\n                <div class=\"cc-magento-product-grid-teasers__item-image\"></div>\n                <div class=\"cc-magento-product-grid-teasers__item-options\">\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"cs-input__label\">Display variant:</label>\n                        <select name=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"cs-input__select\" id=\"cfg-mpg-teaser{{ $index }}-variant\" v-model=\"configuration.displayVariant\">\n                            <option value=\"variant-1\">Text vertically centered on the left</option>\n                            <option value=\"variant-2\">Text vertically centered in the middle</option>\n                            <option value=\"variant-3\">Text on the bottom, left corner</option>\n                            <option value=\"variant-4\">Text on the bottom - centered</option>\n                        </select>\n                    </div>\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"cs-input__label\">Headline:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"cs-input__input\">\n                    </div>\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"cs-input__label\">Paragraph:</label>\n                        <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"cs-input__textarea\" placeholder=\"(max 200 characters)\" maxlength=\"200\"></textarea>\n                    </div>\n                    <div class=\"cs-input\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-ctaLabel\" class=\"cs-input__label\">CTA label:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-mpg-teaser{{ $index }}-ctaLabel\" class=\"cs-input__input\">\n                    </div>\n                    <div class=\"cs-input cs-input--type-addon\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"cs-input__label\">CTA label:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"cs-input__input\">\n                    </div>\n                    <div class=\"cs-input cs-input--type-addon\">\n                        <label for=\"cfg-mpg-teaser{{ $index }}-cta-target\" class=\"cs-input__label\">CTA target link:</label>\n                        <input type=\"text\" v-model=\"configuration.items[$index].ctaTarget\" id=\"cfg-mpg-teaser{{ $index }}-cta-target\" class=\"cs-input__input\">\n                        <span class=\"cs-input__addon\">\n                            <svg class=\"cs-input__addon-icon\">\n                                <use xlink:href=\"../images/sprites.svg#icon_link\"></use>\n                            </svg>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <cc-component-adder v-if=\"configuration.items.length\">\n            <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only\" @click=\"createNewTeaser( $index + 1 )\">\n                <svg class=\"action-button__icon action-button__icon--size_300\">\n                    <use xlink:href=\"../images/sprites.svg#icon_plus\"></use>\n                </svg>\n            </button>\n        </cc-component-adder>\n    </template>\n</div>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    teasers: [],\n                };\n            },\n        },\n    },\n};\n\nexport default ccMagentoProductGridTeasersConfigurator;\n"],"names":[],"mappings":"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"}