{"version":3,"file":null,"sources":["../src/cc-component-hero-carousel-preview.ts"],"sourcesContent":["import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            ctaTarget: string,\n            displayVariant: string\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeroCarouselPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-hero-carousel-preview\">\n        <div v-bind:class=\"sceneClass\" v-el:scene>\n            <div class=\"cc-component-hero-carousel-preview__slide\" v-if=\"configuration.items.length > 1\">\n                <img :src=\"configuration.items[configuration.items.length - 1].image\" class=\"cc-component-hero-carousel-preview__image\">\n            </div>\n\n            <template v-for=\"(index, item) in configuration.items\">\n                <div class=\"cc-component-hero-carousel-preview__slide\" v-if=\"index < 2\">\n                    <img :src=\"configuration.items[$index].image\" class=\"cc-component-hero-carousel-preview__image\">\n                    <div class=\"cc-component-hero-carousel-preview__slide-content\" v-if=\"index == 0 || configuration.items.length == 1\">\n                        <div class=\"cc-component-hero-carousel-preview__thumbs\">\n                            <template v-for=\"(idx, slide) in configuration.items\">\n                                <img :src=\"configuration.items[idx].image\" class=\"cc-component-hero-carousel-preview__thumb\">\n                            </template>\n                        </div>\n                        <div class=\"cc-component-hero-carousel-preview__slide-content-info\">\n                            <h2 class=\"cc-component-hero-carousel-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-hero-carousel-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-hero-carousel-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-hero-carousel-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </template>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n    },\n    computed: {\n        sceneClass(): string {\n            if ( this.configuration.items.length > 1 ) {\n                return 'cc-component-hero-carousel-preview__scene';\n            }\n\n            return 'cc-component-hero-carousel-preview__scene cc-component-hero-carousel-preview__scene--single';\n        },\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            $images.load( function(): void {\n                imagesCount--;\n                if ( !imagesCount ) {\n                    _this.isLoading = false;\n                    $images.each( function(): void {\n                        $( this ).addClass( 'cc-component-hero-carousel-preview__image--border' );\n                    } );\n                }\n            } ).filter( function(): boolean { return this.complete; } ).load();\n        },\n    },\n};\n\nexport default ccComponentHeroCarouselPreview;\n"],"names":[],"mappings":";;;;;;;;AAoBA;;;;;AAKA,IAAM,8BAA8B,GAA0B;IAC1D,QAAQ,EAAE,qhFAgCH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,SAAS,EAAE;YACP,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,KAAK;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IACD,QAAQ,EAAE;QACN,UAAU;YACN,IAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAE,EAAE;gBACvC,OAAO,2CAA2C,CAAC;aACtD;YAED,OAAO,6FAA6F,CAAC;SACxG;KACJ;IACD,OAAO,EAAE;;;;;QAKL,qBAAqB;YACjB,IAAM,KAAK,GAAQ,IAAI,CAAC;YACxB,IAAM,OAAO,GAAG,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YACnD,IAAI,WAAW,GAAW,OAAO,CAAC,MAAM,CAAC;YAEzC,OAAO,CAAC,IAAI,CAAE;gBACV,WAAW,EAAE,CAAC;gBACd,IAAK,CAAC,WAAY,EAAE;oBAChB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;oBACxB,OAAO,CAAC,IAAI,CAAE;wBACV,CAAC,CAAE,IAAI,CAAE,CAAC,QAAQ,CAAE,mDAAmD,CAAE,CAAC;qBAC7E,CAAE,CAAC;iBACP;aACJ,CAAE,CAAC,MAAM,CAAE,cAAsB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,CAAC,IAAI,EAAE,CAAC;SACtE;KACJ;CACJ,CAAC,AAEF;;;;"}