{"version":3,"file":null,"sources":["../src/offcanvas.ts"],"sourcesContent":["import $ from 'jquery';\n\n/**\n * Component options interface.\n */\nexport interface OffcanvasOptions {\n    className?: string; // Component class name.\n    triggerClassName?: string; // Offcanvas trigger class name.\n    closeOnBlur?: boolean; // Should offcanvas be closed on overlay click.\n    drawerTransitionDuration?: number; // How long does the drawer CSS transition take in ms.\n    overlayTransitionDuration?: number; // How long does the overlay CSS transition take in ms.\n};\n\n/**\n * Offcanvas component for mobile off-screen content.\n */\nexport default class Offcanvas {\n    protected _$element: JQuery;\n    protected _$overlay: JQuery;\n    protected _$drawer: JQuery;\n    protected _$trigger: JQuery;\n    protected _options: OffcanvasOptions;\n    protected _eventListeners: {\n        triggerClick?: ( event: Event ) => void;\n        overlayClick?: ( event: Event ) => void;\n    } = {};\n\n    /**\n     * Creates new offcanvas component with optional settings.\n     * @param {JQuery} $element Optional, element to be initialized on.\n     * @param {OffcanvasOptions} options  Optional settings object.\n     */\n    public constructor( $element?: JQuery, options?: OffcanvasOptions ) {\n        this._options = $.extend( {\n            className: 'offcanvas',\n            triggerClassName: 'offcanvas-trigger',\n            closeOnBlur: true,\n            drawerTransitionDuration: 300,\n            overlayTransitionDuration: 300,\n        }, options );\n\n        this._$element = $element || $( `.${this._options.className}` );\n        if ( this._$element.length === 0 ) {\n            return;\n        }\n\n        this._$drawer = this._$element.find( `.${this._options.className}__drawer` );\n        this._$overlay = this._$element.find( `.${this._options.className}__overlay` );\n        this._$trigger = $( `.${this._options.triggerClassName}`);\n\n        this._addEventListeners();\n    }\n    /**\n     * Toggles offcanvas visibility depending on its current state.\n     * @return {Promise<Offcanvas>} Promise that resolves after offcanvas ends toggling.\n     */\n    public toggle(): Promise<Offcanvas> {\n        if ( this._$trigger.hasClass( `${this._options.triggerClassName}--active` ) ) {\n            return this.hide();\n        }\n\n        return this.show();\n    }\n    /**\n     * Shows offcanvas.\n     * @return {Promise<Offcanvas>} Promise that resolves after offcanvas is shown.\n     */\n    public show(): Promise<Offcanvas> {\n        $( 'body, html' ).addClass( 'no-scroll' );\n        this._$trigger.addClass( `${this._options.triggerClassName}--active` );\n        return Promise.all( [\n            this._showOverlay(),\n            this._showDrawer(),\n        ] ).then( () => {\n            this._$element.trigger('offcanvas-show', this);\n            return this;\n        } );\n    }\n    /**\n     * Hides offcanvas.\n     * @return {Promise<Offcanvas>} Promise that resolves after offcanvas is hidden.\n     */\n    public hide(): Promise<Offcanvas> {\n        $( 'body, html' ).removeClass( 'no-scroll' );\n        this._$trigger.removeClass( `${this._options.triggerClassName}--active` );\n        return Promise.all( [\n            this._hideOverlay(),\n            this._hideDrawer(),\n        ] ).then( () => {\n            this._$element.trigger('offcanvas-hide', this);\n            return this;\n        } );\n    }\n    /**\n     * Shows overlay.\n     * @return {Promise<Offcanvas>} Promise that resolves after overlay is shown.\n     */\n    protected _showOverlay(): Promise<Offcanvas>  {\n        return new Promise( resolve => {\n            this._$overlay.addClass( `${this._options.className}__overlay--visible` );\n            setTimeout(\n                () => resolve( this ),\n                this._options.overlayTransitionDuration,\n            );\n        });\n    }\n    /**\n     * Hides overlay.\n     * @return {Promise<Offcanvas>} Promise that resolves after offcanvas is hidden.\n     */\n    protected _hideOverlay(): Promise<Offcanvas>  {\n        return new Promise( resolve => {\n            this._$overlay.removeClass( `${this._options.className}__overlay--visible` );\n            setTimeout(\n                () => resolve( this ),\n                this._options.overlayTransitionDuration,\n            );\n        });\n    }\n    /**\n     * Shows offcanvas drawer.\n     * @return {Promise<Offcanvas>} Promise that resolves after offcanvas drawer is shown.\n     */\n    protected _showDrawer(): Promise<Offcanvas> {\n        return new Promise( resolve => {\n            this._$drawer.addClass( `${this._options.className}__drawer--visible` );\n            setTimeout(\n                () => resolve( this ),\n                this._options.drawerTransitionDuration,\n            );\n        });\n    }\n    /**\n     * Hides offcanvas drawer.\n     * @return {Promise<Offcanvas>} Promise that resolves after offcanvas drawer is hidden.\n     */\n    protected _hideDrawer(): Promise<Offcanvas> {\n        return new Promise( resolve => {\n            this._$drawer.removeClass( `${this._options.className}__drawer--visible` );\n            setTimeout(\n                () => resolve( this ),\n                this._options.drawerTransitionDuration,\n            );\n        });\n    }\n    /**\n     * Attaches event listeners.\n     */\n    protected _addEventListeners(): void {\n        this._eventListeners.triggerClick = () => this.toggle();\n        this._$trigger.on( 'click', this._eventListeners.triggerClick );\n\n        if ( this._options.closeOnBlur ) {\n            this._eventListeners.overlayClick = () => this.hide();\n            this._$overlay.on( 'click', this._eventListeners.overlayClick );\n        }\n    }\n    /**\n     * Removes event listeners.\n     */\n    protected _removeEventListeners(): void {\n        this._$trigger.off( 'click', this._eventListeners.triggerClick );\n        this._$overlay.off( 'click', this._eventListeners.overlayClick );\n    }\n}\n"],"names":[],"mappings":"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"}