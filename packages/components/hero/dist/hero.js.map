{"version":3,"file":null,"sources":["../../../utilities/breakpoint/src/breakpoint.ts","../../teaser/src/teaser.ts","../src/hero.ts"],"sourcesContent":["/**\n * Breakpoint utility for sharing breakpoints between CSS and JS.\n */\n\n/**\n * Converts dash-case to camelCase.\n * @type {Function}\n */\nconst camelCase: Function = ( input: string ): string => {\n    return input.toLowerCase().replace( /-(.)/g, function( match: string, group: string ): string {\n        return group.toUpperCase();\n    } );\n};\n\n/**\n * Returns object containign available breakpoints.\n * @return {Object} Object containing avaliable breakpoints in shape { breakpointName: pixelsNumber }\n */\nconst getAvaliableBreakpoints: Function = (): Object => JSON.parse( window.getComputedStyle( body, ':before' )\n    .getPropertyValue( 'content' ).slice( 1, -1 ).replace( /\\\\\"/g, '\"' ) );\n\n/**\n * Returs current breakpoint set by CSS.\n * @return {number} Current breakpoint in number of pixels.\n */\nconst getCurrentBreakpoint: Function = (): number => +window.getComputedStyle( body, ':after' )\n    .getPropertyValue( 'content' ).replace( /\"/g, '' );\n\nconst body: HTMLElement = document.querySelector( 'body' );\n/**\n * Module cache to export.\n * @type {Object}\n */\nconst breakpoint: any = {\n    current: getCurrentBreakpoint(),\n};\n\n/**\n * Available breakpoints cache.\n */\nconst breakpoints: Object = getAvaliableBreakpoints();\n// Extend breakpoint module with available breakpoint keys converted to camelCase.\nObject.keys( breakpoints ).forEach( ( breakpointName: string ): void => {\n    breakpoint[ camelCase( breakpointName ) ] = breakpoints[ breakpointName ];\n});\n\n// Let's check if we can register passive resize event for better performance.\nlet passiveOption: any = undefined;\ntry {\n    const opts: any = Object.defineProperty( {}, 'passive', {\n        get: function(): void {\n            passiveOption = { passive: true };\n        },\n    } );\n    window.addEventListener( 'test', null, opts );\n} catch (e) {}\n\n// Update current breakpoint on every resize.\nwindow.addEventListener( 'resize', () => {\n    breakpoint.current = getCurrentBreakpoint();\n}, passiveOption );\n\nexport default breakpoint;\n","import $ from 'jquery';\nimport Swiper from 'Swiper';\n\n/*\n* Product teaser\n*/\n/**\n * Creates new teaser object on given element with provided settings.\n * @param  {jQuery} $element jQuery element that contains complete outline for teaser.\n * Provided element should contain \".{teaserName}__wrapper\" element.\n * @param  {Object} settings Custom settings that will be passed along to Swiper.\n * @return {Object} New teaser object instance.\n */\nconst csTeaser: any = function( $element: any, settings: any ): void {\n    /**\n     * Required variables initialization.\n     */\n    settings = settings || {};\n    const teaser: any = this;\n    const teaserName: string = settings.teaserName ? settings.teaserName : 'cs-teaser';\n    const teaserClass: string = `.${teaserName}`;\n    const $teaserWrapper: any = $element.find( `${teaserClass}__wrapper` );\n    const paginationName: string = settings.paginationName ? settings.paginationName : `${teaserName}__pagination`;\n    const fractionPaginationSeparator: string = settings.fractionPaginationSeparator ? settings.fractionPaginationSeparator : '/';\n    /**\n     * Holds current Swiper instance.\n     */\n    let swiperInstance: any;\n\n    /**\n     * Tells if swiper was destroyed.\n     */\n    let destroyed: any;\n\n    /**\n     * Attaches component to HTML element.\n     */\n    $element.data( teaserName, this );\n\n    /**\n     * Tells if teaser should have dynamic or fixed number of visible slides.\n     * By default teaser will adjust number of visible slides according to it's\n     * parrent width. You can change this behaviour by specyfying custom settings.slidesPerView\n     * value, e.g. when settings.slidesPerView = 1 teaser will always show only one slide.\n     * @type {Boolean}\n     */\n    let dynamicNumOfSlides: any = !settings.slidesPerView || settings.slidesPerView === 'auto';\n\n    /**\n     * Contains current settings of slider.\n     */\n    let currentSettings: any;\n    /**\n     * Default settings for Swiper.\n     * @type {Object}\n     */\n    const defaultSettings: any = {\n        slideClass: `${teaserName}__slide`,\n        slideActiveClass: `${teaserName}__slide--active`,\n        slideVisibleClass: `${teaserName}__slide--visible`,\n        slideDuplicateClass: `${teaserName}__slide--clone`,\n        slideNextClass: `${teaserName}__slide--next`,\n        slidePrevClass: `${teaserName}__slide--prev`,\n        wrapperClass: `${teaserName}__slides`,\n        nextButton: $element.find( `${teaserClass}__nav--next` )[ 0 ],\n        prevButton: $element.find( `${teaserClass}__nav--prev` )[ 0 ],\n        buttonDisabledClass: `${teaserName}__nav--disabled`,\n        pagination: $element.find( `.${paginationName}` ),\n        /**\n         * Maximum number of groups that will be still visible as dots.\n         * If you want pagination to always be dots you can either don't add\n         * .${teaserName}__numbers element in HTML or set this to something big.\n         * @type {number}\n         */\n        paginationBreakpoint: 5,\n        onlyBulletPagination: false,\n        bulletClass: `${paginationName}-item`,\n        bulletActiveClass: `${paginationName}-item--active`,\n        paginationCurrentClass: `${teaserName}__number--current`,\n        paginationTotalClass: `${teaserName}__number--total`,\n        paginationClickable: true,\n        spaceBetween: 20,   // Gap between slides.\n        slideMinWidth: 200,  // Minimum width of a slider.\n        calculateSlides: true,\n        maxSlidesPerView: null,\n        watchSlidesVisibility: true,\n        paginationBulletRender( swiper: any, index: number, className: string ): Object {\n            return `<li class=\"${className}\">\n                <button class=\"${paginationName}-button\">${( index + 1 )}</button></li>`;\n        },\n        paginationFractionRender( swiper: any, currentClassName: string, totalClassName: string ): Object {\n            return `<span class=\"${teaserName}__number ${currentClassName}\"></span> ${fractionPaginationSeparator} <span class=\"${teaserName}__number ${totalClassName}\"></span>`;\n        },\n    };\n\n    currentSettings = $.extend( defaultSettings, settings );\n\n    /**\n     * Calculates number of slides that should be visible according to teaser's wrapper width.\n     * @return {number} Number of slides.\n     */\n    const calculateSlidesNumber: any = function(): number {\n        const slidesNumber: number = Math.floor( $teaserWrapper.innerWidth() / ( currentSettings.slideMinWidth + currentSettings.spaceBetween ) );\n\n        const maxSlidesAllowed: number = parseInt( currentSettings.maxSlidesPerView, 10 );\n\n        if ( slidesNumber < maxSlidesAllowed ) {\n            return slidesNumber;\n        } else {\n            return maxSlidesAllowed;\n        }\n    };\n\n    if ( dynamicNumOfSlides && currentSettings.calculateSlides ) {\n        currentSettings.slidesPerView =\n            currentSettings.slidesPerGroup = calculateSlidesNumber();\n    }\n\n    /**\n     * Updates slider sizing by adjusting number of visible slides and pagination.\n     */\n    const updateSliderSizing: any = function(): void {\n        if ( !$element.is( ':visible' ) ) {\n            return null;\n        }\n\n        if ( dynamicNumOfSlides && currentSettings.calculateSlides ) {\n            currentSettings.slidesPerView =\n                currentSettings.slidesPerGroup = calculateSlidesNumber();\n        }\n\n        swiperInstance.params = $.extend( swiperInstance.params, currentSettings );\n    };\n\n    const postInit: any = function(): void {\n        if ( ( swiperInstance.originalParams.slidesPerView !== 1 || swiperInstance.params.calculateSlides ) && !swiperInstance.params.onlyBulletPagination ) {\n\n            const totalSlidesNumber: number = swiperInstance.slides.length;\n            const totalGroupNumber: number = Math.ceil( totalSlidesNumber / swiperInstance.params.slidesPerGroup );\n\n            if ( totalGroupNumber > swiperInstance.params.paginationBreakpoint ) {\n                swiperInstance.params.paginationType = 'fraction';\n            } else {\n                swiperInstance.params.paginationType = 'bullets';\n            }\n        }\n    };\n\n    swiperInstance = new Swiper( $element.find( `${teaserClass}__wrapper` ), currentSettings );\n    destroyed = false;\n    postInit();\n    swiperInstance.update();\n\n    $( window ).on( 'resize', function(): void {\n        if ( !destroyed ) {\n            updateSliderSizing();\n            postInit();\n            swiperInstance.update();\n        }\n    } );\n\n    /**\n     * Returns Swiper object.\n     * @return {Swiper} Swiper object.\n     */\n    teaser.getSwiper = function(): void {\n        return swiperInstance;\n    };\n\n    /**\n     * Destroyes teaser.\n     */\n    teaser.destroy = function(): void {\n        swiperInstance.destroy();\n        destroyed = true;\n    };\n};\n\nexport default csTeaser;\n","import $ from 'jquery';\n\nimport breakpoint from '../../../utilities/breakpoint/src/breakpoint';\nimport csTeaser from '../../teaser/src/teaser';\n\n/**\n * component options interface.\n * Please refer to swiper documentation and our teaser component for more options and callbacks\n */\ninterface HeroOptions {\n    /**\n     * HTML Class of the component\n     * @type {string}\n     * @default 'cs-products-promo'\n     */\n    teaserName?: string;\n\n    /**\n     * Slides per viewport\n     * @type {string: 'auto' / number}\n     * @default 'auto'\n     */\n    slidesPerView?: any;\n\n    /**\n     * Space between slides (in px)\n     * @type {number}\n     * @default 10\n     */\n    spaceBetween?: number;\n\n    /**\n     * Tells if slides should be centered relative to viewport\n     * @type {boolean}\n     * @default true\n     */\n    centeredSlides?: boolean;\n\n    /**\n     * Autoplay in miliseconds\n     * @type {number}\n     * @default 5000\n     */\n    autoplay?: number;\n\n    /**\n     * Tells component if height of slider should be automatically adjusted every slide\n     * to the height of the highest visible slide\n     * or if false, height will be set permanently to the height of the highest slide in whole component\n     * @type {boolean}\n     * @default true\n     */\n    autoHeight?: number;\n\n    /**\n     * Allows to set point where pagination is a set of bullets or fraction type\n     * @type {number}\n     * @default 50\n     */\n    paginationBreakpoint?: number;\n\n    /**\n     * If prev/next slide is visible, tells if click on any of them should swiper to it\n     * @type {boolean}\n     * @default true\n     */\n    slideToClickedSlide?: boolean;\n\n    /**\n     * Stop autoplay on any interaction.\n     * Hover pauses autoplay, while any click inside hero will stop it permanently\n     * @type {boolean}\n     * @default true\n     */\n    pauseAutoplayOnHover?: boolean;\n\n    /**\n     * Tells if slides should be looped\n     * @type {boolean}\n     * @default true\n     */\n    loop?: boolean;\n\n    /**\n     * Tells if swiper should automatically calculate slides based on width of slides\n     * @type {boolean}\n     * @default false\n     */\n    calculateSlides: boolean;\n\n    /**\n     * Tells if swiper should automatically round decimals in pixels\n     * @type {boolean}\n     * @default true\n     */\n    roundLengths: boolean;\n\n    callbacks?: {\n        /**\n         * Fires right after hero has been initialized (once)\n         * @type {function}\n         */\n        onInit?: any;\n    };\n};\n\nexport default class Hero {\n    protected _$element: JQuery;\n    protected _instance: any;\n    protected options: HeroOptions;\n    protected _swiperDefaults: any;\n\n    /**\n     * Creates new Hero component with optional settings.\n     * @param {$element} Optional, element to be initialized as Hero component\n     * @param {options}  Optional settings object.\n     */\n    public constructor( $element?: JQuery, options?: HeroOptions ) {\n        const _this: any = this;\n        const teaserName: string = ( options && options.teaserName ) || 'cs-hero';\n        const pauseAutoplayOnHover: boolean = ( options && options.pauseAutoplayOnHover ) ? options.pauseAutoplayOnHover : true;\n\n        this._$element = $element || $( `.${this._options.teaserName}` );\n\n        this._swiperDefaults = {\n            teaserName: teaserName,\n            slidesPerView: 'auto',\n            spaceBetween: 10,\n            centeredSlides: true,\n            autoplay: 5000,\n            autoHeight: true,\n            paginationBreakpoint: 50,\n            slideToClickedSlide: true,\n            loop: true,\n            calculateSlides: false,\n            roundLengths: true,\n            autoplayDisableOnInteraction: true,\n            pauseAutoplayOnHover: pauseAutoplayOnHover,\n            onInit( swiper: any ): void {\n                if ( pauseAutoplayOnHover ) {\n                    swiper.container.parents( `.${teaserName}` ).on( {\n                        mouseenter(): void {\n                            if ( _this._instance ) {\n                                swiper.pauseAutoplay();\n                                swiper.emit( 'onAutoplayPause', swiper );\n                            }\n                        },\n                        mouseleave(): void {\n                            if ( swiper.autoplayPaused && swiper.autoplaying && _this._instance ) {\n                                swiper.stopAutoplay();\n                                swiper.startAutoplay();\n                                swiper.emit( 'onAutoplayResume', swiper );\n                            }\n                        },\n                    } );\n                }\n\n                if ( options && options.callbacks && options.callbacks.onInit && typeof options.callbacks.onInit === 'function' ) {\n                    options.callbacks.onInit( swiper );\n                }\n            },\n        };\n\n        this._options = $.extend ( true, this._swiperDefaults, options );\n        this._options.destroyForMobile = ( this._$element.hasClass( `${teaserName}--as-list-mobile` ) || this._$element.hasClass( `${teaserName}--hidden-mobile` ) ) ? true : false;\n\n        if ( this._$element.find( `.${this._options.teaserName}__slide` ).length > 1 ) {\n            if ( this._options.destroyForMobile ) {\n                this._toggleMobileHeros();\n\n                $( window ).on( 'resize', function(): void {\n                    _this._toggleMobileHeros();\n                } );\n            } else {\n                this._initHeros();\n            }\n        } else {\n            this._$element.addClass( `${this._options.teaserName}--static` );\n        }\n    }\n\n    public getInstance(): any {\n        return this._instance;\n    }\n\n    /**\n     * Initializes heros\n     */\n    protected _initHeros(): void {\n        this._instance = new csTeaser( this._$element, this._options );\n    }\n\n    /**\n     * if mobileDisplayVariant was set to 'list' - initialize slider only for resolutions\n     * greater than mobile\n     */\n    protected _toggleMobileHeros(): any {\n        if ( $( window ).width() >= breakpoint.tablet ) {\n            if ( !this._instance ) {\n                this._initHeros();\n            }\n        } else {\n            if ( this._instance ) {\n                this._instance.destroy();\n                this._$element\n                    .find( `.${this._options.teaserName}__slides` ).removeAttr( 'style' )\n                    .find( `.${this._options.teaserName}__slide` ).removeAttr( 'style' );\n                this._instance = undefined;\n            }\n        }\n    }\n}\n"],"names":[],"mappings":"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"}