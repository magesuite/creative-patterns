{"version":3,"file":null,"sources":["../src/sticky-block.ts"],"sourcesContent":["import $ from 'jquery';\n\nexport default class StickyBlock {\n    protected _$element: JQuery;\n\n    /**\n     * Creates new StickyBlock component with optional settings.\n     * @param  {StickyBlockOptions} options  Optional settings object.\n     */\n    public constructor( $element: JQuery ) {\n        this._$el = $element || $( '.cs-sticky-block' );\n\n        this._initStickyBlock();\n    }\n\n    /**\n     * Destroys stickyBlock component's functionality.\n     * @param  {string} afterDestroyCssPosition  Optional CSS position after polyfill is destroyed.\n     */\n    public destroy( afterDestroyCssPosition?: String ): void {\n        Stickyfill.remove( this._$el[ 0 ] );\n        this._$el.css( 'position', afterDestroyCssPosition );\n    }\n\n    /**\n     * Rebuilds stickyBlock component.\n     * Call it after layout changes. \n     * Plugin launches it automatically after window resizes or device orientations changes.\n     */\n    public rebuild(): void {\n        Stickyfill.rebuild();\n    }\n\n    /**\n     * Initializes stickyBlock component's functionality.\n     */\n    protected _initStickyBlock(): void {\n        if ( Stickyfill && this._$el.lengthÂ ) {\n            this._$el.Stickyfill();\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAEe;;;;;IAOX,qBAAoB,QAAgB;QAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI,CAAC,CAAE,kBAAkB,CAAE,CAAC;QAEhD,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAMM,6BAAO,GAAd,UAAgB,uBAAgC;QAC5C,UAAU,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,UAAU,EAAE,uBAAuB,CAAE,CAAC;KACxD;;;;;;IAOM,6BAAO,GAAd;QACI,UAAU,CAAC,OAAO,EAAE,CAAC;KACxB;;;;IAKS,sCAAgB,GAA1B;QACI,IAAK,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,MAAO,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;SAC1B;KACJ;IACL,kBAAC;CAAA,IAAA,AAED;;;;"}