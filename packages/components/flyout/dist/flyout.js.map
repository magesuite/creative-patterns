{"version":3,"file":null,"sources":["../src/flyout.ts"],"sourcesContent":["/* tslint:disable:no-unused-new object-literal-key-quotes max-classes-per-file */\nimport $ from 'jquery';\n\ninterface IFlyout {\n    toggleState(): void;\n    destroy(): void;\n}\n\ninterface IFlyoutSettings {\n    name: string;\n    /**\n     * Define type: flyout, dropdown or collapse\n     * @type {String}\n     */\n    type: string;\n    /**\n     * Define transition time in ms\n     * @type {Number}\n     */\n    transitionTime?: number;\n    /**\n     * Define if content is other than <name>__content\n     * @type {Jquery}\n     */\n    content?: JQuery;\n    /**\n     * Define if trigger is other than click\n     * @type {String}\n     */\n    trigger?: string;\n    /**\n     * Define if flyout/collapse should be shown from the beginning\n     * @type {Boolean}\n     */\n    initiallyShown?: boolean;\n    /**\n     * Collapse content can have min visible height but default is 0\n     * @type {String}\n     */\n    minHeight?: string;\n    /**\n     * On show callback - when show transition starts\n     * @type {any}\n     */\n    onShow?: any;\n    /**\n     * On show callback - when show transition ends\n     * @type {any}\n     */\n    onShowCompleted?: any;\n    /**\n     * On show callback - when hide transition starts\n     * @type {any}\n     */\n    onHide?: any;\n    /**\n     * On show callback - when hide transition ens\n     * @type {any}\n     */\n    onHideCompleted?: any;\n}\n\n/**\n * Interface for object storing Flyout event listeners.\n * Storing those references allow us to remove them when destructing the object.\n */\ninterface IFlyoutEventListeners {\n    resize?: any;\n    toggleState?: any;\n}\n\n/**\n * Flyout component is component which can fire show method (usually after clicking on its trigger).\n * Then contentTransitioningClass is added to its content and show event is triggered.\n * After transition time contentInClass class is added to content and shown event is triggered\n * On hide  transitioning class is added and in class is removed. After transition time transitioning class is removed.\n */\nclass Flyout implements IFlyout {\n    private name: string;\n    private _shown: boolean = false;\n    private settings: IFlyoutSettings;\n    private contentOutClass: string;\n    private contentInClass: string;\n    private contentTransitioningClass: string;\n    private triggerInClass: string;\n    private _isTransitioning: boolean = false;\n    private $element: JQuery;\n    private $triggers: JQuery;\n    private eventListeners: IFlyoutEventListeners = {};\n    private $content: JQuery;\n    private $close: JQuery;\n\n    /**\n     * Creates and initiates new Flyout component with settings.\n     * * @param  {JQuery} $element Optional component settings.\n     * @param  {IFlyoutSettings} settings Optional component settings.\n     */\n    public constructor( $element: JQuery, settings: IFlyoutSettings ) {\n\n        // Extend component's defaults with given optional settings.\n        this.settings = $.extend(\n            {\n                transitionTime: 350,\n                trigger: 'click',\n                shown: false,\n                minHeight: 0,\n                onShow: null,\n                onShowCompleted: null,\n                onHide: null,\n                onHideCompleted: null,\n            },\n            settings,\n        );\n\n        this.name = settings.name;\n        // Element is main wrapper for flyout/collapse\n        this.$element = $element;\n        this.$content = settings.content ? settings.content : $element.find(`.${this.name}__content`).first();\n        this.$triggers = this.$element.find( `.${this.name}__trigger` );\n        // Optional close for hide method\n        this.$close = this.$element.find( `.${this.name}__close` ).first();\n\n        // Define all needed classes\n        this.contentOutClass = `${this.name}__content--out`;\n        this.contentInClass = `${this.name}__content--in`;\n        this.contentTransitioningClass = `${this.name}__content--transitioning`;\n        this.triggerInClass = `${this.name}__trigger--in`;\n\n        // Attach all of the event listeners.\n        this.attachEventListeners();\n\n        // Store Component inside data of element\n        this.$element.data( `${this.name}-instance`, this );\n\n        // Show initial in\n        if ( this.settings.initiallyShown === true ) {\n            this.show();\n        }\n\n    }\n\n    /**\n     * Destroys component, removes all event listeners.\n     */\n    public destroy(): void {\n        // Assign reference to allow better minification.\n        const eventListeners: IFlyoutEventListeners = this.eventListeners;\n        // Remove events\n        this.$triggers.off( 'click', eventListeners.toggleState );\n        this.$close.off( 'click', eventListeners.toggleState );\n        $( document ).off( 'debouncedresize', eventListeners.resize );\n    }\n\n    /**\n     * Toggles flyout state between shown and hidden.\n     */\n    public toggleState(): void {\n        if ( this._shown === false ) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    /**\n     * Perform show action if element is not transitioning at the moment.\n     * Remove class out for content and add class in. Add aria-expanded true for trigger\n     * Set transitioning flag to true.\n     * If is collapse type calculate height\n     * Trigger event show\n     * Trigger method showComplete after transition time\n     */\n    protected show(): void {\n        if ( this._isTransitioning || this.$content.hasClass( this.contentInClass ) || this._shown === true ) {\n            return;\n        }\n\n        this.$content.removeClass( this.contentOutClass );\n        this.$content.addClass( this.contentInClass );\n        this.$triggers.addClass(this.triggerInClass);\n        this.$triggers.prop( 'aria-expanded', true );\n        this._isTransitioning = true;\n\n        if ( this.settings.type === 'collapse' ) {\n            // Let scrollHeight: number = this.$content[0].scrollHeight;\n            // Animation can be added here\n        }\n\n        // Trigger show event and callback\n        this.$element.trigger( `${this.name}.show` );\n\n        if ( this.settings.onShow ) {\n            this.settings.onShow();\n        }\n\n        setTimeout( () => this.showComplete(), this.settings.transitionTime );\n\n        // Add overlay if it is flyout\n        if ( this.settings.type === 'flyout' ) {\n            // TO DO\n        }\n\n    }\n\n    /**\n     * Trigger shown event\n     * Set transitioning flag to false. Set shown flag to true\n     */\n    protected showComplete(): void {\n        this._isTransitioning = false;\n\n        // Trigger show completed event and callback\n        this.$element.trigger( `${this.name}.shown` );\n\n        if ( this.settings.onShowCompleted ) {\n            this.settings.onShowCompleted();\n        }\n\n        this._shown = true;\n    }\n\n    /**\n     * Perform hide action if element is not transitioning at the moment.\n     * Remove class in for content and trigger. Add class transitioning for content. Add aria-expanded false for trigger\n     * Set transitioning flag to true.\n     * If is collapse type calculate height\n     * Trigger event hide\n     * Trigger method hideComplete after transition time\n     */\n    protected hide(): void {\n        if (this._isTransitioning || this.$content.hasClass( this.contentTransitioningClass ) || this._shown === false ) {\n            return;\n        }\n\n        this.$content.addClass( this.contentTransitioningClass );\n        this.$content.removeClass( this.contentInClass );\n        this.$triggers.removeClass( this.triggerInClass );\n\n        this.$triggers.prop( 'aria-expanded', false );\n        this._isTransitioning = true;\n\n        if ( this.settings.type === 'collapse' ) {\n            // Let scrollHeight: number = this.$content.innerHeight();\n            // Animation can be added here\n        }\n\n        // Trigger hide event and callback\n        this.$element.trigger( `${this.name}.hide` );\n        if ( this.settings.onHide ) {\n            this.settings.onHide();\n        }\n\n        setTimeout(() => this.hideComplete(), this.settings.transitionTime );\n\n        // Remove overlay if it is flyout\n        if ( this.name === 'flyout' ) {\n            // TO DO\n        }\n    }\n\n    /**\n     * Trigger hidden event\n     * Set transitioning flag to false. Set shown flag to false\n     */\n    protected hideComplete(): void {\n        this.$content.removeClass( `${this.contentTransitioningClass}` ).addClass( this.contentOutClass );\n        this._isTransitioning = false;\n        this._shown = false;\n\n        // Trigger hide completed event and callback\n        this.$element.trigger( `${this.name}.hidden` );\n        if ( this.settings.onHideCompleted ) {\n            this.settings.onHideCompleted();\n        }\n        if ( this.settings.type === 'collapse' ) {\n            this.$content.css( {'height': '', 'max-height': this.settings.minHeight} );\n        }\n    }\n\n    /**\n     * Update width of flyout\n     */\n    protected closeOnClickOutside( event: Event): void {\n\n        if ( this._shown === false || this.settings.type === 'collapse' ) {\n            return;\n        }\n\n        if ( !$( event.currentTarget ).is( this.$element )) {\n            this.toggleState();\n        }\n    }\n\n    /**\n     * Attaches all needed event listeners for show / hide behaviour.\n     */\n    protected attachEventListeners(): void {\n        // Assign reference to allow better minification.\n        const eventListeners: IFlyoutEventListeners = this.eventListeners;\n\n        // Click on trigger to toggle component state\n        eventListeners.toggleState = this.toggleState.bind( this );\n        this.$triggers.on( 'click', eventListeners.toggleState );\n        this.$close.on( 'click', eventListeners.toggleState );\n        $( document ).on( 'click', this.closeOnClickOutside.bind( this ) );\n    }\n\n};\n\n/**\n * Initializes all flyouts on the page.\n */\nclass FlyoutCollection {\n\n    public constructor( settings: IFlyoutSettings ) {\n\n        $( `.${settings.name}` ).each( ( index: number, element: any ) => {\n            new Flyout( $( element ), settings );\n        } );\n    }\n}\n\nexport {Flyout};\nexport {IFlyout};\nexport {IFlyoutSettings};\n"],"names":[],"mappings":"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"}