{"version":3,"file":null,"sources":["../../../components/cc-component-configurator/src/cc-component-configurator.ts","../../../components/cc-paragraph-configurator/src/cc-paragraph-configurator.ts","../src/m2c-paragraph-configurator.ts"],"sourcesContent":["/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","/* tslint:disable:no-console */\n\nimport ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccParagraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"textarea-cfg-paragraph\" class=\"cs-input__label cs-input__label--look-top-align\">Paragraph:</label>\n            <textarea name=\"name\" v-model=\"configuration.paragraph\" id=\"textarea-cfg-paragraph\" class=\"cs-input__textarea\" placeholder=\"Your HTML here\" @change=\"onChange\"></textarea>\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        configuration: {\n            type: Object,\n            default: {\n                paragraph: '',\n            },\n        },\n    },\n};\n\nexport default ccParagraphConfigurator;\n","import ccParagraphConfigurator from '../../../components/cc-paragraph-configurator/src/cc-paragraph-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\nimport Vue from 'Vue';\n\n/**\n * M2C skin for Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cParagraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccParagraphConfigurator,\n    ],\n    template: `<form class=\"m2c-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        \n        <div class=\"m2c-paragraph-configurator__error\" v-text=\"tempConfiguration.errorMessage\" v-show=\"tempConfiguration.errorMessage\">\n        </div>\n\n        <div class=\"m2-input\">\n            <label for=\"input-cfg-id\" class=\"m2-input__label\">${$t( 'Identifier' )}:</label>\n            <input type=\"text\" name=\"cfg-id\" v-model=\"tempConfiguration.identifier\" id=\"input-cfg-id\" class=\"m2-input__input m2-input__input--limited-width\" @blur=\"stripSpaces( tempConfiguration.identifier )\" maxlength=\"30\">\n        </div>\n        <div class=\"m2-input\">\n            <label for=\"input-cfg-title\" class=\"m2-input__label\">${$t( 'Title' )}:</label>\n            <input type=\"text\" name=\"cfg-title\" v-model=\"tempConfiguration.title\" id=\"input-cfg-title\" class=\"m2-input__input m2-input__input--limited-width\" maxlength=\"100\">\n        </div>\n        <div class=\"m2-input\">\n            <label for=\"textarea-cfg-paragraph\" class=\"m2-input__label m2-input__label--look-top-align\">${$t( 'HTML' )}:</label>\n\n            <div class=\"buttons-set | m2c-paragraph-configurator__wysiwyg-buttons\">\n                <button type=\"button\" class=\"scalable action-show-hide\" id=\"toggle-wysiwyg\">${$t( 'Show / Hide Editor' )}</button>\n                <button type=\"button\" class=\"scalable action-add-widget plugin\" @click=\"openWidgetModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Widget' )}...</button>\n                <button type=\"button\" class=\"scalable action-add-image plugin\" @click=\"openMediaModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Image' )}...</button>\n                <button type=\"button\" class=\"scalable add-variable plugin\" @click=\"openMagentoVariablesModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Variable' )}...</button>\n            </div>\n\n            <textarea name=\"cfg-paragraph\" v-model=\"tempConfiguration.content\" id=\"textarea-cfg-paragraph\" class=\"m2-input__textarea | m2c-paragraph-configurator__textarea\"></textarea>\n        </div>\n    </form>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    blockId: '',\n                };\n            },\n        },\n        restToken: {\n            type: String,\n            default: '',\n        },\n        wysiwygConfig: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): void {\n        return {\n            /*\n             * This object if used to operate inside component. We want to bind data to inputs,\n             * but we don't need them to be saved in m2c component's config. Only ID is needed,\n             * since rest of data id fetched from database.\n             */\n            tempConfiguration: {\n                identifier: '',\n                title: '',\n                content: '',\n                errorMessage: '',\n            },\n\n            isEditorVisible: true,\n\n            // wysiwyg editor object\n            editor: undefined,\n        };\n    },\n    ready(): void {\n        // Check if wysiwygConfig was passed - means that editor is enabled in admin panel\n        if ( this.wysiwygConfig !== '' ) {\n            this.wysiwygCfg = JSON.parse( this.wysiwygConfig );\n            this.wysiwygCfg.height = '300px';\n        }\n\n        // Init loader and hide it\n        $( 'body' ).one().loadingPopup( {\n            timeout: false,\n        } ).trigger( 'hideLoadingPopup' );\n\n        // If ID is already provided (means we're in edit mode)\n        if ( this.configuration.blockId ) {\n            const component: any = this;\n\n            // Show loader before request\n            $( 'body' ).trigger( 'showLoadingPopup' );\n\n            // Send request to REST API to get CMS block data if in edit mode\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: 'get',\n                url: `${ window.location.origin }/rest/V1/cmsBlock/${this.configuration.blockId}`,\n            } ).then( ( response: any ): void => {\n\n                // Hide loader\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n\n                // Update components tempConfiguration\n                component.tempConfiguration.identifier = response.data.identifier;\n                component.tempConfiguration.title = response.data.title;\n                component.tempConfiguration.content = response.data.content;\n\n                // initialize customized WYSIWYG\n                if ( component.wysiwygCfg ) {\n                    component.initWysiwyg();\n                }\n\n            }, ( response: any ): void => {\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n            } );\n        } else {\n            // initialize customized WYSIWYG\n            if ( this.wysiwygCfg ) {\n                this.initWysiwyg();\n            }\n        }\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            const component: any = this;\n\n            // Construct data for REST API\n            const dataConstruct: any = {\n                block: {\n                    identifier: this.tempConfiguration.identifier,\n                    title: this.tempConfiguration.title,\n                    content: this.tempConfiguration.content,\n                    active: true,\n                },\n            };\n\n            // Show loader before request\n            $( 'body' ).trigger( 'showLoadingPopup' );\n\n            // Send request to REST API\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: this.configuration.blockId ? 'put' : 'post',\n                url: this.configuration.blockId ? `${ window.location.origin }/rest/V1/cmsBlock/${this.configuration.blockId}` : `${ window.location.origin }/rest/V1/cmsBlock`,\n                body: dataConstruct,\n            } ).then( ( response: any ): void => {\n\n                // If status is OK update component's configuration and run Save to save component data\n                if ( response.ok ) {\n                    component.configuration.blockId = response.data.id;\n\n                    // Hide loader\n                    $( 'body' ).trigger( 'hideLoadingPopup' );\n                    component.onSave();\n                }\n            }, ( response: any ): void => {\n                // if failed and response returned any message, put it into error div, else put default text\n                if ( response.message ) {\n                    component.tempConfiguration.errorMessage = response.data.message;\n                } else {\n                    component.tempConfiguration.errorMessage = $t( 'An error occured. Please try again later.' );\n                }\n\n                // Set headers back\n                Vue.http.headers.custom.Accept = 'text/html';\n\n                // Hide loader\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n            } );\n        },\n    },\n    methods: {\n        stripSpaces( str: string ): void {\n            const striped: string = str.split( ' ' ).join( '-' ).toLowerCase();\n            this.tempConfiguration.identifier = striped;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         */\n        openWidgetModal(): void {\n            widgetTools.openDialog( `${this.wysiwygCfg.widget_window_url}widget_target_id/textarea-cfg-paragraph` );\n        },\n        /* Opens modal with M2 built-in media uploader\n         */\n        openMediaModal(): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/textarea-cfg-paragraph`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n        /* Opens modal with M2 built-in variables\n         */\n        openMagentoVariablesModal(): void {\n            MagentovariablePlugin.loadChooser( `${window.location.origin}/admin/admin/system_variable/wysiwygPlugin/`, 'textarea-cfg-paragraph' );\n        },\n        initWysiwyg(): void {\n            const _this: any = this;\n\n            window.tinyMCE_GZ = window.tinyMCE_GZ || {};\n            window.tinyMCE_GZ.loaded = true;\n\n            require( [\n                'mage/translate',\n                'mage/adminhtml/events',\n                'm2cTinyMceWysiwygSetup',\n                'mage/adminhtml/wysiwyg/widget',\n            ], function(): void {\n                // Setup (this global variable is already set in constructor.phtml)\n                csWysiwygEditor = new m2cTinyMceWysiwygSetup( 'textarea-cfg-paragraph', _this.wysiwygCfg );\n\n                // Initialization\n                csWysiwygEditor.setup( 'exact' );\n                _this.isEditorVisible = true;\n\n                // Set listener for enable/disable editor button\n                Event.observe( 'toggle-wysiwyg', 'click', function(): void {\n                    csWysiwygEditor.toggle();\n                    _this.isEditorVisible = !_this.isEditorVisible;\n                }.bind( csWysiwygEditor ) );\n\n                // Set handlers for editor\n                const editorFormValidationHandler = csWysiwygEditor.onFormValidation.bind( csWysiwygEditor );\n                varienGlobalEvents.attachEventHandler( 'formSubmit', editorFormValidationHandler );\n                varienGlobalEvents.clearEventHandlers( 'open_browser_callback' );\n\n                // Add callback for editor's IMAGE button to open file uploader while clicked\n                varienGlobalEvents.attachEventHandler( 'open_browser_callback', csWysiwygEditor.openFileBrowser );\n            } );\n        },\n    },\n};\n\nexport default m2cParagraphConfigurator;\n"],"names":[],"mappings":"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"}