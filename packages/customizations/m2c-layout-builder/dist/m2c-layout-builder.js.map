{"version":3,"file":null,"sources":["../../../components/action-button/src/action-button.ts","../../../components/cc-component-brand-carousel-preview/src/cc-component-brand-carousel-preview.ts","../../../components/cc-component-button-preview/src/cc-component-button-preview.ts","../../../components/cc-component-category-links-preview/src/cc-component-category-links-preview.ts","../../../components/cc-component-headline-preview/src/cc-component-headline-preview.ts","../../../components/cc-component-image-teaser-preview/src/cc-component-image-teaser-preview.ts","../../../components/cc-component-hero-carousel-preview/src/cc-component-hero-carousel-preview.ts","../../../components/cc-component-paragraph-preview/src/cc-component-paragraph-preview.ts","../../../components/cc-component-product-carousel-preview/src/cc-component-product-carousel-preview.ts","../../../components/cc-component-product-grid-preview/src/cc-component-product-grid-preview.ts","../../../components/cc-component-separator-preview/src/cc-component-separator-preview.ts","../../../components/cc-component-static-cms-block-preview/src/cc-component-static-cms-block-preview.ts","../../../components/cc-component-actions/src/cc-component-actions.ts","../../../components/cc-component-adder/src/cc-component-adder.ts","../../../components/cc-component-placeholder/src/cc-component-placeholder.ts","../../../components/cc-layout-builder/src/cc-layout-builder.ts","../../../components/cc-component-configurator/src/cc-component-configurator.ts","../../../components/cc-paragraph-configurator/src/cc-paragraph-configurator.ts","../../m2c-paragraph-configurator/src/m2c-paragraph-configurator.ts","../src/m2c-layout-builder.ts"],"sourcesContent":["/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        },\n    },\n};\n\nexport default actionButton;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentBrandCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-brand-carousel-preview\">\n        <svg class=\"cc-component-brand-carousel-preview__arrow cc-component-brand-carousel-preview__arrow--left\">\n            <use xlink:href=\"#icon_dashboard-arrow-left\"></use>\n        </svg>\n\n        <ul class=\"cc-component-brand-carousel-preview__list\">\n            <template v-for=\"item in 6\">\n                <li class=\"cc-component-brand-carousel-preview__list-item\">\n                    <div class=\"cc-component-brand-carousel-preview__brand-wrapper\">\n                        <svg class=\"cc-component-brand-carousel-preview__brand\">\n                            <use xlink:href=\"#icon_component-cc-brand-logo\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-component-brand-carousel-preview__arrow cc-component-brand-carousel-preview__arrow--right\">\n            <use xlink:href=\"#icon_dashboard-arrow-right\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentBrandCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    label: string;\n    target: string;\n}\n\n/**\n * Button preview component.\n * This component is responsible for displaying preview of button component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentButtonPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-button-preview\">\n        <button class=\"cc-component-button-preview__button\" type=\"button\">{{ configuration.label }}</button>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentButtonPreview;\n","import $ from 'jquery';\n\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    main_category_id: string;\n    main_category_labels: string;\n    sub_categories_ids: string;\n    sub_categories_labels: string;\n    shownumbers: boolean;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentCategoryLinksPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-category-links-preview\">\n        <div class=\"cc-component-category-links-preview__wrapper\">\n            <h1 class=\"cc-component-category-links-preview__headline\">{{ configuration.main_category_labels[0] }}</h1>\n            <div class=\"cc-component-category-links-preview__content\">\n                <ul class=\"cc-component-category-links-preview__subcats\">\n                    <template v-for=\"(index, label) in configuration.sub_categories_labels\">\n                        <li class=\"cc-component-category-links-preview__subcat\" v-if=\"index < configuration.sub_categories_labels.length\">\n                            <span class=\"cc-component-category-links-preview__subcat-label\">{{ label }}</span>\n                        </li>\n                    </template>\n                </ul>\n\n                <div class=\"cc-component-category-links-preview__all-button\">\n                    <span class=\"cc-component-category-links-preview__all-button-text\">${ $t( 'All products' ) }</span>\n                </div>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentCategoryLinksPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    title: string;\n    subtitle: string;\n}\n\n/**\n * Headline preview component.\n * This component is responsible for displaying preview of headline component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeadlinePreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-headline-preview\">\n        <h1 class=\"cc-component-headline-preview__headline\">{{ configuration.title }}</h1>\n        <h2 class=\"cc-component-headline-preview__subheadline\">{{ configuration.subtitle }}</h2>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentHeadlinePreview;\n","import $ from 'jquery';\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teaserWidth: string;\n    items: [\n        {\n            image: string,\n            headline: string,\n            paragraph: string,\n            ctaLabel: string,\n            href: string,\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentImageTeaserPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-image-teaser-preview\" v-show=\"!isLoading\">\n        <div class=\"cc-component-image-teaser-preview__wrapper\">\n            <ul class=\"cc-component-image-teaser-preview__scene cc-component-image-teaser-preview__scene--{{ configuration.currentScenario.desktopLayout.id }}-in-row\" v-el:scene>\n                <template v-for=\"item in configuration.items\">\n                    <li class=\"cc-component-image-teaser-preview__item\" v-show=\"configuration.items[$index].image\">\n                        <img :src=\"configuration.items[$index].image\" class=\"cc-component-image-teaser-preview__item-image\">\n                        <div class=\"cc-component-image-teaser-preview__item-content\">\n                            <h2 class=\"cc-component-image-teaser-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-image-teaser-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-image-teaser-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-image-teaser-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </li>\n                </template>\n            </ul>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            $images.load( function(): void {\n                imagesCount--;\n                if ( !imagesCount ) {\n                    _this.isLoading = false;\n                    $images.each( function(): void {\n                        $( this ).addClass( 'cc-component-image-teaser-preview__item-image--border' );\n                    } );\n                }\n            } ).filter( function(): boolean { return this.complete; } ).load();\n        },\n    }\n};\n\nexport default ccComponentImageTeaserPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            ctaTarget: string,\n            displayVariant: string\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentHeroCarouselPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-hero-carousel-preview\">\n        <div v-bind:class=\"sceneClass\" v-el:scene>\n            <div class=\"cc-component-hero-carousel-preview__slide\" v-if=\"configuration.items.length > 1\">\n                <img :src=\"configuration.items[configuration.items.length - 1].image\" class=\"cc-component-hero-carousel-preview__image\">\n            </div>\n\n            <template v-for=\"(index, item) in configuration.items\">\n                <div class=\"cc-component-hero-carousel-preview__slide\" v-if=\"index < 2\">\n                    <img :src=\"configuration.items[$index].image\" class=\"cc-component-hero-carousel-preview__image\">\n                    <div class=\"cc-component-hero-carousel-preview__slide-content\" v-if=\"index == 0 || configuration.items.length == 1\">\n                        <div class=\"cc-component-hero-carousel-preview__thumbs\">\n                            <template v-for=\"(idx, slide) in configuration.items\">\n                                <img :src=\"configuration.items[idx].image\" class=\"cc-component-hero-carousel-preview__thumb\">\n                            </template>\n                        </div>\n                        <div class=\"cc-component-hero-carousel-preview__slide-content-info\">\n                            <h2 class=\"cc-component-hero-carousel-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-component-hero-carousel-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-component-hero-carousel-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-component-hero-carousel-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </template>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n    },\n    computed: {\n        sceneClass(): string {\n            if ( this.configuration.items.length > 1 ) {\n                return 'cc-component-hero-carousel-preview__scene';\n            }\n\n            return 'cc-component-hero-carousel-preview__scene cc-component-hero-carousel-preview__scene--single';\n        },\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            $images.load( function(): void {\n                imagesCount--;\n                if ( !imagesCount ) {\n                    _this.isLoading = false;\n                    $images.each( function(): void {\n                        $( this ).addClass( 'cc-component-hero-carousel-preview__image--border' );\n                    } );\n                }\n            } ).filter( function(): boolean { return this.complete; } ).load();\n        },\n    },\n};\n\nexport default ccComponentHeroCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    blockId: string;\n    title: string;\n}\n\n/**\n * Paragraph preview component.\n * This component is responsible for displaying preview of Paragraph component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentParagraphPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-paragraph-preview\">\n        <div class=\"cc-component-paragraph-preview__content\">\n            <svg class=\"cc-component-paragraph-preview__bg\">\n                <use xlink:href=\"#icon_component-paragraph-preview\"></use>\n            </svg>\n            <h2 class=\"cc-component-paragraph-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    }\n};\n\nexport default ccComponentParagraphPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    sort_by: string;\n    limit: number;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentProductCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-product-carousel-preview\">\n        <svg class=\"cc-component-product-carousel-preview__arrow cc-component-product-carousel-preview__arrow--left\">\n            <use xlink:href=\"#icon_dashboard-arrow-left\"></use>\n        </svg>\n\n        <ul class=\"cc-component-product-carousel-preview__list\">\n            <template v-for=\"item in 4\">\n                <li class=\"cc-component-product-carousel-preview__list-item\">\n                    <div class=\"cc-component-product-carousel-preview__product-wrapper\">\n                        <svg class=\"cc-component-product-carousel-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-component-product-carousel-preview__arrow cc-component-product-carousel-preview__arrow--right\">\n            <use xlink:href=\"#icon_dashboard-arrow-right\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentProductCarouselPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    order_by: string;\n    rows_desktop: number;\n    rows_tablet: number;\n    rows_mobile: number;\n    hero: any;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentProductGridPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-component-product-grid-preview\" v-show=\"!isLoading\" v-el:scene>\n        <div class=\"cc-component-product-grid-preview__hero\" v-if=\"configuration.hero.position == 'left' && configuration.hero.image.src\">\n            <img :src=\"configuration.hero.image.src\" class=\"cc-component-product-grid-preview__hero-image\">\n            <div class=\"cc-component-product-grid-preview__hero-content\">\n                <h2 class=\"cc-component-product-grid-preview__headline\" v-if=\"configuration.hero.headline\">{{ configuration.hero.headline }}</h2>\n                <h3 class=\"cc-component-product-grid-preview__subheadline\" v-if=\"configuration.hero.subheadline\">{{ configuration.hero.subheadline }}</h3>\n                <p class=\"cc-component-product-grid-preview__paragraph\" v-if=\"configuration.hero.paragraph\">{{ configuration.hero.paragraph }}</p>\n                <template v-if=\"configuration.hero.href\">\n                    <button type=\"button\" class=\"cc-component-product-grid-preview__button\" v-if=\"configuration.hero.button.label\">{{ configuration.hero.button.label }}</button>\n                </template>\n            </div>\n        </div>\n\n        <ul v-bind:class=\"itemsGridClass\">\n            <template v-for=\"item in getItemsCount()\">\n                <li class=\"cc-component-product-grid-preview__list-item\">\n                    <div class=\"cc-component-product-grid-preview__product-wrapper\">\n                        <svg class=\"cc-component-product-grid-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <div class=\"cc-component-product-grid-preview__hero\" v-if=\"configuration.hero.position == 'right' && configuration.hero.image.src\">\n            <img :src=\"configuration.hero.image.src\" class=\"cc-component-product-grid-preview__hero-image\">\n            <div class=\"cc-component-product-grid-preview__hero-content\">\n                <h2 class=\"cc-component-product-grid-preview__headline\" v-if=\"configuration.hero.headline\">{{ configuration.hero.headline }}</h2>\n                <h3 class=\"cc-component-product-grid-preview__subheadline\" v-if=\"configuration.hero.subheadline\">{{ configuration.hero.subheadline }}</h3>\n                <p class=\"cc-component-product-grid-preview__paragraph\" v-if=\"configuration.hero.paragraph\">{{ configuration.hero.paragraph }}</p>\n                <template v-if=\"configuration.hero.href\">\n                    <button type=\"button\" class=\"cc-component-product-grid-preview__button\" v-if=\"configuration.hero.button.label\">{{ configuration.hero.button.label }}</button>\n                </template>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    computed: {\n        itemsGridClass(): string {\n            if ( this.configuration.hero.position ) {\n                return `cc-component-product-grid-preview__list cc-component-product-grid-preview__list--${ this.configuration.hero.position }`;\n            }\n\n            return 'cc-component-product-grid-preview__list';\n        },\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $( this.$els.scene ).find( 'img' );\n            let imagesCount: number = $images.length;\n\n            if ( imagesCount ) {\n                $images.load( function(): void {\n                    imagesCount--;\n                    if ( !imagesCount ) {\n                        _this.isLoading = false;\n                    }\n                } ).filter( function(): boolean { return this.complete; } ).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n\n        getItemsCount(): number {\n            return this.configuration.hero.position ? 6 : 10;\n        }\n    },\n};\n\nexport default ccComponentProductGridPreview;\n","import $ from 'jquery';\n\n/**\n * Separator preview component.\n * This component is responsible for displaying preview of separator component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentSeparatorPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-separator-preview\">\n        <hr class=\"cc-component-separator-preview__separator\">\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentSeparatorPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    identifier: string;\n    title: string;\n}\n\n/**\n * CMS block preview component.\n * This component is responsible for displaying preview of CMS block component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentStaticCmsBlockPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-static-cms-block-preview\">\n        <div class=\"cc-component-static-cms-block-preview__content\">\n            <svg class=\"cc-component-static-cms-block-preview__bg\">\n                <use xlink:href=\"#icon_component-cms-block-preview\"></use>\n            </svg>\n            <h2 class=\"cc-component-static-cms-block-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n};\n\nexport default ccComponentStaticCmsBlockPreview;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' ),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import $ from 'jquery';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport ccComponentBrandCarouselPreview from '../../cc-component-brand-carousel-preview/src/cc-component-brand-carousel-preview';\nimport ccComponentButtonPreview from '../../cc-component-button-preview/src/cc-component-button-preview';\nimport ccComponentCategoryLinksPreview from '../../cc-component-category-links-preview/src/cc-component-category-links-preview';\nimport ccComponentHeadlinePreview from '../../cc-component-headline-preview/src/cc-component-headline-preview';\nimport ccComponentImageTeaserPreview from '../../cc-component-image-teaser-preview/src/cc-component-image-teaser-preview';\nimport ccComponentHeroCarouselPreview from '../../cc-component-hero-carousel-preview/src/cc-component-hero-carousel-preview';\nimport ccComponentParagraphPreview from '../../cc-component-paragraph-preview/src/cc-component-paragraph-preview';\nimport ccComponentProductCarouselPreview from '../../cc-component-product-carousel-preview/src/cc-component-product-carousel-preview';\nimport ccComponentProductGridPreview from '../../cc-component-product-grid-preview/src/cc-component-product-grid-preview';\nimport ccComponentSeparatorPreview from '../../cc-component-separator-preview/src/cc-component-separator-preview';\nimport ccComponentStaticCmsBlockPreview from '../../cc-component-static-cms-block-preview/src/cc-component-static-cms-block-preview';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\nimport template from './cc-layout-builder.tpl';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    type: string;\n    data?: any;\n}\n\n/**\n * Layout builder component.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst layoutBuilder: vuejs.ComponentOption = {\n    template: template,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n        'cc-component-brand-carousel-preview': ccComponentBrandCarouselPreview,\n        'cc-component-button-preview': ccComponentButtonPreview,\n        'cc-component-headline-preview': ccComponentHeadlinePreview,\n        'cc-component-image-teaser-preview': ccComponentImageTeaserPreview,\n        'cc-component-hero-carousel-preview': ccComponentHeroCarouselPreview,\n        'cc-component-category-links-preview': ccComponentCategoryLinksPreview,\n        'cc-component-static-cms-block-preview': ccComponentStaticCmsBlockPreview,\n        'cc-component-paragraph-preview': ccComponentParagraphPreview,\n        'cc-component-product-carousel-preview': ccComponentProductCarouselPreview,\n        'cc-component-product-grid-preview': ccComponentProductGridPreview,\n        'cc-component-separator-preview': ccComponentSeparatorPreview,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Initial component configuration encoded as JSON string.\n         */\n        componentsConfiguration: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should take IComponentInformation and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         */\n        editComponent: {\n            type: Function,\n            default: ( componentInfo: IComponentInformation ): IComponentInformation => componentInfo,\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         */\n        addComponent: {\n            type: Function,\n            default: (): IComponentInformation => undefined,\n        },\n    },\n    data(): any {\n        return {\n            components: [],\n        };\n    },\n    ready(): void {\n        // Set initial components configuration if provided.\n        this.components = this.componentsConfiguration ? JSON.parse( this.componentsConfiguration ) : [];\n        this.$dispatch( 'cc-layout-builder__update' );\n    },\n    methods: {\n        /**\n         * Returns components information currently stored within layout builder.\n         * @return {IComponentInformation[]} Components information array.\n         */\n        getComponentInformation(): IComponentInformation[] {\n            return JSON.parse(\n                JSON.stringify( this.components ),\n            );\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then this compoennt will be inserted before it.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        addComponentInformation( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.splice( index, 0, componentInfo );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then it will be overwritten.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        setComponentInformation( index: number, componentInfo: IComponentInformation ): void {\n            if ( componentInfo ) {\n                this.components.$set( index, componentInfo );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Creates new component and adds it to a specified index.\n         * This function calls callback specified by \"add-component\" property that\n         * should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         * @param {number} index New component's index in components array.\n         */\n        createNewComponent( index: number ): void {\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            const componentInfo: IComponentInformation = this.addComponent(\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.addComponentInformation( index, asyncComponentInfo );\n                },\n            );\n            this.addComponentInformation( index, componentInfo );\n        },\n        /**\n         * Initializes edit mode of component.\n         * This function invokes callback given by \"edit-component\" callback that\n         * should take current IComponentInformation as param and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         * @param {string} index: Component's index in array.\n         */\n        editComponentSettings( index: number ): void {\n            // Create a static, non-reactive copy of component data.\n            let componentInfo: IComponentInformation = JSON.parse(\n                JSON.stringify( this.components[ index ] ),\n            );\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with current component data and callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            componentInfo = this.editComponent(\n                componentInfo,\n                ( asyncComponentInfo: IComponentInformation ): void => {\n                    this.setComponentInformation( index, asyncComponentInfo );\n                },\n            );\n            this.setComponentInformation( index, componentInfo );\n        },\n        /**\n         * Moves component under given index up by swaping it with previous element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentUp( index: number ): void {\n            if ( index > 0 ) {\n                let previousComponent: IComponentInformation = this.components[ index - 1 ];\n                const $thisComponent: any = $( `#${ this.components[ index ].id }` );\n                const $prevComponent: any = $( `#${ this.components[ index - 1 ].id }` );\n\n                $thisComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevComponent.outerHeight( true ) ) }px )` );\n                $prevComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ $thisComponent.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    this.components.$set( index - 1, this.components[ index ] );\n                    this.components.$set( index, previousComponent );\n                    this.$dispatch( 'cc-layout-builder__update' );\n                    $thisComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                    $prevComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves component under given index down by swaping it with next element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentDown( index: number ): void {\n            if ( index < this.components.length - 1 ) {\n                let previousComponent: IComponentInformation = this.components[ index + 1 ];\n                const $thisComponent: any = $( `#${ this.components[ index ].id }` );\n                const $nextComponent: any = $( `#${ this.components[ index + 1 ].id }` );\n\n                $thisComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ $nextComponent.outerHeight( true ) }px )` );\n                $nextComponent.addClass( 'm2c-layout-builder__component--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisComponent.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    this.components.$set( index + 1, this.components[ index ] );\n                    this.components.$set(  index, previousComponent );\n                    this.$dispatch( 'cc-layout-builder__update' );\n                    $thisComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                    $nextComponent.removeClass( 'm2c-layout-builder__component--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Removes component and adder that is right after component from the DOM\n         * @param {number} index Component's index in array.\n         */\n        deleteComponent( index: number ): void {\n            if ( window.confirm( 'Are you sure you want to delete this item?' ) ) {\n                this.components.splice( index, 1 );\n                this.$dispatch( 'cc-layout-builder__update' );\n            }\n        },\n        /**\n         * Tells if component with given index is the first component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is first in array.\n         */\n        isFirstComponent( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if component with given index is the last component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is last in array.\n         */\n        isLastComponent( index: number ): boolean {\n            return index === this.components.length - 1;\n        },\n\n        transformComponentTypeToText( componentType: string ): string {\n            return componentType.replace( '-', ' ' );\n        },\n\n        isPossibleToEdit( componentType: string ): boolean {\n            return componentType === 'brand-carousel' || componentType === 'separator';\n        },\n    },\n};\n\nexport default layoutBuilder;\nexport { layoutBuilder, IComponentInformation };\n","/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","/* tslint:disable:no-console */\n\nimport ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccParagraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"textarea-cfg-paragraph\" class=\"cs-input__label cs-input__label--look-top-align\">Paragraph:</label>\n            <textarea name=\"name\" v-model=\"configuration.paragraph\" id=\"textarea-cfg-paragraph\" class=\"cs-input__textarea\" placeholder=\"Your HTML here\" @change=\"onChange\"></textarea>\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        configuration: {\n            type: Object,\n            default: {\n                paragraph: '',\n            },\n        },\n    },\n};\n\nexport default ccParagraphConfigurator;\n","import ccParagraphConfigurator from '../../../components/cc-paragraph-configurator/src/cc-paragraph-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\nimport Vue from 'Vue';\n\n/**\n * M2C skin for Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cParagraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccParagraphConfigurator,\n    ],\n    template: `<form class=\"m2c-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        \n        <div class=\"m2c-paragraph-configurator__error\" v-text=\"tempConfiguration.errorMessage\" v-show=\"tempConfiguration.errorMessage\">\n        </div>\n\n        <div class=\"m2-input\">\n            <label for=\"input-cfg-id\" class=\"m2-input__label\">${$t( 'Identifier' )}:</label>\n            <input type=\"text\" name=\"cfg-id\" v-model=\"tempConfiguration.identifier\" id=\"input-cfg-id\" class=\"m2-input__input m2-input__input--limited-width\" @blur=\"stripSpaces( tempConfiguration.identifier )\" maxlength=\"30\">\n        </div>\n        <div class=\"m2-input\">\n            <label for=\"input-cfg-title\" class=\"m2-input__label\">${$t( 'Title' )}:</label>\n            <input type=\"text\" name=\"cfg-title\" v-model=\"tempConfiguration.title\" id=\"input-cfg-title\" class=\"m2-input__input m2-input__input--limited-width\" maxlength=\"100\">\n        </div>\n        <div class=\"m2-input\">\n            <label for=\"textarea-cfg-paragraph\" class=\"m2-input__label m2-input__label--look-top-align\">${$t( 'HTML' )}:</label>\n\n            <div class=\"buttons-set | m2c-paragraph-configurator__wysiwyg-buttons\">\n                <button type=\"button\" class=\"scalable action-show-hide\" id=\"toggle-wysiwyg\">${$t( 'Show / Hide Editor' )}</button>\n                <button type=\"button\" class=\"scalable action-add-widget plugin\" @click=\"openWidgetModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Widget' )}...</button>\n                <button type=\"button\" class=\"scalable action-add-image plugin\" @click=\"openMediaModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Image' )}...</button>\n                <button type=\"button\" class=\"scalable add-variable plugin\" @click=\"openMagentoVariablesModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Variable' )}...</button>\n            </div>\n\n            <textarea name=\"cfg-paragraph\" v-model=\"tempConfiguration.content\" id=\"textarea-cfg-paragraph\" class=\"m2-input__textarea | m2c-paragraph-configurator__textarea\"></textarea>\n        </div>\n    </form>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    blockId: '',\n                    title: '',\n                };\n            },\n        },\n        restToken: {\n            type: String,\n            default: '',\n        },\n        wysiwygConfig: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): void {\n        return {\n            /*\n             * This object if used to operate inside component. We want to bind data to inputs,\n             * but we don't need them to be saved in m2c component's config. Only ID is needed,\n             * since rest of data id fetched from database.\n             */\n            tempConfiguration: {\n                identifier: '',\n                title: '',\n                content: '',\n                errorMessage: '',\n            },\n\n            isEditorVisible: true,\n\n            // wysiwyg editor object\n            editor: undefined,\n        };\n    },\n    ready(): void {\n        // Check if wysiwygConfig was passed - means that editor is enabled in admin panel\n        if ( this.wysiwygConfig !== '' ) {\n            this.wysiwygCfg = JSON.parse( this.wysiwygConfig );\n            this.wysiwygCfg.height = '300px';\n        }\n\n        // Init loader and hide it\n        $( 'body' ).one().loadingPopup( {\n            timeout: false,\n        } ).trigger( 'hideLoadingPopup' );\n\n        // If ID is already provided (means we're in edit mode)\n        if ( this.configuration.blockId ) {\n            const component: any = this;\n\n            // Show loader before request\n            $( 'body' ).trigger( 'showLoadingPopup' );\n\n            // Send request to REST API to get CMS block data if in edit mode\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: 'get',\n                url: `${ window.location.origin }/rest/V1/cmsBlock/${this.configuration.blockId}`,\n            } ).then( ( response: any ): void => {\n\n                // Hide loader\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n\n                // Update components tempConfiguration\n                component.tempConfiguration.identifier = response.data.identifier;\n                component.tempConfiguration.title = response.data.title;\n                component.tempConfiguration.content = response.data.content;\n                component.configuration.title = response.data.title;\n\n                // initialize customized WYSIWYG\n                if ( component.wysiwygCfg ) {\n                    component.initWysiwyg();\n                }\n\n            }, ( response: any ): void => {\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n            } );\n        } else {\n            // initialize customized WYSIWYG\n            if ( this.wysiwygCfg ) {\n                this.initWysiwyg();\n            }\n        }\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            const component: any = this;\n\n            // Construct data for REST API\n            const dataConstruct: any = {\n                block: {\n                    identifier: this.tempConfiguration.identifier,\n                    title: this.tempConfiguration.title,\n                    content: this.tempConfiguration.content,\n                    active: true,\n                },\n            };\n\n            // Show loader before request\n            $( 'body' ).trigger( 'showLoadingPopup' );\n\n            // Send request to REST API\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: this.configuration.blockId ? 'put' : 'post',\n                url: this.configuration.blockId ? `${ window.location.origin }/rest/V1/cmsBlock/${this.configuration.blockId}` : `${ window.location.origin }/rest/V1/cmsBlock`,\n                body: dataConstruct,\n            } ).then( ( response: any ): void => {\n\n                // If status is OK update component's configuration and run Save to save component data\n                if ( response.ok ) {\n                    component.configuration.blockId = response.data.id;\n                    component.configuration.title = response.data.title;\n\n                    // Hide loader\n                    $( 'body' ).trigger( 'hideLoadingPopup' );\n                    component.onSave();\n                }\n            }, ( response: any ): void => {\n                // if failed and response returned any message, put it into error div, else put default text\n                if ( response.message ) {\n                    component.tempConfiguration.errorMessage = response.data.message;\n                } else {\n                    component.tempConfiguration.errorMessage = $t( 'An error occured. Please try again later.' );\n                }\n\n                // Set headers back\n                Vue.http.headers.custom.Accept = 'text/html';\n\n                // Hide loader\n                $( 'body' ).trigger( 'hideLoadingPopup' );\n            } );\n        },\n    },\n    methods: {\n        stripSpaces( str: string ): void {\n            const striped: string = str.split( ' ' ).join( '-' ).toLowerCase();\n            this.tempConfiguration.identifier = striped;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         */\n        openWidgetModal(): void {\n            widgetTools.openDialog( `${this.wysiwygCfg.widget_window_url}widget_target_id/textarea-cfg-paragraph` );\n        },\n        /* Opens modal with M2 built-in media uploader\n         */\n        openMediaModal(): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/textarea-cfg-paragraph`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n        /* Opens modal with M2 built-in variables\n         */\n        openMagentoVariablesModal(): void {\n            MagentovariablePlugin.loadChooser( `${window.location.origin}/admin/admin/system_variable/wysiwygPlugin/`, 'textarea-cfg-paragraph' );\n        },\n        initWysiwyg(): void {\n            const _this: any = this;\n\n            window.tinyMCE_GZ = window.tinyMCE_GZ || {};\n            window.tinyMCE_GZ.loaded = true;\n\n            require( [\n                'mage/translate',\n                'mage/adminhtml/events',\n                'm2cTinyMceWysiwygSetup',\n                'mage/adminhtml/wysiwyg/widget',\n            ], function(): void {\n                // Setup (this global variable is already set in constructor.phtml)\n                csWysiwygEditor = new m2cTinyMceWysiwygSetup( 'textarea-cfg-paragraph', _this.wysiwygCfg );\n\n                // Initialization\n                csWysiwygEditor.setup( 'exact' );\n                _this.isEditorVisible = true;\n\n                // Set listener for enable/disable editor button\n                Event.observe( 'toggle-wysiwyg', 'click', function(): void {\n                    csWysiwygEditor.toggle();\n                    _this.isEditorVisible = !_this.isEditorVisible;\n                }.bind( csWysiwygEditor ) );\n\n                // Set handlers for editor\n                const editorFormValidationHandler = csWysiwygEditor.onFormValidation.bind( csWysiwygEditor );\n                varienGlobalEvents.attachEventHandler( 'formSubmit', editorFormValidationHandler );\n                varienGlobalEvents.clearEventHandlers( 'open_browser_callback' );\n\n                // Add callback for editor's IMAGE button to open file uploader while clicked\n                varienGlobalEvents.attachEventHandler( 'open_browser_callback', csWysiwygEditor.openFileBrowser );\n            } );\n        },\n    },\n};\n\nexport default m2cParagraphConfigurator;\n","import ccLayoutBuilder from '../../../components/cc-layout-builder/src/cc-layout-builder';\n\nimport m2cParagraphConfigurator from '../../m2c-paragraph-configurator/src/m2c-paragraph-configurator';\n\nimport $t from 'mage/translate';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport template from './m2c-layout-builder.tpl';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    type: string;\n    data?: any;\n}\n\n/**\n * Layout builder component - M2 implementation.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cLayoutBuilder: vuejs.ComponentOption = {\n    template,\n    mixins: [\n        ccLayoutBuilder,\n    ],\n    /**\n     * Get dependencies\n     */\n    components: {\n        'm2c-paragraph-configurator': m2cParagraphConfigurator,\n    },\n    methods: {\n        /* Removes component from M2C\n         * If it's paragraph that is about to be removed, asks if corresponding CMS Block shall be removed as well\n         * @param index {number} - index of the component in layoutBuilder\n         */\n        deleteComponent( index: number ): void {\n            const builder: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        const component: any = builder.components[ index ];\n\n                        builder.components.splice( index, 1 );\n\n                        if ( component.type === 'paragraph' ) {\n                            builder.deleteStaticBlock( component.data.blockId );\n                        }\n\n                        builder.$dispatch( 'cc-layout-builder__update' );\n                    },\n                },\n            } );\n        },\n\n        deleteStaticBlock( cmsBlockId: string ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Would you like to delete CMS Block related to this component (CMS Block ID: %s) ?' ).replace( '%s', cmsBlockId ),\n                actions: {\n                    confirm(): void {\n                        component.$dispatch( 'cc-layout-builder__cmsblock-delete-request', cmsBlockId );\n                    },\n                },\n            } );\n        },\n    },\n};\n\nexport default m2cLayoutBuilder;\nexport { m2cLayoutBuilder, IComponentInformation };\n"],"names":["template","ccLayoutBuilder"],"mappings":";;;;;;;;;;;AAAA;;;;;;AAMA,IAAM,YAAY,GAA0B;IACxC,QAAQ,EAAE,wGAEA;IACV,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;IACD,OAAO,EAAE;;;;;;QAML,QAAQ,YAAE,KAAY;YAClB,IAAI,CAAC,SAAS,CAAE,sBAAsB,EAAE,KAAK,CAAE,CAAC;SACnD;KACJ;CACJ,CAAC,AAEF;;ACtBA;;;;;AAKA,IAAM,+BAA+B,GAA0B;IAC3D,QAAQ,EAAE,ihCAoBH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;;;;QAID,SAAS,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;ACjDA;;;;;AAKA,IAAM,wBAAwB,GAA0B;IACpD,QAAQ,EAAE,2KAEH;IACP,KAAK,EAAE;;;;QAIH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;ACnBA;;;;;AAKA,IAAM,+BAA+B,GAA0B;IAC3D,QAAQ,EAAE,s/BAa4E,EAAE,CAAE,cAAc,CAAE,oFAInG;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;AC7CA;;;;;AAKA,IAAM,0BAA0B,GAA0B;IACtD,QAAQ,EAAE,6PAGH;IACP,KAAK,EAAE;;;;QAIH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;AClBA;;;;;AAKA,IAAM,6BAA6B,GAA0B;IACzD,QAAQ,EAAE,w+DAuBH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,SAAS,EAAE;YACP,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,KAAK;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IACD,OAAO,EAAE;;;;;QAKL,qBAAqB;YACjB,IAAM,KAAK,GAAQ,IAAI,CAAC;YACxB,IAAM,OAAO,GAAG,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YACnD,IAAI,WAAW,GAAW,OAAO,CAAC,MAAM,CAAC;YAEzC,OAAO,CAAC,IAAI,CAAE;gBACV,WAAW,EAAE,CAAC;gBACd,IAAK,CAAC,WAAY,EAAE;oBAChB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;oBACxB,OAAO,CAAC,IAAI,CAAE;wBACV,CAAC,CAAE,IAAI,CAAE,CAAC,QAAQ,CAAE,uDAAuD,CAAE,CAAC;qBACjF,CAAE,CAAC;iBACP;aACJ,CAAE,CAAC,MAAM,CAAE,cAAsB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,CAAC,IAAI,EAAE,CAAC;SACtE;KACJ;CACJ,CAAC,AAEF;;ACrEA;;;;;AAKA,IAAM,8BAA8B,GAA0B;IAC1D,QAAQ,EAAE,qhFAgCH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,SAAS,EAAE;YACP,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,KAAK;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IACD,QAAQ,EAAE;QACN,UAAU;YACN,IAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAE,EAAE;gBACvC,OAAO,2CAA2C,CAAC;aACtD;YAED,OAAO,6FAA6F,CAAC;SACxG;KACJ;IACD,OAAO,EAAE;;;;;QAKL,qBAAqB;YACjB,IAAM,KAAK,GAAQ,IAAI,CAAC;YACxB,IAAM,OAAO,GAAG,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YACnD,IAAI,WAAW,GAAW,OAAO,CAAC,MAAM,CAAC;YAEzC,OAAO,CAAC,IAAI,CAAE;gBACV,WAAW,EAAE,CAAC;gBACd,IAAK,CAAC,WAAY,EAAE;oBAChB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;oBACxB,OAAO,CAAC,IAAI,CAAE;wBACV,CAAC,CAAE,IAAI,CAAE,CAAC,QAAQ,CAAE,mDAAmD,CAAE,CAAC;qBAC7E,CAAE,CAAC;iBACP;aACJ,CAAE,CAAC,MAAM,CAAE,cAAsB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,CAAC,IAAI,EAAE,CAAC;SACtE;KACJ;CACJ,CAAC,AAEF;;ACtGA;;;;;AAKA,IAAM,2BAA2B,GAA0B;IACvD,QAAQ,EAAE,+YAOH;IACP,KAAK,EAAE;;;;QAIH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;AC5BA;;;;;AAKA,IAAM,iCAAiC,GAA0B;IAC7D,QAAQ,EAAE,gjCAoBH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;;;;QAID,SAAS,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;AC7CA;;;;;AAKA,IAAM,6BAA6B,GAA0B;IACzD,QAAQ,EAAE,6lGAyCH;IACP,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,SAAS,EAAE;YACP,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,QAAQ,EAAE;QACN,cAAc;YACV,IAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAS,EAAE;gBACpC,OAAO,sFAAqF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAW,CAAC;aACnI;YAED,OAAO,yCAAyC,CAAC;SACpD;KACJ;IACD,KAAK;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IACD,OAAO,EAAE;;;;;QAKL,qBAAqB;YACjB,IAAM,KAAK,GAAQ,IAAI,CAAC;YACxB,IAAM,OAAO,GAAG,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;YACnD,IAAI,WAAW,GAAW,OAAO,CAAC,MAAM,CAAC;YAEzC,IAAK,WAAY,EAAE;gBACf,OAAO,CAAC,IAAI,CAAE;oBACV,WAAW,EAAE,CAAC;oBACd,IAAK,CAAC,WAAY,EAAE;wBAChB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;qBAC3B;iBACJ,CAAE,CAAC,MAAM,CAAE,cAAsB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,CAAC,IAAI,EAAE,CAAC;aACtE;iBAAM;gBACH,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;aAC3B;SACJ;QAED,aAAa;YACT,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC;SACpD;KACJ;CACJ,CAAC,AAEF;;ACpHA;;;;;AAKA,IAAM,2BAA2B,GAA0B;IACvD,QAAQ,EAAE,8HAEH;IACP,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;ACdA;;;;;AAKA,IAAM,gCAAgC,GAA0B;IAC5D,QAAQ,EAAE,2aAOH;IACP,KAAK,EAAE;;;;QAIH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;SACf;;;;QAID,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC,AAEF;;ACvCA;;;;;;;;;;;AAWA,IAAM,gBAAgB,GAA0B;IAC5C,QAAQ,EAAE,6MAID;IACT,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,UAAE,KAAa,IAAc,OAAA,KAAK,CAAC,OAAO,CAAE,sBAAsB,EAAE,EAAE,CAAE,GAAA;SACnF;KACJ;CACJ,CAAC,AAEF;;AC7BA;;;;;AAMA,IAAM,cAAc,GAA0B;IAC1C,QAAQ,EAAE,8PAKH;IACP,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,YAAE,KAAa;gBACjB,OAAO,KAAK,CAAC,OAAO,CAAE,oBAAoB,EAAE,EAAE,CAAE,CAAC;aACpD;SACJ;;;;QAID,eAAe,EAAE;YACb,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,OAAO,EAAE;;;;;;QAML,iBAAiB,YAAE,KAAY;YAC3B,IAAI,CAAC,SAAS,CAAE,sCAAsC,EAAE,KAAK,CAAE,CAAC;YAChE,IAAK,OAAO,IAAI,CAAC,eAAe,KAAK,UAAW,EAAE;gBAC9C,IAAI,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC;aACjC;SACJ;KACJ;CACJ,CAAC,AAEF;;AC9CA;;;AAGA,IAAM,oBAAoB,GAAQ;IAC9B,QAAQ,EAAE,4JAIH;CACV,CAAC,AAEF;;;;ACqBA;;;;;;AAMA,IAAM,aAAa,GAA0B;IACzC,QAAQ,EAAE,QAAQ;;;;IAIlB,UAAU,EAAE;QACR,eAAe,EAAE,YAAY;QAC7B,oBAAoB,EAAE,cAAc;QACpC,sBAAsB,EAAE,gBAAgB;QACxC,0BAA0B,EAAE,oBAAoB;QAChD,qCAAqC,EAAE,+BAA+B;QACtE,6BAA6B,EAAE,wBAAwB;QACvD,+BAA+B,EAAE,0BAA0B;QAC3D,mCAAmC,EAAE,6BAA6B;QAClE,oCAAoC,EAAE,8BAA8B;QACpE,qCAAqC,EAAE,+BAA+B;QACtE,uCAAuC,EAAE,gCAAgC;QACzE,gCAAgC,EAAE,2BAA2B;QAC7D,uCAAuC,EAAE,iCAAiC;QAC1E,mCAAmC,EAAE,6BAA6B;QAClE,gCAAgC,EAAE,2BAA2B;KAChE;IACD,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,SAAS,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;;;;QAID,uBAAuB,EAAE;YACrB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;;;;;;QAMD,aAAa,EAAE;YACX,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAE,aAAoC,IAA6B,OAAA,aAAa,GAAA;SAC5F;;;;;;QAMD,YAAY,EAAE;YACV,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,cAA6B,OAAA,SAAS,GAAA;SAClD;KACJ;IACD,IAAI;QACA,OAAO;YACH,UAAU,EAAE,EAAE;SACjB,CAAC;KACL;IACD,KAAK;;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,uBAAuB,CAAE,GAAG,EAAE,CAAC;QACjG,IAAI,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;KACjD;IACD,OAAO,EAAE;;;;;QAKL,uBAAuB;YACnB,OAAO,IAAI,CAAC,KAAK,CACb,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,UAAU,CAAE,CACpC,CAAC;SACL;;;;;;;QAOD,uBAAuB,YAAE,KAAa,EAAE,aAAoC;YACxE,IAAK,aAAc,EAAE;gBACjB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,EAAE,aAAa,CAAE,CAAC;gBAClD,IAAI,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;aACjD;SACJ;;;;;;;QAOD,uBAAuB,YAAE,KAAa,EAAE,aAAoC;YACxE,IAAK,aAAc,EAAE;gBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,KAAK,EAAE,aAAa,CAAE,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;aACjD;SACJ;;;;;;;;QAQD,kBAAkB,YAAE,KAAa;YAAjC,iBAaC;;;;;;;YANG,IAAM,aAAa,GAA0B,IAAI,CAAC,YAAY,CAC1D,UAAE,kBAAyC;gBACvC,KAAI,CAAC,uBAAuB,CAAE,KAAK,EAAE,kBAAkB,CAAE,CAAC;aAC7D,CACJ,CAAC;YACF,IAAI,CAAC,uBAAuB,CAAE,KAAK,EAAE,aAAa,CAAE,CAAC;SACxD;;;;;;;;QAQD,qBAAqB,YAAE,KAAa;YAApC,iBAkBC;;YAhBG,IAAI,aAAa,GAA0B,IAAI,CAAC,KAAK,CACjD,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,UAAU,CAAE,KAAK,CAAE,CAAE,CAC7C,CAAC;;;;;;;YAOF,aAAa,GAAG,IAAI,CAAC,aAAa,CAC9B,aAAa,EACb,UAAE,kBAAyC;gBACvC,KAAI,CAAC,uBAAuB,CAAE,KAAK,EAAE,kBAAkB,CAAE,CAAC;aAC7D,CACJ,CAAC;YACF,IAAI,CAAC,uBAAuB,CAAE,KAAK,EAAE,aAAa,CAAE,CAAC;SACxD;;;;;QAKD,eAAe,YAAE,KAAa;YAA9B,iBAiBC;YAhBG,IAAK,KAAK,GAAG,CAAE,EAAE;gBACb,IAAI,mBAAiB,GAA0B,IAAI,CAAC,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC;gBAC5E,IAAM,gBAAc,GAAQ,CAAC,CAAE,MAAK,IAAI,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC,EAAK,CAAE,CAAC;gBACrE,IAAM,gBAAc,GAAQ,CAAC,CAAE,MAAK,IAAI,CAAC,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,EAAK,CAAE,CAAC;gBAEzE,gBAAc,CAAC,QAAQ,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,iBAAgB,CAAC,IAAI,CAAC,GAAG,CAAE,gBAAc,CAAC,WAAW,CAAE,IAAI,CAAE,CAAE,SAAO,CAAE,CAAC;gBACjK,gBAAc,CAAC,QAAQ,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,iBAAgB,gBAAc,CAAC,WAAW,CAAE,IAAI,CAAE,SAAO,CAAE,CAAC;gBAEpJ,UAAU,CAAE;oBACR,KAAI,CAAC,UAAU,CAAC,IAAI,CAAE,KAAK,GAAG,CAAC,EAAE,KAAI,CAAC,UAAU,CAAE,KAAK,CAAE,CAAE,CAAC;oBAC5D,KAAI,CAAC,UAAU,CAAC,IAAI,CAAE,KAAK,EAAE,mBAAiB,CAAE,CAAC;oBACjD,KAAI,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;oBAC9C,gBAAc,CAAC,WAAW,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,EAAE,CAAE,CAAC;oBAChG,gBAAc,CAAC,WAAW,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,EAAE,CAAE,CAAC;iBACnG,EAAE,GAAG,CAAE,CAAC;aACZ;SACJ;;;;;QAKD,iBAAiB,YAAE,KAAa;YAAhC,iBAiBC;YAhBG,IAAK,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAE,EAAE;gBACtC,IAAI,mBAAiB,GAA0B,IAAI,CAAC,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC;gBAC5E,IAAM,gBAAc,GAAQ,CAAC,CAAE,MAAK,IAAI,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC,EAAK,CAAE,CAAC;gBACrE,IAAM,gBAAc,GAAQ,CAAC,CAAE,MAAK,IAAI,CAAC,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,EAAK,CAAE,CAAC;gBAEzE,gBAAc,CAAC,QAAQ,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,iBAAgB,gBAAc,CAAC,WAAW,CAAE,IAAI,CAAE,SAAO,CAAE,CAAC;gBACpJ,gBAAc,CAAC,QAAQ,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,iBAAgB,CAAC,IAAI,CAAC,GAAG,CAAE,gBAAc,CAAC,WAAW,CAAE,IAAI,CAAE,CAAE,SAAO,CAAE,CAAC;gBAEjK,UAAU,CAAE;oBACR,KAAI,CAAC,UAAU,CAAC,IAAI,CAAE,KAAK,GAAG,CAAC,EAAE,KAAI,CAAC,UAAU,CAAE,KAAK,CAAE,CAAE,CAAC;oBAC5D,KAAI,CAAC,UAAU,CAAC,IAAI,CAAG,KAAK,EAAE,mBAAiB,CAAE,CAAC;oBAClD,KAAI,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;oBAC9C,gBAAc,CAAC,WAAW,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,EAAE,CAAE,CAAC;oBAChG,gBAAc,CAAC,WAAW,CAAE,0CAA0C,CAAE,CAAC,GAAG,CAAE,WAAW,EAAE,EAAE,CAAE,CAAC;iBACnG,EAAE,GAAG,CAAE,CAAC;aACZ;SACJ;;;;;QAKD,eAAe,YAAE,KAAa;YAC1B,IAAK,MAAM,CAAC,OAAO,CAAE,4CAA4C,CAAG,EAAE;gBAClE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;gBACnC,IAAI,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;aACjD;SACJ;;;;;;QAMD,gBAAgB,YAAE,KAAa;YAC3B,OAAO,KAAK,KAAK,CAAC,CAAC;SACtB;;;;;;QAMD,eAAe,YAAE,KAAa;YAC1B,OAAO,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;SAC/C;QAED,4BAA4B,YAAE,aAAqB;YAC/C,OAAO,aAAa,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;SAC5C;QAED,gBAAgB,YAAE,aAAqB;YACnC,OAAO,aAAa,KAAK,gBAAgB,IAAI,aAAa,KAAK,WAAW,CAAC;SAC9E;KACJ;CACJ,CAAC,AAEF,AACA;;AC/QA;;;;;AAKA,IAAM,uBAAuB,GAA0B;IACnD,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;;;;;QAKD,IAAI,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,cAAgB,OAAA,cAAiB,OAAA,SAAS,GAAA,GAAA;SACtD;;;;;QAKD,MAAM,EAAE;YACJ,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,cAAgB,OAAA,cAAiB,OAAA,SAAS,GAAA,GAAA;SACtD;;;;QAID,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,iBAAU;SACpB;KACJ;IACD,OAAO,EAAE;QACL,QAAQ,YAAE,KAAa;;YAEnB,IAAM,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,aAAa,CAAE,CAAE,CAAC;;YAErE,IAAI,CAAC,SAAS,CAAE,oCAAoC,EAAE,IAAI,CAAE,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;SACvB;QACD,MAAM,YAAE,KAAa;;YAEjB,IAAM,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,aAAa,CAAE,CAAE,CAAC;;YAErE,IAAI,CAAC,SAAS,CAAE,kCAAkC,EAAE,IAAI,CAAE,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;SACrB;KACJ;IACD,MAAM,EAAE;;;;QAIJ,iCAAiC;YAC7B,IAAK,IAAI,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC,MAAM,KAAK,CAAE,EAAE;gBAChE,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;SACJ;KACJ;CACJ,CAAC,AAEF,AACA;;ACnEA;AAIA;;;;;AAKA,IAAM,uBAAuB,GAA0B;IACnD,MAAM,EAAE;QACJ,uBAAuB;KAC1B;IACD,QAAQ,EAAE,0jBAMF;IACR,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;QACD,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE;gBACL,SAAS,EAAE,EAAE;aAChB;SACJ;KACJ;CACJ,CAAC,AAEF;;AC/BA;;;;;AAKA,IAAM,wBAAwB,GAA0B;IACpD,MAAM,EAAE;QACJ,uBAAuB;KAC1B;IACD,QAAQ,EAAE,uYAMkD,EAAE,CAAE,YAAY,CAAE,0XAIf,EAAE,CAAE,OAAO,CAAE,6WAI0B,EAAE,CAAE,MAAM,CAAE,8MAGxB,EAAE,CAAE,oBAAoB,CAAE,gKACe,EAAE,CAAE,eAAe,CAAE,iKACvB,EAAE,CAAE,cAAc,CAAE,wKACb,EAAE,CAAE,iBAAiB,CAAE,sQAKvJ;IACR,KAAK,EAAE;;;;QAIH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;YACZ,OAAO;gBACH,OAAO;oBACH,OAAO,EAAE,EAAE;oBACX,KAAK,EAAE,EAAE;iBACZ,CAAC;aACL;SACJ;QACD,SAAS,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;QACD,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;;QAED,eAAe,EAAE;YACb,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;SACd;KACJ;IACD,IAAI;QACA,OAAO;;;;;;YAMH,iBAAiB,EAAE;gBACf,UAAU,EAAE,EAAE;gBACd,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,YAAY,EAAE,EAAE;aACnB;YAED,eAAe,EAAE,IAAI;;YAGrB,MAAM,EAAE,SAAS;SACpB,CAAC;KACL;IACD,KAAK;;QAED,IAAK,IAAI,CAAC,aAAa,KAAK,EAAG,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC;SACpC;;QAGD,CAAC,CAAE,MAAM,CAAE,CAAC,GAAG,EAAE,CAAC,YAAY,CAAE;YAC5B,OAAO,EAAE,KAAK;SACjB,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;;QAGlC,IAAK,IAAI,CAAC,aAAa,CAAC,OAAQ,EAAE;YAC9B,IAAM,WAAS,GAAQ,IAAI,CAAC;;YAG5B,CAAC,CAAE,MAAM,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;;YAG1C,IAAI,CAAC,KAAK,CAAE;gBACR,OAAO,EAAE;oBACL,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,WAAS,CAAC,SAAS;iBACrC;gBACD,MAAM,EAAE,KAAK;gBACb,GAAG,EAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,0BAAsB,IAAI,CAAC,aAAa,CAAC,OAAS;aACpF,CAAE,CAAC,IAAI,CAAE,UAAE,QAAa;;gBAGrB,CAAC,CAAE,MAAM,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;;gBAG1C,WAAS,CAAC,iBAAiB,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClE,WAAS,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxD,WAAS,CAAC,iBAAiB,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC5D,WAAS,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;;gBAGpD,IAAK,WAAS,CAAC,UAAW,EAAE;oBACxB,WAAS,CAAC,WAAW,EAAE,CAAC;iBAC3B;aAEJ,EAAE,UAAE,QAAa;gBACd,CAAC,CAAE,MAAM,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;aAC7C,CAAE,CAAC;SACP;aAAM;;YAEH,IAAK,IAAI,CAAC,UAAW,EAAE;gBACnB,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;SACJ;KACJ;IACD,MAAM,EAAE;;;;QAIJ,iCAAiC;YAC7B,IAAM,SAAS,GAAQ,IAAI,CAAC;;YAG5B,IAAM,aAAa,GAAQ;gBACvB,KAAK,EAAE;oBACH,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU;oBAC7C,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;oBACnC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO;oBACvC,MAAM,EAAE,IAAI;iBACf;aACJ,CAAC;;YAGF,CAAC,CAAE,MAAM,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;;YAG1C,IAAI,CAAC,KAAK,CAAE;gBACR,OAAO,EAAE;oBACL,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,SAAS,CAAC,SAAS;iBACrC;gBACD,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,GAAG,MAAM;gBACnD,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,GAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,0BAAsB,IAAI,CAAC,aAAa,CAAC,OAAS,GAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,sBAAoB;gBAC/J,IAAI,EAAE,aAAa;aACtB,CAAE,CAAC,IAAI,CAAE,UAAE,QAAa;;gBAGrB,IAAK,QAAQ,CAAC,EAAG,EAAE;oBACf,SAAS,CAAC,aAAa,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;oBACnD,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;;oBAGpD,CAAC,CAAE,MAAM,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;oBAC1C,SAAS,CAAC,MAAM,EAAE,CAAC;iBACtB;aACJ,EAAE,UAAE,QAAa;;gBAEd,IAAK,QAAQ,CAAC,OAAQ,EAAE;oBACpB,SAAS,CAAC,iBAAiB,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;iBACpE;qBAAM;oBACH,SAAS,CAAC,iBAAiB,CAAC,YAAY,GAAG,EAAE,CAAE,2CAA2C,CAAE,CAAC;iBAChG;;gBAGD,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC;;gBAG7C,CAAC,CAAE,MAAM,CAAE,CAAC,OAAO,CAAE,kBAAkB,CAAE,CAAC;aAC7C,CAAE,CAAC;SACP;KACJ;IACD,OAAO,EAAE;QACL,WAAW,YAAE,GAAW;YACpB,IAAM,OAAO,GAAW,GAAG,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,WAAW,EAAE,CAAC;YACnE,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,OAAO,CAAC;SAC/C;;;QAGD,eAAe;YACX,WAAW,CAAC,UAAU,CAAK,IAAI,CAAC,UAAU,CAAC,iBAAiB,4CAAyC,CAAE,CAAC;SAC3G;;;QAGD,cAAc;YACV,mBAAmB,CAAC,UAAU,CAAK,IAAI,CAAC,eAAe,6CAA0C,EAC7F,MAAM,EACN,MAAM,EACN,EAAE,CAAE,gBAAgB,CAAE,EACtB;gBACI,MAAM,EAAE,IAAI;aACf,CACJ,CAAC;SACL;;;QAGD,yBAAyB;YACrB,qBAAqB,CAAC,WAAW,CAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,gDAA6C,EAAE,wBAAwB,CAAE,CAAC;SACzI;QACD,WAAW;YACP,IAAM,KAAK,GAAQ,IAAI,CAAC;YAExB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC;YAC5C,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;YAEhC,OAAO,CAAE;gBACL,gBAAgB;gBAChB,uBAAuB;gBACvB,wBAAwB;gBACxB,+BAA+B;aAClC,EAAE;;gBAEC,eAAe,GAAG,IAAI,sBAAsB,CAAE,wBAAwB,EAAE,KAAK,CAAC,UAAU,CAAE,CAAC;;gBAG3F,eAAe,CAAC,KAAK,CAAE,OAAO,CAAE,CAAC;gBACjC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;;gBAG7B,KAAK,CAAC,OAAO,CAAE,gBAAgB,EAAE,OAAO,EAAE;oBACtC,eAAe,CAAC,MAAM,EAAE,CAAC;oBACzB,KAAK,CAAC,eAAe,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC;iBAClD,CAAC,IAAI,CAAE,eAAe,CAAE,CAAE,CAAC;;gBAG5B,IAAM,2BAA2B,GAAG,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAE,eAAe,CAAE,CAAC;gBAC7F,kBAAkB,CAAC,kBAAkB,CAAE,YAAY,EAAE,2BAA2B,CAAE,CAAC;gBACnF,kBAAkB,CAAC,kBAAkB,CAAE,uBAAuB,CAAE,CAAC;;gBAGjE,kBAAkB,CAAC,kBAAkB,CAAE,uBAAuB,EAAE,eAAe,CAAC,eAAe,CAAE,CAAC;aACrG,CAAE,CAAC;SACP;KACJ;CACJ,CAAC,AAEF;;;;AClPA;;;;;;AAMA,IAAM,gBAAgB,GAA0B;IAC5C,UAAAA,UAAQ;IACR,MAAM,EAAE;QACJC,aAAe;KAClB;;;;IAID,UAAU,EAAE;QACR,4BAA4B,EAAE,wBAAwB;KACzD;IACD,OAAO,EAAE;;;;;QAKL,eAAe,YAAE,KAAa;YAC1B,IAAM,OAAO,GAAQ,IAAI,CAAC;YAE1B,OAAO,CAAE;gBACL,OAAO,EAAE,EAAE,CAAE,4CAA4C,CAAE;gBAC3D,OAAO,EAAE;oBACL,OAAO;wBACH,IAAM,SAAS,GAAQ,OAAO,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;wBAEnD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;wBAEtC,IAAK,SAAS,CAAC,IAAI,KAAK,WAAY,EAAE;4BAClC,OAAO,CAAC,iBAAiB,CAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC;yBACvD;wBAED,OAAO,CAAC,SAAS,CAAE,2BAA2B,CAAE,CAAC;qBACpD;iBACJ;aACJ,CAAE,CAAC;SACP;QAED,iBAAiB,YAAE,UAAkB;YACjC,IAAM,SAAS,GAAQ,IAAI,CAAC;YAE5B,OAAO,CAAE;gBACL,OAAO,EAAE,EAAE,CAAE,mFAAmF,CAAE,CAAC,OAAO,CAAE,IAAI,EAAE,UAAU,CAAE;gBAC9H,OAAO,EAAE;oBACL,OAAO;wBACH,SAAS,CAAC,SAAS,CAAE,4CAA4C,EAAE,UAAU,CAAE,CAAC;qBACnF;iBACJ;aACJ,CAAE,CAAC;SACP;KACJ;CACJ,CAAC,AAEF,AACA;;;;;;;"}