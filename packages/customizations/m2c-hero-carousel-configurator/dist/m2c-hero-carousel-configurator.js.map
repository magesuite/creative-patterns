{"version":3,"file":null,"sources":["../../../components/cc-component-configurator/src/cc-component-configurator.ts","../../../components/action-button/src/action-button.ts","../../../components/cc-component-actions/src/cc-component-actions.ts","../../../components/cc-component-adder/src/cc-component-adder.ts","../../../components/cc-component-placeholder/src/cc-component-placeholder.ts","../../../components/cc-hero-carousel-configurator/src/cc-hero-carousel-configurator.ts","../src/m2c-hero-carousel-configurator.ts"],"sourcesContent":["/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        },\n    },\n};\n\nexport default actionButton;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' ),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import template from './cc-hero-carousel-configurator.tpl';\n\nimport ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\n/**\n * Hero carousel configurator component.\n * This component is responsible for displaying image teaser's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccHeroCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: template,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [],\n                };\n            },\n        },\n    },\n};\n\nexport default ccHeroCarouselConfigurator;\n","import ccHeroCarouselConfigurator from '../../../components/cc-hero-carousel-configurator/src/cc-hero-carousel-configurator';\n\nimport $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\n// Pattern for teaser Item\nconst heroItemDataPattern: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: 'variant-1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'Check offer' ),\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * M2C skin for Hero configurator component.\n * This component is responsible for displaying hero carousel's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst m2cHeroCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccHeroCarouselConfigurator,\n    ],\n    template: `<div class=\"m2c-hero-carousel-configurator | {{ class }}\">\n        <section class=\"m2c-hero-carousel-configurator__section\">\n            <h3 class=\"m2c-hero-carousel-configurator__subtitle\">Mobile Devices Scenario</h3>\n            <div class=\"m2c-hero-carousel-configurator__scenario-options\">\n                <ul class=\"m2c-hero-carousel-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'm2c-hero-carousel-configurator__option--selected': configuration.mobileDisplayVariant.id == optionId,\n                        }\"\n                        class=\"m2c-hero-carousel-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.mobileDisplayVariant\"\n                        @click=\"setOption('mobileDisplayVariant', optionId)\">\n                        <div class=\"m2c-hero-carousel-configurator__option-wrapper\">\n                            <svg class=\"m2c-hero-carousel-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"m2c-hero-carousel-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <h3 class=\"m2c-hero-carousel-configurator__title\">Content</h3>\n\n        <cc-component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.items.length\">\n            <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( 0 )\">\n                <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                    <use xlink:href=\"#icon_plus\"></use>\n                </svg>\n            </button>\n        </cc-component-adder>\n\n        <template v-for=\"item in configuration.items\">\n            <div class=\"m2c-hero-carousel-configurator__item\" id=\"m2c-hero-carousel-item-{{ $index }}\">\n                <cc-component-adder class=\"cc-component-adder cc-component-adder--first\">\n                    <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( $index )\">\n                        <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </cc-component-adder>\n\n                <div class=\"m2c-hero-carousel-configurator__item-content\">\n                    <div v-bind:class=\"[ 'm2c-hero-carousel-configurator__item-col-left', configuration.items[$index].image ? 'm2c-hero-carousel-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                        <div class=\"m2c-hero-carousel-configurator__item-image-wrapper\">\n                            <img :src=\"configuration.items[$index].image\" class=\"m2c-hero-carousel-configurator__item-image\" v-show=\"configuration.items[$index].image\">\n                            <input type=\"hidden\" v-model=\"configuration.items[$index].image\">\n                            <input type=\"hidden\" class=\"m2c-hero-carousel-configurator__image-url\" id=\"hero-img-{{$index}}\">\n                            <svg class=\"m2c-hero-carousel-configurator__item-image-placeholder\" v-show=\"!configuration.items[$index].image\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n\n                            <div class=\"m2c-hero-carousel-configurator__item-actions\">\n                                <cc-component-actions>\n                                    <template slot=\"cc-component-actions__buttons\">\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | m2c-hero-carousel-configurator__item-action-button\" @click=\"moveHeroItemUp( $index )\" :class=\"[ isFirstHeroItem( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstHeroItem( $index )\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-up\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | m2c-hero-carousel-configurator__item-action-button\" @click=\"moveHeroItemDown( $index )\" :class=\"[ isLastHeroItem( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastHeroItem( $index )\">\n                                            <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-down\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | m2c-hero-carousel-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_upload-image\"></use>\n                                                </svg>\n                                                {{ configuration.items[$index].image ? imageUploadedText : noImageUploadedText }}\n                                        </button>\n                                        <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | m2c-hero-carousel-configurator__item-action-button\" @click=\"deleteHeroItem( $index )\">\n                                            <svg class=\"action-button__icon\">\n                                                <use xlink:href=\"#icon_trash-can\"></use>\n                                            </svg>\n                                        </button>\n                                    </template>\n                                </cc-component-actions>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"m2c-hero-carousel-configurator__item-col-right\">\n                        <div class=\"m2-input m2-input--group\">\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-variant\" class=\"m2-input__label\">${$t( 'Display variant' )}:</label>\n                                <select name=\"cfg-hc-item{{ $index }}-variant\" class=\"m2-input__select | m2c-hero-carousel-configurator__select\" id=\"cfg-hc-item{{ $index }}-variant\" v-model=\"configuration.items[$index].displayVariant\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"variant-1\">${$t( 'Text vertically centered on the left' )}</option>\n                                    <option value=\"variant-2\">${$t( 'Text vertically centered in the middle' )}</option>\n                                    <option value=\"variant-3\">${$t( 'Text on the bottom, left corner' )}</option>\n                                    <option value=\"variant-4\">${$t( 'Text on the bottom - centered' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-color-scheme\" class=\"m2-input__label\">${$t( 'Text color scheme' )}:</label>\n                                <select name=\"cfg-hc-item{{ $index }}-color-scheme\" class=\"m2-input__select | m2c-hero-carousel-configurator__select\" id=\"cfg-hc-item{{ $index }}-color-scheme\" v-model=\"configuration.items[$index].colorScheme\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"light\">${$t( 'Light' )}</option>\n                                    <option value=\"dark\">${$t( 'Dark' )}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__label\">${$t( 'Headline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__input\">\n                        </div>\n                        <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__label\">${$t( 'Subheadline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].subheadline\" id=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__input\">\n                        </div>\n                        <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__label\">${$t( 'Paragraph' )}:</label>\n                            <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__textarea\" placeholder=\"(${$t( 'max 200 characters' )})\" maxlength=\"200\"></textarea>\n                        </div>\n                        <div class=\"m2-input m2-input--group\">\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__label\">${$t( 'CTA label' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input m2-input--type-addon | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"hero-ctatarget-output-{{ $index }}\" class=\"m2-input__label\">${$t( 'CTA target link' )}:</label>\n                                <input type=\"text\" class=\"m2-input__input | m2c-hero-carousel-configurator__cta-target-link\" v-model=\"configuration.items[$index].href\" id=\"hero-ctatarget-output-{{ $index }}\">\n                                <span class=\"m2-input__addon | m2c-hero-carousel-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                    <svg class=\"m2-input__addon-icon\">\n                                        <use xlink:href=\"#icon_link\"></use>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <cc-component-adder class=\"cc-component-adder cc-component-adder--last\">\n                    <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( $index + 1 )\">\n                        <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </cc-component-adder>\n            </div>\n        </template>\n\n        <div class=\"m2c-hero-carousel-configurator__modal\" v-el:error-modal></div>\n    </div>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    mobileDisplayVariant: {},\n                    items: [ JSON.parse( JSON.stringify( heroItemDataPattern ) ) ],\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            imageUploadedText: $t( 'Change' ),\n            noImageUploadedText: $t( 'Upload' ),\n            scenarioOptions: {\n                // Mobile layout scenario elements.\n                mobileDisplayVariant: {\n                    'list': {\n                        name: 'Large teaser',\n                        iconId: 'ml_col',\n                    },\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                    },\n                },\n            },\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            this.cleanupConfiguration();\n            this.onSave();\n        },\n    },\n    methods: {\n        setOption( optionCategory: string, optionId: string ): void {\n            this.configuration[ optionCategory ] = this.scenarioOptions[ optionCategory ][ optionId ];\n            this.configuration[ optionCategory ].id = optionId;\n        },\n        /* Opens M2's built-in image manager modal\n         * Manages all images: image upload from hdd, select image that was already uploaded to server\n         * @param index {number} - index of image of hero item\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/hero-img-${index}/`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $( document ).on( 'change', '.m2c-hero-carousel-configurator__image-url', ( event: Event ): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded( event.target );\n                    setTimeout( (): void => {\n                        isAlreadyCalled = false;\n                    }, 100 );\n                }\n            } );\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match( '___directive\\/([a-zA-Z0-9]*)' )[ 1 ];\n            const imgEndpoint: string = this.imageEndpoint.replace( '{/encoded_image}', encodedImage );\n\n            this.configuration.items[ itemIndex ].decodedImage = Base64 ? Base64.decode( encodedImage ) : window.atob( encodedImage );\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                const ar: string = _this.getAspectRatio( img.naturalWidth, img.naturalHeight );\n                _this.configuration.items[ itemIndex ].image = img.getAttribute( 'src' );\n                _this.configuration.items[ itemIndex ].sizeInfo = `${img.naturalWidth}x${img.naturalHeight}px (${ar})`;\n                _this.configuration.items[ itemIndex ].aspectRatio = ar;\n                setTimeout( (): void => {\n                    _this.checkImageSizes();\n                    _this.onChange();\n                }, 400 );\n            };\n            img.src = imgEndpoint;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal( index: number ): void {\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/filter_widgets/Link/widget_target_id/hero-ctatarget-output-${index}` );\n            this.wWidgetListener( index );\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.href is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-hero-carousel-configurator__cta-target-link' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener( itemIndex: number ): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                const _this: any = this;\n                const button: any = widgetTools.dialogWindow[ 0 ].querySelector( '#insert_button' );\n\n                button.onclick = null;\n                button.addEventListener( 'click', function(): void {\n                    _this.configuration.items[ itemIndex ].href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                window.setTimeout( (): void => {\n                    this.wWidgetListener( itemIndex );\n                }, 300 );\n            }\n        },\n        /**\n         * Creates new hero item and adds it to a specified index.\n         * @param {number} index New component's index in components array.\n         */\n        createNewHeroItem( index: number ): void {\n            this.configuration.items.splice( index, 0, JSON.parse( JSON.stringify( heroItemDataPattern ) ) );\n            this.onChange();\n        },\n        /**\n         * Moves hero item under given index up by swaping it with previous element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveHeroItemUp( index: number ): void {\n            const _this: any = this;\n\n            if ( index > 0 ) {\n                const $thisItem: any = $( `#m2c-hero-carousel-item-${ index }` );\n                const $prevItem: any = $( `#m2c-hero-carousel-item-${ index - 1 }` );\n\n                $thisItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $prevItem.outerHeight( true ) ) }px )` );\n                $prevItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ $thisItem.outerHeight( true ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.items.splice( index - 1, 0, _this.configuration.items.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                    $prevItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Moves hero item under given index down by swaping it with next element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveHeroItemDown( index: number ): void {\n            const _this: any = this;\n\n            if ( index < this.configuration.items.length - 1 ) {\n                const $thisItem: any = $( `#m2c-hero-carousel-item-${ index }` );\n                const $nextItem: any = $( `#m2c-hero-carousel-item-${ index + 1 }` );\n\n                $thisItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ $nextItem.outerHeight( true ) }px )` );\n                $nextItem.addClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY( ${ -Math.abs( $thisItem.outerHeight( true ) ) }px )` );\n\n                setTimeout( (): void => {\n                    _this.configuration.items.splice( index + 1, 0, _this.configuration.items.splice( index, 1 )[ 0 ] );\n                    _this.onChange();\n                    $thisItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                    $nextItem.removeClass( 'm2c-hero-carousel-configurator__item--animating' ).css( 'transform', '' );\n                }, 400 );\n            }\n        },\n        /**\n         * Tells if item with given index is the first hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is first in array.\n         */\n        isFirstHeroItem( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if hero item with given index is the last hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is last in array.\n         */\n        isLastHeroItem( index: number ): boolean {\n            return index === this.configuration.items.length - 1;\n        },\n        /* Removes hero item after Delete button is clicked\n         * and triggers hero item's onChange to update it's configuration\n         * @param index {number} - index of hero item to remove\n         */\n        deleteHeroItem( index: number ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        component.configuration.items.splice( index, 1 );\n                        component.onChange();\n                    },\n                },\n            } );\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty hero items has to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            const filteredArray: any = this.configuration.items.filter( ( item: any ): any => item.image !== '' );\n            this.configuration.items = filteredArray;\n            this.onChange();\n        },\n        /* Checks if images are all the same size\n         * If not - displays error by firing up this.displayImageSizeMismatchError()\n         * @param images {array} - array of all uploaded images\n         */\n        checkImageSizes(): boolean {\n            const itemsToCheck = JSON.parse( JSON.stringify( this.configuration.items ) ).filter( ( item: any ): boolean => {\n                return Boolean( item.aspectRatio ); // Filter out items without aspect ratio set yet.\n            } );\n            \n            for ( let i: number = 0; i < itemsToCheck.length; i++ ) {\n                if ( itemsToCheck[ i ].aspectRatio !== itemsToCheck[ 0 ].aspectRatio ) {\n                    alert( {\n                        title: $t( 'Warning' ),\n                        content: $t( 'Images you have uploaded have different aspect ratio. This may cause this component to display wrong. We recommend to keep the same aspect ratio for all uploaded images.' ),\n                    } );\n                    return false;\n                }\n            }\n            return true;\n        },\n        /* Returns greatest common divisor for 2 numbers\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getGreatestCommonDivisor( a: number, b: number ): number {\n            if ( !b ) {\n                return a;\n            }\n\n            return this.getGreatestCommonDivisor( b, a % b );\n        },\n        /* Returns Aspect ratio for 2 numbers based on GDC algoritm (greatest common divisor)\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getAspectRatio( a: number, b: number ): string {\n            let c: number = this.getGreatestCommonDivisor( a, b );\n\n            return `${( a / c )}:${( b / c )}`;\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n\n        if ( !this.configuration.mobileDisplayVariant.id ) {\n            $( '.m2c-hero-carousel-configurator__option:first-child' ).click();\n        }\n    },\n};\n\nexport default m2cHeroCarouselConfigurator;\n"],"names":[],"mappings":"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"}