{"version":3,"file":null,"sources":["../../../components/cc-component-configurator/src/cc-component-configurator.ts","../../../components/action-button/src/action-button.ts","../../../components/cc-component-actions/src/cc-component-actions.ts","../../../components/cc-component-adder/src/cc-component-adder.ts","../../../components/cc-component-placeholder/src/cc-component-placeholder.ts","../../../components/cc-image-teaser-configurator/src/cc-image-teaser-configurator.ts","../src/m2c-image-teaser-configurator.ts"],"sourcesContent":["/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick( event: Event ): void {\n            this.$dispatch( 'action-button__click', event );\n        },\n    },\n};\n\nexport default actionButton;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: ( value: String ): String => value.replace( 'cc-component-actions', '' ),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce( value: string ): string {\n                return value.replace( 'cc-component-adder', '' );\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent( event: Event ): void {\n            this.$dispatch( 'cc-component-adder__create-component', event );\n            if ( typeof this.createComponent === 'function' ) {\n                this.createComponent( event );\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\nimport actionButton from '../../action-button/src/action-button';\n\nimport componentActions from '../../cc-component-actions/src/cc-component-actions';\nimport componentAdder from '../../cc-component-adder/src/cc-component-adder';\nimport componentPlaceholder from '../../cc-component-placeholder/src/cc-component-placeholder';\n\ninterface TeaserItem {\n    image: string;\n    decodedImage: string;\n    headline: string;\n    paragraph: string;\n    ctaLabel: string;\n    ctaTarget: string;\n};\n\n// Pattern for teaser Item\nconst teaserItemPrototype: any = {\n    image: '',\n    decodedImage: '',\n    headline: '',\n    paragraph: '',\n    ctaLabel: 'More',\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * Image teaser configurator component.\n * This component is responsible for displaying image teaser's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccImageTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    components: {\n        'action-button': actionButton,\n        'cc-component-adder': componentAdder,\n        'cc-component-actions': componentActions,\n        'cc-component-placeholder': componentPlaceholder,\n    },\n    template: `<form class=\"cc-image-teaser-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <section class=\"cc-image-teaser-configurator__section\">\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-it-width\" class=\"cs-input__label\">Teaser width:</label>\n                <select name=\"cfg-it-width-select\" class=\"cs-input__select\" id=\"cfg-it-width\" v-model=\"configuration.teaserWidth\" @change=\"onChange\">\n                    <option value=\"full-width\" selected>Full browser width</option>\n                    <option value=\"limited-width\">Breaking point width (1280px)</option>\n                </select>\n            </div>\n            <div class=\"cs-input cs-input--type-inline\">\n                <label for=\"cfg-it-images-per-slide\" class=\"cs-input__label\">Images per slide:</label>\n                <select name=\"cfg-it-images-per-slide\" class=\"cs-input__select\" id=\"cfg-it-images-per-slide\" v-model=\"configuration.itemsPerSlide\" @change=\"onChange\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </select>\n            </div>\n        </section>\n\n        <section class=\"cc-image-teaser-configurator__section\">\n            <div class=\"cc-image-teaser-configurator__teaser\">\n                <template v-for=\"item in configuration.items\">\n                    <div class=\"cc-image-teaser-configurator__teaser-item\" id=\"cc-image-teaser-item-{{ $index }}\">\n                        <div class=\"cc-image-teaser-configurator__toolbar\">\n                            <span class=\"cc-image-teaser-configurator__teaser-item-title\">Banner {{ $index+1 }}/{{ configuration.items.length }}</span>\n                            <a href=\"#\" class=\"cc-image-teaser-configurator__upload-link\" href=\"#\">Upload image</a>\n                        </div>\n                        <div class=\"cc-image-teaser-configurator__image-holder-outer\">\n                            <div class=\"cc-image-teaser-configurator__image-holder-inner\">\n                                <input type=\"hidden\" value=\"\" class=\"cc-image-teaser-configurator__image-url\" v-model=\"configuration.items[$index].image\" @change=\"onChange\">\n                            </div>\n                        </div>\n                        <div class=\"cs-input cs-input--type-required\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-headline\" class=\"cs-input__label\">Headline:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-it-teaser{{ $index+1 }}-headline\" class=\"cs-input__input\" @change=\"onChange\">\n                        </div>\n                        <div class=\"cs-input cs-input--type-required\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-paragraph\" class=\"cs-input__label\">Paragraph:</label>\n                            <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-it-teaser{{ $index+1 }}-paragraph\" class=\"cs-input__textarea cs-input__textarea--look-thin\" @change=\"onChange\" placeholder=\"(max 200 characters)\" maxlength=\"200\"></textarea>\n                        </div>\n                        <div class=\"cs-input\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-cta-label\" class=\"cs-input__label\">CTA label:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-it-teaser{{ $index+1 }}-cta-label\" class=\"cs-input__input\" @change=\"onChange\">\n                        </div>\n                        <div class=\"cs-input\">\n                            <label for=\"cfg-it-teaser{{ $index+1 }}-cta-target\" class=\"cs-input__label\">CTA target link:</label>\n                            <input type=\"text\" v-model=\"item.ctaTarget\" id=\"cfg-it-teaser{{ $index+1 }}-cta-target\" class=\"cs-input__input\" @change=\"onChange\">\n                        </div>\n                    </div>\n                </template>\n            </div>\n        </section>\n\n        <section class=\"cc-image-teaser-configurator__section cc-image-teaser-configurator__section--type-actions\">\n            <button type=\"submit\">Save</button>\n        </section>\n    </form>`,\n    data(): any {\n        return {\n            scenarioOptions: {\n                // Teaser width scenario elements.\n                teaserWidth: {\n                    'c': {\n                        name: 'Container width',\n                        iconId: 'tw_content-width',\n                        disabled: false,\n                        teasersLimit: true,\n                    },\n                    'w': {\n                        name: 'Window width',\n                        iconId: 'tw_window-width',\n                        disabled: false,\n                        teasersLimit: true,\n                    },\n                    'w-s': {\n                        name: 'Window slider',\n                        iconId: 'tw_window-slider',\n                        disabled: false,\n                        teasersLimit: false,\n                    },\n                },\n                // Desktop layout scenario elements.\n                desktopLayout: {\n                    '1': {\n                        name: '1 in row',\n                        iconId: 'dl_1',\n                        disabled: false,\n                        teasersNum: 1,\n                    },\n                    '2': {\n                        name: '2 in row',\n                        iconId: 'dl_2',\n                        disabled: false,\n                        teasersNum: 2,\n                    },\n                    '3': {\n                        name: '3 in row',\n                        iconId: 'dl_3',\n                        disabled: false,\n                        teasersNum: 3,\n                    },\n                    '4': {\n                        name: '4 in row',\n                        iconId: 'dl_4',\n                        disabled: false,\n                        teasersNum: 4,\n                    },\n                    '6': {\n                        name: '6 in row',\n                        iconId: 'dl_6',\n                        disabled: false,\n                        teasersNum: 6,\n                    },\n                },\n                // Text positioning scenario elements.\n                textPositioning: {\n                    'over': {\n                        name: 'Text over image',\n                        iconId: 'tl_over',\n                        disabled: false,\n                        textPosition: true,\n                    },\n                    'under': {\n                        name: 'Text below image',\n                        iconId: 'tl_under',\n                        disabled: false,\n                        textPosition: false,\n                    },\n                },\n\n                // Mobile layout scenario elements.\n                mobileLayout: {\n                    'large': {\n                        name: 'Large teaser',\n                        iconId: 'ml_col',\n                        disabled: false,\n                    },\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                        disabled: false,\n                    },\n                    'row': {\n                        name: 'Teasers in row',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                    'col': {\n                        name: 'Teasers in column',\n                        iconId: 'ml_col',\n                        disabled: false,\n                    },\n                    '1-2': {\n                        name: 'Big, two small',\n                        iconId: 'ml_1-2',\n                        disabled: false,\n                    },\n                    '2-2': {\n                        name: '2 in row, 2 rows',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                    '1-2-1': {\n                        name: 'Big, two small, big',\n                        iconId: 'ml_1-2',\n                        disabled: false,\n                    },\n                    '2-2-2': {\n                        name: '2 in row, 3 rows',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                },\n            },\n            availableScenarios: [\n                ['c', '1', 'over', ['large']],\n\n                ['c', '2', 'over', ['col', 'row', 'slider']],\n                ['c', '2', 'under', ['col']],\n\n                ['c', '3', 'over', ['col', 'slider', '1-2']],\n                ['c', '3', 'under', ['col']],\n\n                ['c', '4', 'over', ['2-2', 'slider', '1-2-1']],\n                ['c', '4', 'under', ['col']],\n\n                ['c', '6', 'over', ['2-2-2', 'slider']],\n                ['c', '6', 'under', ['2-2-2', 'slider']],\n\n                ['w', '1', 'over', ['large']],\n\n                ['w', '2', 'over', ['col', 'row', 'slider']],\n                ['w', '2', 'under', ['col']],\n\n                ['w', '3', 'over', ['col', 'slider', '1-2']],\n                ['w', '3', 'under', ['col']],\n\n                ['w', '4', 'over', ['2-2', 'slider', '1-2-1']],\n                ['w', '4', 'under', ['col']],\n\n                ['w-s', '1', 'over', ['slider']],\n\n                ['w-s', '2', 'over', ['slider']],\n                ['w-s', '2', 'under', ['slider']],\n\n                ['w-s', '3', 'over', ['slider']],\n                ['w-s', '3', 'under', ['slider']],\n\n                ['w-s', '4', 'over', ['slider']],\n                ['w-s', '4', 'under', ['slider']],\n            ],\n        };\n    },\n    props: {\n        /**\n         * Image teaser configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [ JSON.parse( JSON.stringify( teaserItemPrototype ) ) ],\n                    ignoredItems: [],\n                    currentScenario: {\n                        teaserWidth: {},\n                        desktopLayout: {},\n                        textPositioning: {},\n                        mobileLayout: {},\n                    },\n                };\n            },\n        },\n    },\n    created(): void {\n        if (this.configuration.ignoredItems === undefined) {\n            this.configuration.ignoredItems = [];\n        }\n    },\n    methods: {\n        _collectPossibleOptions(filteredScenarios: Array<Array<any>>): any {\n            const teaserWidthIndex: number = 0;\n            const desktopLayoutIndex: number = 1;\n            const textPositionIndex: number = 2;\n            const mobileLayoutsIndex: number = 3;\n            let possibleOptions: any = {\n                teaserWidth: {},\n                desktopLayout: {},\n                textPositioning: {},\n                mobileLayout: {},\n            };\n\n            filteredScenarios.forEach((filteredScenario: Array<any>) => {\n                possibleOptions.teaserWidth[filteredScenario[teaserWidthIndex]] = true;\n                possibleOptions.desktopLayout[filteredScenario[desktopLayoutIndex]] = true;\n                possibleOptions.textPositioning[filteredScenario[textPositionIndex]] = true;\n                filteredScenario[mobileLayoutsIndex].forEach((mobileLayout: string) => {\n                    possibleOptions.mobileLayout[mobileLayout] = true;\n                });\n            });\n\n            Object.keys(possibleOptions).forEach((scenarioElement: string): void => {\n                possibleOptions[scenarioElement] = Object.keys(possibleOptions[scenarioElement]);\n            });\n\n            return possibleOptions;\n        },\n\n        _findPossibleOptions(teaserWidth: string, desktopLayout: string, textPosition: string, mobileLayout: string): void {\n            const teaserWidthIndex: number = 0;\n            const desktopLayoutIndex: number = 1;\n            const textPositionIndex: number = 2;\n            const mobileLayoutsIndex: number = 3;\n            // Make a copy of available scenarios to prevent reference copying.\n            let filteredScenarios: Array<Array<string>> = JSON.parse(JSON.stringify(this.availableScenarios));\n\n            if (teaserWidth) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return availableScenario[teaserWidthIndex] === teaserWidth;\n                });\n            }\n\n            if (desktopLayout) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return availableScenario[desktopLayoutIndex] === desktopLayout;\n                });\n            }\n\n            if (textPosition) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return !textPosition || availableScenario[textPositionIndex] === textPosition;\n                });\n            }\n\n            if (mobileLayout) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return availableScenario[mobileLayoutsIndex].indexOf(mobileLayout) !== -1;\n                });\n                filteredScenarios = filteredScenarios.map((availableScenario: any) => {\n                    availableScenario[mobileLayoutsIndex] = [mobileLayout];\n                    return availableScenario;\n                });\n            }\n\n            return this._collectPossibleOptions(filteredScenarios);\n        },\n\n        toggleOption( optionCategory: string, optionId: string ): void {\n            if (this.configuration.currentScenario[optionCategory].id) {\n                this.configuration.currentScenario[optionCategory] = {};\n            } else {\n                this.configuration.currentScenario[optionCategory] = this.scenarioOptions[optionCategory][optionId];\n                this.configuration.currentScenario[optionCategory].id = optionId;\n            }\n\n            this.togglePossibleOptions();\n            this.adjustVisibleItems();\n        },\n\n        adjustVisibleItems(): void {\n            const items: Array<TeaserItem> = this.configuration.items;\n            const itemsNumber: number = this.configuration.currentScenario.desktopLayout.teasersNum;\n            const itemsLimit: boolean = this.configuration.currentScenario.teaserWidth.teasersLimit;\n\n            if ( itemsLimit && items.length > itemsNumber ) {\n                const removedItems: Array<any> = items.splice(itemsNumber, items.length - itemsNumber);\n                this.configuration.ignoredItems = removedItems.concat(this.configuration.ignoredItems);\n            } else if (items.length < itemsNumber) {\n                items.concat(this.configuration.ignoredItems.splice(0, itemsNumber - items.length));\n\n                for (let addedItems: number = 0; addedItems < itemsNumber - items.length; addedItems++) {\n                    items.push(JSON.parse(JSON.stringify(teaserItemPrototype)));\n                }\n            }\n        },\n\n        togglePossibleOptions(): void {\n            const currentScenario: any = this.configuration.currentScenario;\n            const possibleOptions: any = this._findPossibleOptions(\n                currentScenario.teaserWidth.id,\n                currentScenario.desktopLayout.id,\n                currentScenario.textPositioning.id,\n                currentScenario.mobileLayout.id,\n            );\n\n            Object.keys(this.scenarioOptions).forEach((optionCategory: string) => {\n                Object.keys(this.scenarioOptions[optionCategory]).forEach((scenarioOptionId: string) => {\n                    this.scenarioOptions[optionCategory][scenarioOptionId].disabled = possibleOptions[optionCategory].indexOf(scenarioOptionId) === -1;\n                });\n            });\n        },\n\n        canAddTeaser(): boolean {\n            const items: Array<TeaserItem> = this.configuration.items;\n            const itemsLimit: number = this.configuration.currentScenario.teaserWidth.teasersLimit;\n\n            return ( !itemsLimit || items.length < itemsLimit );\n        },\n    },\n};\n\nexport default ccImageTeaserConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport ccImageTeaserConfigurator from '../../../components/cc-image-teaser-configurator/src/cc-image-teaser-configurator';\n\n// Pattern for teaser Item\nconst teaserItemPrototype: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: '1',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'More' ),\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * M2C Image teaser component for admin panel.\n * This component is responsible for managing image teasers including image upload and widget chooser\n */\nconst m2cImageTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccImageTeaserConfigurator,\n    ],\n    template: `<div class=\"m2c-image-teaser-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Teaser Width</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.teaserWidth.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.teaserWidth\"\n                    @click=\"!option.disabled && toggleOption('teaserWidth', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n\n        </section>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Desktop Layout</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.desktopLayout.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.desktopLayout\"\n                    @click=\"!option.disabled && toggleOption('desktopLayout', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Text Positioning</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.textPositioning.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.textPositioning\"\n                    @click=\"!option.disabled && toggleOption('textPositioning', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <h3 class=\"m2c-image-teaser-configurator__subtitle\">Mobile Layout</h3>\n            <div class=\"m2c-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'm2c-image-teaser-configurator__option--selected': configuration.currentScenario.mobileLayout.id == optionId,\n                        'm2c-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"m2c-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.mobileLayout\"\n                    @click=\"!option.disabled && toggleOption('mobileLayout', optionId)\">\n                    <div class=\"m2c-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"m2c-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"m2c-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"m2c-image-teaser-configurator__section\">\n            <cc-component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.items.length\">\n                <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | cc-component-adder__button | m2c-hero-carousel-configurator__item-action-button\" @click=\"createTeaserItem( 0 )\">\n                    <svg class=\"action-button__icon action-button__icon--size_100 | cc-component-adder__button-icon\">\n                        <use v-bind=\"{ 'xlink:href': '#icon_plus' }\"></use>\n                    </svg>\n                </button>\n            </cc-component-adder>\n\n            <template v-for=\"item in configuration.items\">\n                <div class=\"m2c-image-teaser-configurator__item\" id=\"m2c-image-teaser-item-{{ $index }}\">\n                    <cc-component-adder class=\"cc-component-adder cc-component-adder--first\" v-if=\"canAddTeaser()\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | m2c-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( $index )\">\n                            <svg class=\"action-button__icon action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </cc-component-adder>\n\n                    <div class=\"m2c-image-teaser-configurator__item-content\">\n                        <div v-bind:class=\"[ 'm2c-image-teaser-configurator__item-col-left', configuration.items[$index].image ? 'm2c-image-teaser-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                            <div class=\"m2c-image-teaser-configurator__toolbar\">\n                                <span class=\"m2c-image-teaser-configurator__size-info\">{{ configuration.items[$index].sizeInfo }}</span>\n                                <template v-if=\"configuration.items[$index].image\">\n                                    <a href=\"#\" @click=\"getImageUploader( $index )\">${$t( 'Change image' )}</a>\n                                </template>\n                                <template v-else>\n                                    <a href=\"#\" @click=\"getImageUploader( $index )\">${$t( 'Upload image' )}</a>\n                                </template>\n                            </div>\n                            <div class=\"m2c-image-teaser-configurator__item-image-wrapper\">\n                                <img :src=\"configuration.items[$index].image\" class=\"m2c-image-teaser-configurator__item-image\" v-show=\"configuration.items[$index].image\">\n                                <input type=\"hidden\" v-model=\"configuration.items[$index].image\">\n                                <input type=\"hidden\" class=\"m2c-image-teaser-configurator__image-url\" id=\"image-teaser-img-{{$index}}\">\n\n                                <div class=\"m2c-image-teaser-configurator__item-actions\">\n                                    <cc-component-actions>\n                                        <template slot=\"cc-component-actions__buttons\">\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | m2c-image-teaser-configurator__item-action-button\" @click=\"moveImageTeaserUp( $index )\" :class=\"[ isFirstImageTeaser( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isFirstImageTeaser( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_arrow-up\"></use>\n                                                </svg>\n                                            </button>\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | m2c-image-teaser-configurator__item-action-button\" @click=\"moveImageTeaserDown( $index )\" :class=\"[ isLastImageTeaser( $index ) ? 'action-button--look_disabled' : '' ]\" :disabled=\"isLastImageTeaser( $index )\">\n                                                <svg class=\"action-button__icon action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_arrow-down\"></use>\n                                                </svg>\n                                            </button>\n                                            <button is=\"action-button\" class=\"action-button action-button--look_default action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | m2c-image-teaser-configurator__item-action-button\" @click=\"deleteTeaserItem( $index )\">\n                                                <svg class=\"action-button__icon\">\n                                                    <use xlink:href=\"#icon_trash-can\"></use>\n                                                </svg>\n                                            </button>\n                                        </template>\n                                    </cc-component-actions>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"m2c-image-teaser-configurator__item-col-right\">\n                            <div class=\"m2-input | m2c-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-it-item{{ $index }}-variant\" class=\"m2-input__label\">${$t( 'Display variant' )}:</label>\n                                <select name=\"cfg-it-item{{ $index }}-variant\" class=\"m2-input__select\" id=\"cfg-it-item{{ $index }}-variant\" v-model=\"configuration.items[$index].displayVariant\" v-bind=\"{ 'style': 'background-image: url( ' + assetsSrc + 'images/dropdown-arrows-bg.svg ), linear-gradient( #e3e3e3, #e3e3e3 ), linear-gradient( #adadad, #adadad )' }\">\n                                    <option value=\"1\">${$t( 'Text vertically centered on the left' )}</option>\n                                    <option value=\"3\">${$t( 'Text vertically centered in the middle' )}</option>\n                                    <option value=\"2\">${$t( 'Text on the bottom, left corner' )}</option>\n                                    <option value=\"4\">${$t( 'Text on the bottom - centered' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__label\">${$t( 'Headline' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-hc-item{{ $index }}-headline\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__label\">${$t( 'Subheadline' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].subheadline\" id=\"cfg-hc-item{{ $index }}-subheadline\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__label\">${$t( 'Paragraph' )}:</label>\n                                <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-hc-item{{ $index }}-paragraph\" class=\"m2-input__textarea\" placeholder=\"(max 200 characters)\" maxlength=\"200\"></textarea>\n                            </div>\n                            <div class=\"m2-input | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__label\">${$t( 'CTA label' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-hc-item{{ $index }}-cta-label\" class=\"m2-input__input\">\n                            </div>\n                            <div class=\"m2-input m2-input--type-addon | m2c-image-teaser-configurator__item-form-element\">\n                                <label for=\"image-teaser-ctatarget-output-{{ $index }}\" class=\"m2-input__label\">${$t( 'CTA target link' )}:</label>\n                                <input type=\"text\" class=\"m2-input__input m2-input--type-readonly | m2c-image-teaser-configurator__cta-target-link\" readonly v-model=\"configuration.items[$index].href\" id=\"image-teaser-ctatarget-output-{{ $index }}\">\n                                <span class=\"m2-input__addon | m2c-image-teaser-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                    <svg class=\"m2-input__addon-icon\">\n                                        <use xlink:href=\"#icon_link\"></use>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <cc-component-adder class=\"cc-component-adder cc-component-adder--last\" v-if=\"configuration.items.length && canAddTeaser()\">\n                        <button is=\"action-button\" class=\"action-button action-button--look_important action-button--type_icon-only | m2c-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( $index + 1 )\">\n                            <svg class=\"action-button__icon action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </cc-component-adder>\n                </div>\n            </template>\n        </section>\n    </div>`,\n    props: {\n        /**\n         * Image teaser configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [ JSON.parse( JSON.stringify( teaserItemPrototype ) ) ],\n                    ignoredItems: [],\n                    currentScenario: {\n                        teaserWidth: {},\n                        desktopLayout: {},\n                        textPositioning: {},\n                        mobileLayout: {},\n                    },\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            this.cleanupConfiguration();\n            this.onSave();\n        },\n    },\n    methods: {\n        /* Opens M2's built-in image manager modal.\n         * Manages all images: image upload from hdd, select image that was already uploaded to server.\n         * @param index {number} - index of image of image teaser.\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog( `${this.uploaderBaseUrl}target_element_id/image-teaser-img-${index}/`,\n                'auto',\n                'auto',\n                $t( 'Insert File...' ),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $( document ).on( 'change', '.m2c-image-teaser-configurator__image-url', ( event: Event ): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded( event.target );\n                    setTimeout( (): void => {\n                        isAlreadyCalled = false;\n                    }, 100 );\n                }\n            } );\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match( '___directive\\/([a-zA-Z0-9]*)' )[ 1 ];\n            const imgEndpoint: string = this.imageEndpoint.replace( '{/encoded_image}', encodedImage );\n\n            this.configuration.items[ itemIndex ].decodedImage = Base64 ? Base64.decode( encodedImage ) : window.atob( encodedImage );\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                const ar: string = _this.getAspectRatio( img.naturalWidth, img.naturalHeight );\n                _this.configuration.items[ itemIndex ].image = img.getAttribute( 'src' );\n                _this.configuration.items[ itemIndex ].sizeInfo = `${img.naturalWidth}x${img.naturalHeight}px (${ar})`;\n                _this.configuration.items[ itemIndex ].aspectRatio = ar;\n                _this.checkImageSizes();\n                _this.onChange();\n            };\n            img.src = imgEndpoint;\n        },\n\n        /* Creates another teaser item using teaserItemPrototype */\n        createTeaserItem( index: number ): void {\n            this.configuration.items.splice( index, 0, JSON.parse( JSON.stringify( teaserItemPrototype ) ) );\n            this.onChange();\n        },\n\n        /**\n         * Moves image teaser item under given index up by swaping it with previous element.\n         * @param {number} index Image teaser's index in array.\n         */\n        moveImageTeaserUp( index: number ): void {\n            if ( index > 0 ) {\n                this.configuration.items.splice( index - 1, 0, this.configuration.items.splice( index, 1 )[ 0 ] );\n                this.onChange();\n            }\n        },\n        /**\n         * Moves image teaser item under given index down by swaping it with next element.\n         * @param {number} index Image teaser's index in array.\n         */\n        moveImageTeaserDown( index: number ): void {\n            if ( index < this.configuration.items.length - 1 ) {\n                this.configuration.items.splice( index + 1, 0, this.configuration.items.splice( index, 1 )[ 0 ] );\n                this.onChange();\n            }\n        },\n        /**\n         * Tells if item with given index is the first image teaser.\n         * @param  {number}  index Index of the image teaser.\n         * @return {boolean}       If image teaser is first in array.\n         */\n        isFirstImageTeaser( index: number ): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if image teaser with given index is the last image teaser.\n         * @param  {number}  index Index of the image teaser.\n         * @return {boolean}       If image teaser is last in array.\n         */\n        isLastImageTeaser( index: number ): boolean {\n            return index === this.configuration.items.length - 1;\n        },\n\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal( index: number ): void {\n            const component: any = this;\n\n            widgetTools.openDialog( `${window.location.origin}/admin/admin/widget/index/widget_target_id/image-teaser-ctatarget-output-${index}` );\n\n            /* clean current value since widget chooser doesn't do that to allow multiple widgets\n             * we don't want that since this should be url for CTA */\n            component.configuration.items[ index ].ctaTarget = '';\n\n            this.wWidgetListener();\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.ctaTarget is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $( '.m2c-image-teaser-configurator__cta-target-link' ).on( 'change', (): void => {\n                component.onChange();\n            } );\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it\n         */\n        wWidgetListener(): void {\n            if ( typeof wWidget !== 'undefined' && widgetTools.dialogWindow[ 0 ].innerHTML !== '' ) {\n                this.disableNotLinksOptions();\n            } else {\n                setTimeout( this.wWidgetListener, 300 );\n            }\n        },\n        /*\n         * Hide all options in widget chooser that are not links\n         */\n        disableNotLinksOptions(): void {\n            if ( wWidget.widgetEl && wWidget.widgetEl.options ) {\n                $( wWidget.widgetEl.options ).each( function( i: boolean, el: any ): void {\n                    if ( el.value.split( '\\\\' ).pop() !== 'Link' && i !== 0 ) {\n                        $( el ).hide();\n                    }\n                } );\n            }\n        },\n\n        /* Checks if it's possible to display Delete button\n         * This function is used in component's template\n         * Button can be displayed only on items that have item uploaded\n         * @param index {number} - index of teaser item\n         * @returns Boolean\n         */\n        isPossibleToDelete( index: number ): Boolean {\n            if ( ( index !== 0 || this.configuration.items.length > 1 ) && this.configuration.items[ index ].image !== '' ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /* Removes teaser item after Delete button is clicked\n         * and triggers component's onChange to update it's configuration\n         * @param index {number} - index of teaser item to remove\n         */\n        deleteTeaserItem( index: number ): void {\n            const component: any = this;\n\n            confirm( {\n                content: $t( 'Are you sure you want to delete this item?' ),\n                actions: {\n                    confirm(): void {\n                        component.configuration.items.splice( index, 1 );\n                        component.onChange();\n                    },\n                },\n            } );\n        },\n\n        /* Checks if images are all the same size\n         * If not - displays error by firing up this.displayImageSizeMismatchError()\n         * @param images {array} - array of all uploaded images\n         */\n        checkImageSizes(): boolean {\n            const itemsToCheck = JSON.parse(JSON.stringify(this.configuration.items)).filter((item: any): boolean => {\n                return Boolean(item.aspectRatio); // Filter out items without aspect ratio set yet.\n            });\n            for ( let i: number = 0; i < itemsToCheck.length; i++ ) {\n                if ( itemsToCheck[ i ].aspectRatio !== itemsToCheck[ 0 ].aspectRatio ) {\n                    alert( {\n                        title: $t( 'Warning' ),\n                        content: $t( 'Images you have uploaded have different aspect ratio. This may cause this component to display wrong. We recommend all images uploaded to have the same aspect ratio.' ),\n                    } );\n                    return false;\n                }\n            }\n            return true;\n        },\n        /* Returns greatest common divisor for 2 numbers\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getGreatestCommonDivisor( a: number, b: number ): number {\n            if ( !b ) {\n                return a;\n            }\n\n            return this.getGreatestCommonDivisor( b, a % b );\n        },\n        /* Returns Aspect ratio for 2 numbers based on GDC algoritm (greatest common divisor)\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getAspectRatio( a: number, b: number ): string {\n            let c: number = this.getGreatestCommonDivisor( a, b );\n\n            return `${( a / c )}:${( b / c )}`;\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty teaser items has to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            this.configuration.items = this.configuration.items.filter( ( item: any ): any => item.image !== '' );\n            this.configuration.ignoredItems = this.configuration.ignoredItems.filter( ( item: any ): any => item.image !== '' );\n            this.onChange();\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n    },\n};\n\nexport default m2cImageTeaserConfigurator;\n"],"names":["teaserItemPrototype"],"mappings":"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"}