{"version":3,"file":null,"sources":["../../../components/cc-component-configurator/src/cc-component-configurator.ts","../../../components/cc-category-links-configurator/src/cc-category-links-configurator.ts","../src/m2c-category-links-configurator.ts"],"sourcesContent":["/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccComponentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [ String, Object, Array ],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__changed', data );\n            this.change( data );\n        },\n        onSave( event?: Event ): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse( JSON.stringify( this.configuration ) );\n            // Trigger event and callback.\n            this.$dispatch( 'cc-component-configurator__saved', data );\n            this.save( data );\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'cc-component-configurator__save'(): void {\n            if ( this._events['cc-component-configurator__save'].length === 1 ) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { ccComponentConfigurator };\nexport default ccComponentConfigurator;\n","import ccComponentConfigurator from '../../cc-component-configurator/src/cc-component-configurator';\n\n/**\n * Category links configurator component.\n * This component is responsible for displaying category links configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccCategoryLinksConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccComponentConfigurator,\n    ],\n    template: `<form class=\"cc-category-links-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-main_category_id\" class=\"cs-input__label\">Main category ID:</label>\n            <input type=\"text\" v-model=\"configuration.main_category_id\" id=\"cfg-main_category_id\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-sub_categories_ids\" class=\"cs-input__label\">Subcategories ID's:</label>\n            <input type=\"text\" v-model=\"configuration.sub_categories_ids\" id=\"cfg-sub_categories_ids\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cs-input cs-input--type-inline\">\n            <label for=\"cfg-shownumbers\" class=\"cs-input__label\">Show products count:</label>\n            <input type=\"checkbox\" v-model=\"configuration.shownumbers\" id=\"cfg-shownumbers\" class=\"cs-input__input\" @change=\"onChange\">\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default: {\n                main_category_id: '',\n                sub_categories_ids: '',\n                shownumbers: false,\n            },\n        },\n    },\n};\n\nexport default ccCategoryLinksConfigurator;\n","import ccCategoryLinksConfigurator from '../../../components/cc-category-links-configurator/src/cc-category-links-configurator';\n\nconst m2cCategoryLinksConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        ccCategoryLinksConfigurator,\n    ],\n    template: `<form class=\"m2c-category-links-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-main_category_id\" class=\"m2-input__label\">Main category ID:</label>\n            <input type=\"text\" v-model=\"configuration.main_category_id\" id=\"cfg-main_category_id\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-sub_categories_ids\" class=\"m2-input__label\">Subcategories ID's:</label>\n            <input type=\"text\" v-model=\"configuration.sub_categories_ids\" id=\"cfg-sub_categories_ids\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"m2-input m2-input--type-inline\">\n            <label for=\"cfg-shownumbers\" class=\"m2-input__label\">Show products count:</label>\n            <input type=\"checkbox\" v-model=\"configuration.shownumbers\" id=\"cfg-shownumbers\" class=\"m2-input__input\" @change=\"onChange\">\n        </div>\n    </form>`,\n};\n\nexport default m2cCategoryLinksConfigurator;\n"],"names":[],"mappings":";;;;;;AAAA;;;;;AAKA,IAAM,uBAAuB,GAA0B;IACnD,KAAK,EAAE;;;;QAIH,KAAK,EAAE;YACH,IAAI,EAAE,CAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE;YAC/B,OAAO,EAAE,EAAE;SACd;;;;;QAKD,IAAI,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,cAAgB,OAAA,cAAiB,OAAA,SAAS,GAAA,GAAA;SACtD;;;;;QAKD,MAAM,EAAE;YACJ,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,cAAgB,OAAA,cAAiB,OAAA,SAAS,GAAA,GAAA;SACtD;;;;QAID,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,iBAAU;SACpB;KACJ;IACD,OAAO,EAAE;QACL,QAAQ,YAAE,KAAa;;YAEnB,IAAM,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,aAAa,CAAE,CAAE,CAAC;;YAErE,IAAI,CAAC,SAAS,CAAE,oCAAoC,EAAE,IAAI,CAAE,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;SACvB;QACD,MAAM,YAAE,KAAa;;YAEjB,IAAM,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,aAAa,CAAE,CAAE,CAAC;;YAErE,IAAI,CAAC,SAAS,CAAE,kCAAkC,EAAE,IAAI,CAAE,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;SACrB;KACJ;IACD,MAAM,EAAE;;;;QAIJ,iCAAiC;YAC7B,IAAK,IAAI,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC,MAAM,KAAK,CAAE,EAAE;gBAChE,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;SACJ;KACJ;CACJ,CAAC,AAEF,AACA;;ACjEA;;;;;AAKA,IAAM,2BAA2B,GAA0B;IACvD,MAAM,EAAE;QACJ,uBAAuB;KAC1B;IACD,QAAQ,EAAE,qoCAcF;IACR,KAAK,EAAE;QACH,aAAa,EAAE;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE;gBACL,gBAAgB,EAAE,EAAE;gBACpB,kBAAkB,EAAE,EAAE;gBACtB,WAAW,EAAE,KAAK;aACrB;SACJ;KACJ;CACJ,CAAC,AAEF;;ACpCA,IAAM,4BAA4B,GAA0B;IACxD,MAAM,EAAE;QACJ,2BAA2B;KAC9B;IACD,QAAQ,EAAE,ulCAaF;CACX,CAAC,AAEF;;;;"}