{"version":3,"file":null,"sources":["../../../src/tests/unit/cs-toggler.ts"],"sourcesContent":["import {ITogglerSettings, Toggler} from '../../class.cs-toggler';\n\ndescribe('Toggler class', function () {\n    let elem: string = '<div class=\"elem\"></div>';\n    let selector: string = '.elem';\n    let togglerObj: Toggler = null;\n    let elemNode: HTMLElement = null;\n    let settings: ITogglerSettings = null;\n\n    beforeEach(function (): void {\n        document.write(elem);\n        elemNode = document.querySelector(selector)[0];\n\n    });\n\n    afterEach(function (): void {\n        elemNode.remove();\n    });\n\n    // Check if component has methods\n\n    // it('has show() method', function (): void {\n    //     settings = {\n    //         visibleClass: 'demoClass',\n    //     };\n    //     togglerObj = new Toggler(elemNode, settings);\n    //\n    //     expect(typeof togglerObj.show).toBe('function');\n    // });\n\n    // it('has hide() method', function (): void {\n    //     settings = {\n    //         visibleClass: 'demoClass',\n    //     };\n    //     togglerObj = new Toggler(elemNode, settings);\n    //\n    //     expect(typeof togglerObj.hide).toBe('function');\n    // });\n    //\n    // it('has isVisible() method', function (): void {\n    //     settings = {\n    //         visibleClass: 'demoClass',\n    //     };\n    //     togglerObj = new Toggler(elemNode, settings);\n    //\n    //     expect(typeof togglerObj.isVisible).toBe('function');\n    // });\n    //\n    // it('has toggle() method', function (): void {\n    //     settings = {\n    //         visibleClass: 'demoClass',\n    //     };\n    //     togglerObj = new Toggler(elemNode, settings);\n    //\n    //     expect(typeof togglerObj.toggle).toBe('function');\n    // });\n    //\n    // // Check if proper types are returned\n    //\n    // it('isVisible() method returns boolean', function (): void {\n    //     settings = {\n    //         visibleClass: 'demoClass',\n    //     };\n    //     togglerObj = new Toggler(elemNode, settings);\n    //\n    //     expect(typeof togglerObj.isVisible()).toBe('boolean');\n    // });\n    //\n    // it('isHidden() method returns boolean', function (): void {\n    //     settings = {\n    //         visibleClass: 'demoClass',\n    //     };\n    //     togglerObj = new Toggler(elemNode, settings);\n    //\n    //     expect(typeof togglerObj.isHidden()).toBe('boolean');\n    // });\n\n});\n"],"names":[],"mappings":";;;AAEA,QAAQ,CAAC,eAAe,EAAE;IACtB,IAAI,IAAI,GAAW,0BAA0B,CAAC;IAC9C,IAAI,QAAQ,GAAW,OAAO,CAAC;IAC/B,IAAI,UAAU,GAAY,IAAI,CAAC;IAC/B,IAAI,QAAQ,GAAgB,IAAI,CAAC;IACjC,IAAI,QAAQ,GAAqB,IAAI,CAAC;IAEtC,UAAU,CAAC;QACP,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrB,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAElD,CAAC,CAAC;IAEH,SAAS,CAAC;QACN,QAAQ,CAAC,MAAM,EAAE,CAAC;KACrB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4DN,CAAC,CAAC;;"}